!function(a, b) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
        if (!a.document) throw new Error("jQuery requires a window with a document");
        return b(a);
    } : b(a);
}("undefined" != typeof window ? window : this, function(a, b) {
    "use strict";
    var c = [], d = a.document, e = Object.getPrototypeOf, f = c.slice, g = c.concat, h = c.push, i = c.indexOf, j = {}, k = j.toString, l = j.hasOwnProperty, m = l.toString, n = m.call(Object), o = {};
    function p(a, b) {
        b = b || d;
        var c = b.createElement("script");
        c.text = a, b.head.appendChild(c).parentNode.removeChild(c);
    }
    var q = "3.2.1", r = function(a, b) {
        return new r.fn.init(a, b);
    }, s = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, t = /^-ms-/, u = /-([a-z])/g, v = function(a, b) {
        return b.toUpperCase();
    };
    r.fn = r.prototype = {
        jquery: q,
        constructor: r,
        length: 0,
        toArray: function() {
            return f.call(this);
        },
        get: function(a) {
            return null == a ? f.call(this) : a < 0 ? this[a + this.length] : this[a];
        },
        pushStack: function(a) {
            var b = r.merge(this.constructor(), a);
            return b.prevObject = this, b;
        },
        each: function(a) {
            return r.each(this, a);
        },
        map: function(a) {
            return this.pushStack(r.map(this, function(b, c) {
                return a.call(b, c, b);
            }));
        },
        slice: function() {
            return this.pushStack(f.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        eq: function(a) {
            var b = this.length, c = +a + (a < 0 ? b : 0);
            return this.pushStack(c >= 0 && c < b ? [ this[c] ] : []);
        },
        end: function() {
            return this.prevObject || this.constructor();
        },
        push: h,
        sort: c.sort,
        splice: c.splice
    }, r.extend = r.fn.extend = function() {
        var a, b, c, d, e, f, g = arguments[0] || {}, h = 1, i = arguments.length, j = !1;
        for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || r.isFunction(g) || (g = {}), 
        h === i && (g = this, h--); h < i; h++) if (null != (a = arguments[h])) for (b in a) c = g[b], 
        d = a[b], g !== d && (j && d && (r.isPlainObject(d) || (e = Array.isArray(d))) ? (e ? (e = !1, 
        f = c && Array.isArray(c) ? c : []) : f = c && r.isPlainObject(c) ? c : {}, g[b] = r.extend(j, f, d)) : void 0 !== d && (g[b] = d));
        return g;
    }, r.extend({
        expando: "jQuery" + (q + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(a) {
            throw new Error(a);
        },
        noop: function() {},
        isFunction: function(a) {
            return "function" === r.type(a);
        },
        isWindow: function(a) {
            return null != a && a === a.window;
        },
        isNumeric: function(a) {
            var b = r.type(a);
            return ("number" === b || "string" === b) && !isNaN(a - parseFloat(a));
        },
        isPlainObject: function(a) {
            var b, c;
            return !(!a || "[object Object]" !== k.call(a)) && (!(b = e(a)) || (c = l.call(b, "constructor") && b.constructor, 
            "function" == typeof c && m.call(c) === n));
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a) return !1;
            return !0;
        },
        type: function(a) {
            return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? j[k.call(a)] || "object" : typeof a;
        },
        globalEval: function(a) {
            p(a);
        },
        camelCase: function(a) {
            return a.replace(t, "ms-").replace(u, v);
        },
        each: function(a, b) {
            var c, d = 0;
            if (w(a)) {
                for (c = a.length; d < c; d++) if (b.call(a[d], d, a[d]) === !1) break;
            } else for (d in a) if (b.call(a[d], d, a[d]) === !1) break;
            return a;
        },
        trim: function(a) {
            return null == a ? "" : (a + "").replace(s, "");
        },
        makeArray: function(a, b) {
            var c = b || [];
            return null != a && (w(Object(a)) ? r.merge(c, "string" == typeof a ? [ a ] : a) : h.call(c, a)), 
            c;
        },
        inArray: function(a, b, c) {
            return null == b ? -1 : i.call(b, a, c);
        },
        merge: function(a, b) {
            for (var c = +b.length, d = 0, e = a.length; d < c; d++) a[e++] = b[d];
            return a.length = e, a;
        },
        grep: function(a, b, c) {
            for (var d, e = [], f = 0, g = a.length, h = !c; f < g; f++) d = !b(a[f], f), d !== h && e.push(a[f]);
            return e;
        },
        map: function(a, b, c) {
            var d, e, f = 0, h = [];
            if (w(a)) for (d = a.length; f < d; f++) e = b(a[f], f, c), null != e && h.push(e); else for (f in a) e = b(a[f], f, c), 
            null != e && h.push(e);
            return g.apply([], h);
        },
        guid: 1,
        proxy: function(a, b) {
            var c, d, e;
            if ("string" == typeof b && (c = a[b], b = a, a = c), r.isFunction(a)) return d = f.call(arguments, 2), 
            e = function() {
                return a.apply(b || this, d.concat(f.call(arguments)));
            }, e.guid = a.guid = a.guid || r.guid++, e;
        },
        now: Date.now,
        support: o
    }), "function" == typeof Symbol && (r.fn[Symbol.iterator] = c[Symbol.iterator]), 
    r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(a, b) {
        j["[object " + b + "]"] = b.toLowerCase();
    });
    function w(a) {
        var b = !!a && "length" in a && a.length, c = r.type(a);
        return "function" !== c && !r.isWindow(a) && ("array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a);
    }
    var x = function(a) {
        var b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u = "sizzle" + 1 * new Date(), v = a.document, w = 0, x = 0, y = ha(), z = ha(), A = ha(), B = function(a, b) {
            return a === b && (l = !0), 0;
        }, C = {}.hasOwnProperty, D = [], E = D.pop, F = D.push, G = D.push, H = D.slice, I = function(a, b) {
            for (var c = 0, d = a.length; c < d; c++) if (a[c] === b) return c;
            return -1;
        }, J = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", K = "[\\x20\\t\\r\\n\\f]", L = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+", M = "\\[" + K + "*(" + L + ")(?:" + K + "*([*^$|!~]?=)" + K + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + L + "))|)" + K + "*\\]", N = ":(" + L + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + M + ")*)|.*)\\)|)", O = new RegExp(K + "+", "g"), P = new RegExp("^" + K + "+|((?:^|[^\\\\])(?:\\\\.)*)" + K + "+$", "g"), Q = new RegExp("^" + K + "*," + K + "*"), R = new RegExp("^" + K + "*([>+~]|" + K + ")" + K + "*"), S = new RegExp("=" + K + "*([^\\]'\"]*?)" + K + "*\\]", "g"), T = new RegExp(N), U = new RegExp("^" + L + "$"), V = {
            ID: new RegExp("^#(" + L + ")"),
            CLASS: new RegExp("^\\.(" + L + ")"),
            TAG: new RegExp("^(" + L + "|[*])"),
            ATTR: new RegExp("^" + M),
            PSEUDO: new RegExp("^" + N),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + K + "*(even|odd|(([+-]|)(\\d*)n|)" + K + "*(?:([+-]|)" + K + "*(\\d+)|))" + K + "*\\)|)", "i"),
            bool: new RegExp("^(?:" + J + ")$", "i"),
            needsContext: new RegExp("^" + K + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + K + "*((?:-\\d)?\\d*)" + K + "*\\)|)(?=[^-]|$)", "i")
        }, W = /^(?:input|select|textarea|button)$/i, X = /^h\d$/i, Y = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, $ = /[+~]/, _ = new RegExp("\\\\([\\da-f]{1,6}" + K + "?|(" + K + ")|.)", "ig"), aa = function(a, b, c) {
            var d = "0x" + b - 65536;
            return d !== d || c ? b : d < 0 ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);
        }, ba = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ca = function(a, b) {
            return b ? "\0" === a ? "ï¿½" : a.slice(0, -1) + "\\" + a.charCodeAt(a.length - 1).toString(16) + " " : "\\" + a;
        }, da = function() {
            m();
        }, ea = ta(function(a) {
            return a.disabled === !0 && ("form" in a || "label" in a);
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            G.apply(D = H.call(v.childNodes), v.childNodes), D[v.childNodes.length].nodeType;
        } catch (fa) {
            G = {
                apply: D.length ? function(a, b) {
                    F.apply(a, H.call(b));
                } : function(a, b) {
                    var c = a.length, d = 0;
                    while (a[c++] = b[d++]) ;
                    a.length = c - 1;
                }
            };
        }
        function ga(a, b, d, e) {
            var f, h, j, k, l, o, r, s = b && b.ownerDocument, w = b ? b.nodeType : 9;
            if (d = d || [], "string" != typeof a || !a || 1 !== w && 9 !== w && 11 !== w) return d;
            if (!e && ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, p)) {
                if (11 !== w && (l = Z.exec(a))) if (f = l[1]) {
                    if (9 === w) {
                        if (!(j = b.getElementById(f))) return d;
                        if (j.id === f) return d.push(j), d;
                    } else if (s && (j = s.getElementById(f)) && t(b, j) && j.id === f) return d.push(j), 
                    d;
                } else {
                    if (l[2]) return G.apply(d, b.getElementsByTagName(a)), d;
                    if ((f = l[3]) && c.getElementsByClassName && b.getElementsByClassName) return G.apply(d, b.getElementsByClassName(f)), 
                    d;
                }
                if (c.qsa && !A[a + " "] && (!q || !q.test(a))) {
                    if (1 !== w) s = b, r = a; else if ("object" !== b.nodeName.toLowerCase()) {
                        (k = b.getAttribute("id")) ? k = k.replace(ba, ca) : b.setAttribute("id", k = u), 
                        o = g(a), h = o.length;
                        while (h--) o[h] = "#" + k + " " + sa(o[h]);
                        r = o.join(","), s = $.test(a) && qa(b.parentNode) || b;
                    }
                    if (r) try {
                        return G.apply(d, s.querySelectorAll(r)), d;
                    } catch (x) {} finally {
                        k === u && b.removeAttribute("id");
                    }
                }
            }
            return i(a.replace(P, "$1"), b, d, e);
        }
        function ha() {
            var a = [];
            function b(c, e) {
                return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;
            }
            return b;
        }
        function ia(a) {
            return a[u] = !0, a;
        }
        function ja(a) {
            var b = n.createElement("fieldset");
            try {
                return !!a(b);
            } catch (c) {
                return !1;
            } finally {
                b.parentNode && b.parentNode.removeChild(b), b = null;
            }
        }
        function ka(a, b) {
            var c = a.split("|"), e = c.length;
            while (e--) d.attrHandle[c[e]] = b;
        }
        function la(a, b) {
            var c = b && a, d = c && 1 === a.nodeType && 1 === b.nodeType && a.sourceIndex - b.sourceIndex;
            if (d) return d;
            if (c) while (c = c.nextSibling) if (c === b) return -1;
            return a ? 1 : -1;
        }
        function ma(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return "input" === c && b.type === a;
            };
        }
        function na(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return ("input" === c || "button" === c) && b.type === a;
            };
        }
        function oa(a) {
            return function(b) {
                return "form" in b ? b.parentNode && b.disabled === !1 ? "label" in b ? "label" in b.parentNode ? b.parentNode.disabled === a : b.disabled === a : b.isDisabled === a || b.isDisabled !== !a && ea(b) === a : b.disabled === a : "label" in b && b.disabled === a;
            };
        }
        function pa(a) {
            return ia(function(b) {
                return b = +b, ia(function(c, d) {
                    var e, f = a([], c.length, b), g = f.length;
                    while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e]));
                });
            });
        }
        function qa(a) {
            return a && "undefined" != typeof a.getElementsByTagName && a;
        }
        c = ga.support = {}, f = ga.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return !!b && "HTML" !== b.nodeName;
        }, m = ga.setDocument = function(a) {
            var b, e, g = a ? a.ownerDocument || a : v;
            return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = n.documentElement, 
            p = !f(n), v !== n && (e = n.defaultView) && e.top !== e && (e.addEventListener ? e.addEventListener("unload", da, !1) : e.attachEvent && e.attachEvent("onunload", da)), 
            c.attributes = ja(function(a) {
                return a.className = "i", !a.getAttribute("className");
            }), c.getElementsByTagName = ja(function(a) {
                return a.appendChild(n.createComment("")), !a.getElementsByTagName("*").length;
            }), c.getElementsByClassName = Y.test(n.getElementsByClassName), c.getById = ja(function(a) {
                return o.appendChild(a).id = u, !n.getElementsByName || !n.getElementsByName(u).length;
            }), c.getById ? (d.filter.ID = function(a) {
                var b = a.replace(_, aa);
                return function(a) {
                    return a.getAttribute("id") === b;
                };
            }, d.find.ID = function(a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c = b.getElementById(a);
                    return c ? [ c ] : [];
                }
            }) : (d.filter.ID = function(a) {
                var b = a.replace(_, aa);
                return function(a) {
                    var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
                    return c && c.value === b;
                };
            }, d.find.ID = function(a, b) {
                if ("undefined" != typeof b.getElementById && p) {
                    var c, d, e, f = b.getElementById(a);
                    if (f) {
                        if (c = f.getAttributeNode("id"), c && c.value === a) return [ f ];
                        e = b.getElementsByName(a), d = 0;
                        while (f = e[d++]) if (c = f.getAttributeNode("id"), c && c.value === a) return [ f ];
                    }
                    return [];
                }
            }), d.find.TAG = c.getElementsByTagName ? function(a, b) {
                return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;
            } : function(a, b) {
                var c, d = [], e = 0, f = b.getElementsByTagName(a);
                if ("*" === a) {
                    while (c = f[e++]) 1 === c.nodeType && d.push(c);
                    return d;
                }
                return f;
            }, d.find.CLASS = c.getElementsByClassName && function(a, b) {
                if ("undefined" != typeof b.getElementsByClassName && p) return b.getElementsByClassName(a);
            }, r = [], q = [], (c.qsa = Y.test(n.querySelectorAll)) && (ja(function(a) {
                o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\r\\' msallowcapture=''><option selected=''></option></select>", 
                a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + K + "*(?:''|\"\")"), 
                a.querySelectorAll("[selected]").length || q.push("\\[" + K + "*(?:value|" + J + ")"), 
                a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), 
                a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");
            }), ja(function(a) {
                a.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var b = n.createElement("input");
                b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + K + "*[*^$|!~]?="), 
                2 !== a.querySelectorAll(":enabled").length && q.push(":enabled", ":disabled"), 
                o.appendChild(a).disabled = !0, 2 !== a.querySelectorAll(":disabled").length && q.push(":enabled", ":disabled"), 
                a.querySelectorAll("*,:x"), q.push(",.*:");
            })), (c.matchesSelector = Y.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function(a) {
                c.disconnectedMatch = s.call(a, "*"), s.call(a, "[s!='']:x"), r.push("!=", N);
            }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), 
            b = Y.test(o.compareDocumentPosition), t = b || Y.test(o.contains) ? function(a, b) {
                var c = 9 === a.nodeType ? a.documentElement : a, d = b && b.parentNode;
                return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
            } : function(a, b) {
                if (b) while (b = b.parentNode) if (b === a) return !0;
                return !1;
            }, B = b ? function(a, b) {
                if (a === b) return l = !0, 0;
                var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
                return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 
                1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === n || a.ownerDocument === v && t(v, a) ? -1 : b === n || b.ownerDocument === v && t(v, b) ? 1 : k ? I(k, a) - I(k, b) : 0 : 4 & d ? -1 : 1);
            } : function(a, b) {
                if (a === b) return l = !0, 0;
                var c, d = 0, e = a.parentNode, f = b.parentNode, g = [ a ], h = [ b ];
                if (!e || !f) return a === n ? -1 : b === n ? 1 : e ? -1 : f ? 1 : k ? I(k, a) - I(k, b) : 0;
                if (e === f) return la(a, b);
                c = a;
                while (c = c.parentNode) g.unshift(c);
                c = b;
                while (c = c.parentNode) h.unshift(c);
                while (g[d] === h[d]) d++;
                return d ? la(g[d], h[d]) : g[d] === v ? -1 : h[d] === v ? 1 : 0;
            }, n) : n;
        }, ga.matches = function(a, b) {
            return ga(a, null, null, b);
        }, ga.matchesSelector = function(a, b) {
            if ((a.ownerDocument || a) !== n && m(a), b = b.replace(S, "='$1']"), c.matchesSelector && p && !A[b + " "] && (!r || !r.test(b)) && (!q || !q.test(b))) try {
                var d = s.call(a, b);
                if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType) return d;
            } catch (e) {}
            return ga(b, n, null, [ a ]).length > 0;
        }, ga.contains = function(a, b) {
            return (a.ownerDocument || a) !== n && m(a), t(a, b);
        }, ga.attr = function(a, b) {
            (a.ownerDocument || a) !== n && m(a);
            var e = d.attrHandle[b.toLowerCase()], f = e && C.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
            return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
        }, ga.escape = function(a) {
            return (a + "").replace(ba, ca);
        }, ga.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a);
        }, ga.uniqueSort = function(a) {
            var b, d = [], e = 0, f = 0;
            if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
                while (b = a[f++]) b === a[f] && (e = d.push(f));
                while (e--) a.splice(d[e], 1);
            }
            return k = null, a;
        }, e = ga.getText = function(a) {
            var b, c = "", d = 0, f = a.nodeType;
            if (f) {
                if (1 === f || 9 === f || 11 === f) {
                    if ("string" == typeof a.textContent) return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling) c += e(a);
                } else if (3 === f || 4 === f) return a.nodeValue;
            } else while (b = a[d++]) c += e(b);
            return c;
        }, d = ga.selectors = {
            cacheLength: 50,
            createPseudo: ia,
            match: V,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(_, aa), a[3] = (a[3] || a[4] || a[5] || "").replace(_, aa), 
                    "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), 
                    a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), 
                    a;
                },
                PSEUDO: function(a) {
                    var b, c = !a[6] && a[2];
                    return V.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && T.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), 
                    a[2] = c.slice(0, b)), a.slice(0, 3));
                }
            },
            filter: {
                TAG: function(a) {
                    var b = a.replace(_, aa).toLowerCase();
                    return "*" === a ? function() {
                        return !0;
                    } : function(a) {
                        return a.nodeName && a.nodeName.toLowerCase() === b;
                    };
                },
                CLASS: function(a) {
                    var b = y[a + " "];
                    return b || (b = new RegExp("(^|" + K + ")" + a + "(" + K + "|$)")) && y(a, function(a) {
                        return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");
                    });
                },
                ATTR: function(a, b, c) {
                    return function(d) {
                        var e = ga.attr(d, a);
                        return null == e ? "!=" === b : !b || (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(O, " ") + " ").indexOf(c) > -1 : "|=" === b && (e === c || e.slice(0, c.length + 1) === c + "-"));
                    };
                },
                CHILD: function(a, b, c, d, e) {
                    var f = "nth" !== a.slice(0, 3), g = "last" !== a.slice(-4), h = "of-type" === b;
                    return 1 === d && 0 === e ? function(a) {
                        return !!a.parentNode;
                    } : function(b, c, i) {
                        var j, k, l, m, n, o, p = f !== g ? "nextSibling" : "previousSibling", q = b.parentNode, r = h && b.nodeName.toLowerCase(), s = !i && !h, t = !1;
                        if (q) {
                            if (f) {
                                while (p) {
                                    m = b;
                                    while (m = m[p]) if (h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) return !1;
                                    o = p = "only" === a && !o && "nextSibling";
                                }
                                return !0;
                            }
                            if (o = [ g ? q.firstChild : q.lastChild ], g && s) {
                                m = q, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), j = k[a] || [], 
                                n = j[0] === w && j[1], t = n && j[2], m = n && q.childNodes[n];
                                while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if (1 === m.nodeType && ++t && m === b) {
                                    k[a] = [ w, n, t ];
                                    break;
                                }
                            } else if (s && (m = b, l = m[u] || (m[u] = {}), k = l[m.uniqueID] || (l[m.uniqueID] = {}), 
                            j = k[a] || [], n = j[0] === w && j[1], t = n), t === !1) while (m = ++n && m && m[p] || (t = n = 0) || o.pop()) if ((h ? m.nodeName.toLowerCase() === r : 1 === m.nodeType) && ++t && (s && (l = m[u] || (m[u] = {}), 
                            k = l[m.uniqueID] || (l[m.uniqueID] = {}), k[a] = [ w, t ]), m === b)) break;
                            return t -= e, t === d || t % d === 0 && t / d >= 0;
                        }
                    };
                },
                PSEUDO: function(a, b) {
                    var c, e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a);
                    return e[u] ? e(b) : e.length > 1 ? (c = [ a, a, "", b ], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function(a, c) {
                        var d, f = e(a, b), g = f.length;
                        while (g--) d = I(a, f[g]), a[d] = !(c[d] = f[g]);
                    }) : function(a) {
                        return e(a, 0, c);
                    }) : e;
                }
            },
            pseudos: {
                not: ia(function(a) {
                    var b = [], c = [], d = h(a.replace(P, "$1"));
                    return d[u] ? ia(function(a, b, c, e) {
                        var f, g = d(a, null, e, []), h = a.length;
                        while (h--) (f = g[h]) && (a[h] = !(b[h] = f));
                    }) : function(a, e, f) {
                        return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();
                    };
                }),
                has: ia(function(a) {
                    return function(b) {
                        return ga(a, b).length > 0;
                    };
                }),
                contains: ia(function(a) {
                    return a = a.replace(_, aa), function(b) {
                        return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
                    };
                }),
                lang: ia(function(a) {
                    return U.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(_, aa).toLowerCase(), 
                    function(b) {
                        var c;
                        do {
                            if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang")) return c = c.toLowerCase(), 
                            c === a || 0 === c.indexOf(a + "-");
                        } while ((b = b.parentNode) && 1 === b.nodeType);
                        return !1;
                    };
                }),
                target: function(b) {
                    var c = a.location && a.location.hash;
                    return c && c.slice(1) === b.id;
                },
                root: function(a) {
                    return a === o;
                },
                focus: function(a) {
                    return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
                },
                enabled: oa(!1),
                disabled: oa(!0),
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && !!a.checked || "option" === b && !!a.selected;
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
                },
                empty: function(a) {
                    for (a = a.firstChild; a; a = a.nextSibling) if (a.nodeType < 6) return !1;
                    return !0;
                },
                parent: function(a) {
                    return !d.pseudos.empty(a);
                },
                header: function(a) {
                    return X.test(a.nodeName);
                },
                input: function(a) {
                    return W.test(a.nodeName);
                },
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return "input" === b && "button" === a.type || "button" === b;
                },
                text: function(a) {
                    var b;
                    return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
                },
                first: pa(function() {
                    return [ 0 ];
                }),
                last: pa(function(a, b) {
                    return [ b - 1 ];
                }),
                eq: pa(function(a, b, c) {
                    return [ c < 0 ? c + b : c ];
                }),
                even: pa(function(a, b) {
                    for (var c = 0; c < b; c += 2) a.push(c);
                    return a;
                }),
                odd: pa(function(a, b) {
                    for (var c = 1; c < b; c += 2) a.push(c);
                    return a;
                }),
                lt: pa(function(a, b, c) {
                    for (var d = c < 0 ? c + b : c; --d >= 0; ) a.push(d);
                    return a;
                }),
                gt: pa(function(a, b, c) {
                    for (var d = c < 0 ? c + b : c; ++d < b; ) a.push(d);
                    return a;
                })
            }
        }, d.pseudos.nth = d.pseudos.eq;
        for (b in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) d.pseudos[b] = ma(b);
        for (b in {
            submit: !0,
            reset: !0
        }) d.pseudos[b] = na(b);
        function ra() {}
        ra.prototype = d.filters = d.pseudos, d.setFilters = new ra(), g = ga.tokenize = function(a, b) {
            var c, e, f, g, h, i, j, k = z[a + " "];
            if (k) return b ? 0 : k.slice(0);
            h = a, i = [], j = d.preFilter;
            while (h) {
                c && !(e = Q.exec(h)) || (e && (h = h.slice(e[0].length) || h), i.push(f = [])), 
                c = !1, (e = R.exec(h)) && (c = e.shift(), f.push({
                    value: c,
                    type: e[0].replace(P, " ")
                }), h = h.slice(c.length));
                for (g in d.filter) !(e = V[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), 
                f.push({
                    value: c,
                    type: g,
                    matches: e
                }), h = h.slice(c.length));
                if (!c) break;
            }
            return b ? h.length : h ? ga.error(a) : z(a, i).slice(0);
        };
        function sa(a) {
            for (var b = 0, c = a.length, d = ""; b < c; b++) d += a[b].value;
            return d;
        }
        function ta(a, b, c) {
            var d = b.dir, e = b.next, f = e || d, g = c && "parentNode" === f, h = x++;
            return b.first ? function(b, c, e) {
                while (b = b[d]) if (1 === b.nodeType || g) return a(b, c, e);
                return !1;
            } : function(b, c, i) {
                var j, k, l, m = [ w, h ];
                if (i) {
                    while (b = b[d]) if ((1 === b.nodeType || g) && a(b, c, i)) return !0;
                } else while (b = b[d]) if (1 === b.nodeType || g) if (l = b[u] || (b[u] = {}), 
                k = l[b.uniqueID] || (l[b.uniqueID] = {}), e && e === b.nodeName.toLowerCase()) b = b[d] || b; else {
                    if ((j = k[f]) && j[0] === w && j[1] === h) return m[2] = j[2];
                    if (k[f] = m, m[2] = a(b, c, i)) return !0;
                }
                return !1;
            };
        }
        function ua(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--) if (!a[e](b, c, d)) return !1;
                return !0;
            } : a[0];
        }
        function va(a, b, c) {
            for (var d = 0, e = b.length; d < e; d++) ga(a, b[d], c);
            return c;
        }
        function wa(a, b, c, d, e) {
            for (var f, g = [], h = 0, i = a.length, j = null != b; h < i; h++) (f = a[h]) && (c && !c(f, d, e) || (g.push(f), 
            j && b.push(h)));
            return g;
        }
        function xa(a, b, c, d, e, f) {
            return d && !d[u] && (d = xa(d)), e && !e[u] && (e = xa(e, f)), ia(function(f, g, h, i) {
                var j, k, l, m = [], n = [], o = g.length, p = f || va(b || "*", h.nodeType ? [ h ] : h, []), q = !a || !f && b ? p : wa(p, m, a, h, i), r = c ? e || (f ? a : o || d) ? [] : g : q;
                if (c && c(q, r, h, i), d) {
                    j = wa(r, n), d(j, [], h, i), k = j.length;
                    while (k--) (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
                }
                if (f) {
                    if (e || a) {
                        if (e) {
                            j = [], k = r.length;
                            while (k--) (l = r[k]) && j.push(q[k] = l);
                            e(null, r = [], j, i);
                        }
                        k = r.length;
                        while (k--) (l = r[k]) && (j = e ? I(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
                    }
                } else r = wa(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : G.apply(g, r);
            });
        }
        function ya(a) {
            for (var b, c, e, f = a.length, g = d.relative[a[0].type], h = g || d.relative[" "], i = g ? 1 : 0, k = ta(function(a) {
                return a === b;
            }, h, !0), l = ta(function(a) {
                return I(b, a) > -1;
            }, h, !0), m = [ function(a, c, d) {
                var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
                return b = null, e;
            } ]; i < f; i++) if (c = d.relative[a[i].type]) m = [ ta(ua(m), c) ]; else {
                if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
                    for (e = ++i; e < f; e++) if (d.relative[a[e].type]) break;
                    return xa(i > 1 && ua(m), i > 1 && sa(a.slice(0, i - 1).concat({
                        value: " " === a[i - 2].type ? "*" : ""
                    })).replace(P, "$1"), c, i < e && ya(a.slice(i, e)), e < f && ya(a = a.slice(e)), e < f && sa(a));
                }
                m.push(c);
            }
            return ua(m);
        }
        function za(a, b) {
            var c = b.length > 0, e = a.length > 0, f = function(f, g, h, i, k) {
                var l, o, q, r = 0, s = "0", t = f && [], u = [], v = j, x = f || e && d.find.TAG("*", k), y = w += null == v ? 1 : Math.random() || .1, z = x.length;
                for (k && (j = g === n || g || k); s !== z && null != (l = x[s]); s++) {
                    if (e && l) {
                        o = 0, g || l.ownerDocument === n || (m(l), h = !p);
                        while (q = a[o++]) if (q(l, g || n, h)) {
                            i.push(l);
                            break;
                        }
                        k && (w = y);
                    }
                    c && ((l = !q && l) && r--, f && t.push(l));
                }
                if (r += s, c && s !== r) {
                    o = 0;
                    while (q = b[o++]) q(t, u, g, h);
                    if (f) {
                        if (r > 0) while (s--) t[s] || u[s] || (u[s] = E.call(i));
                        u = wa(u);
                    }
                    G.apply(i, u), k && !f && u.length > 0 && r + b.length > 1 && ga.uniqueSort(i);
                }
                return k && (w = y, j = v), t;
            };
            return c ? ia(f) : f;
        }
        return h = ga.compile = function(a, b) {
            var c, d = [], e = [], f = A[a + " "];
            if (!f) {
                b || (b = g(a)), c = b.length;
                while (c--) f = ya(b[c]), f[u] ? d.push(f) : e.push(f);
                f = A(a, za(e, d)), f.selector = a;
            }
            return f;
        }, i = ga.select = function(a, b, c, e) {
            var f, i, j, k, l, m = "function" == typeof a && a, n = !e && g(a = m.selector || a);
            if (c = c || [], 1 === n.length) {
                if (i = n[0] = n[0].slice(0), i.length > 2 && "ID" === (j = i[0]).type && 9 === b.nodeType && p && d.relative[i[1].type]) {
                    if (b = (d.find.ID(j.matches[0].replace(_, aa), b) || [])[0], !b) return c;
                    m && (b = b.parentNode), a = a.slice(i.shift().value.length);
                }
                f = V.needsContext.test(a) ? 0 : i.length;
                while (f--) {
                    if (j = i[f], d.relative[k = j.type]) break;
                    if ((l = d.find[k]) && (e = l(j.matches[0].replace(_, aa), $.test(i[0].type) && qa(b.parentNode) || b))) {
                        if (i.splice(f, 1), a = e.length && sa(i), !a) return G.apply(c, e), c;
                        break;
                    }
                }
            }
            return (m || h(a, n))(e, b, !p, c, !b || $.test(a) && qa(b.parentNode) || b), c;
        }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, 
        m(), c.sortDetached = ja(function(a) {
            return 1 & a.compareDocumentPosition(n.createElement("fieldset"));
        }), ja(function(a) {
            return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href");
        }) || ka("type|href|height|width", function(a, b, c) {
            if (!c) return a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
        }), c.attributes && ja(function(a) {
            return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
        }) || ka("value", function(a, b, c) {
            if (!c && "input" === a.nodeName.toLowerCase()) return a.defaultValue;
        }), ja(function(a) {
            return null == a.getAttribute("disabled");
        }) || ka(J, function(a, b, c) {
            var d;
            if (!c) return a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
        }), ga;
    }(a);
    r.find = x, r.expr = x.selectors, r.expr[":"] = r.expr.pseudos, r.uniqueSort = r.unique = x.uniqueSort, 
    r.text = x.getText, r.isXMLDoc = x.isXML, r.contains = x.contains, r.escapeSelector = x.escape;
    var y = function(a, b, c) {
        var d = [], e = void 0 !== c;
        while ((a = a[b]) && 9 !== a.nodeType) if (1 === a.nodeType) {
            if (e && r(a).is(c)) break;
            d.push(a);
        }
        return d;
    }, z = function(a, b) {
        for (var c = []; a; a = a.nextSibling) 1 === a.nodeType && a !== b && c.push(a);
        return c;
    }, A = r.expr.match.needsContext;
    function B(a, b) {
        return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
    }
    var C = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i, D = /^.[^:#\[\.,]*$/;
    function E(a, b, c) {
        return r.isFunction(b) ? r.grep(a, function(a, d) {
            return !!b.call(a, d, a) !== c;
        }) : b.nodeType ? r.grep(a, function(a) {
            return a === b !== c;
        }) : "string" != typeof b ? r.grep(a, function(a) {
            return i.call(b, a) > -1 !== c;
        }) : D.test(b) ? r.filter(b, a, c) : (b = r.filter(b, a), r.grep(a, function(a) {
            return i.call(b, a) > -1 !== c && 1 === a.nodeType;
        }));
    }
    r.filter = function(a, b, c) {
        var d = b[0];
        return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? r.find.matchesSelector(d, a) ? [ d ] : [] : r.find.matches(a, r.grep(b, function(a) {
            return 1 === a.nodeType;
        }));
    }, r.fn.extend({
        find: function(a) {
            var b, c, d = this.length, e = this;
            if ("string" != typeof a) return this.pushStack(r(a).filter(function() {
                for (b = 0; b < d; b++) if (r.contains(e[b], this)) return !0;
            }));
            for (c = this.pushStack([]), b = 0; b < d; b++) r.find(a, e[b], c);
            return d > 1 ? r.uniqueSort(c) : c;
        },
        filter: function(a) {
            return this.pushStack(E(this, a || [], !1));
        },
        not: function(a) {
            return this.pushStack(E(this, a || [], !0));
        },
        is: function(a) {
            return !!E(this, "string" == typeof a && A.test(a) ? r(a) : a || [], !1).length;
        }
    });
    var F, G = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, H = r.fn.init = function(a, b, c) {
        var e, f;
        if (!a) return this;
        if (c = c || F, "string" == typeof a) {
            if (e = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [ null, a, null ] : G.exec(a), 
            !e || !e[1] && b) return !b || b.jquery ? (b || c).find(a) : this.constructor(b).find(a);
            if (e[1]) {
                if (b = b instanceof r ? b[0] : b, r.merge(this, r.parseHTML(e[1], b && b.nodeType ? b.ownerDocument || b : d, !0)), 
                C.test(e[1]) && r.isPlainObject(b)) for (e in b) r.isFunction(this[e]) ? this[e](b[e]) : this.attr(e, b[e]);
                return this;
            }
            return f = d.getElementById(e[2]), f && (this[0] = f, this.length = 1), this;
        }
        return a.nodeType ? (this[0] = a, this.length = 1, this) : r.isFunction(a) ? void 0 !== c.ready ? c.ready(a) : a(r) : r.makeArray(a, this);
    };
    H.prototype = r.fn, F = r(d);
    var I = /^(?:parents|prev(?:Until|All))/, J = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    r.fn.extend({
        has: function(a) {
            var b = r(a, this), c = b.length;
            return this.filter(function() {
                for (var a = 0; a < c; a++) if (r.contains(this, b[a])) return !0;
            });
        },
        closest: function(a, b) {
            var c, d = 0, e = this.length, f = [], g = "string" != typeof a && r(a);
            if (!A.test(a)) for (;d < e; d++) for (c = this[d]; c && c !== b; c = c.parentNode) if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && r.find.matchesSelector(c, a))) {
                f.push(c);
                break;
            }
            return this.pushStack(f.length > 1 ? r.uniqueSort(f) : f);
        },
        index: function(a) {
            return a ? "string" == typeof a ? i.call(r(a), this[0]) : i.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(a, b) {
            return this.pushStack(r.uniqueSort(r.merge(this.get(), r(a, b))));
        },
        addBack: function(a) {
            return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
        }
    });
    function K(a, b) {
        while ((a = a[b]) && 1 !== a.nodeType) ;
        return a;
    }
    r.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && 11 !== b.nodeType ? b : null;
        },
        parents: function(a) {
            return y(a, "parentNode");
        },
        parentsUntil: function(a, b, c) {
            return y(a, "parentNode", c);
        },
        next: function(a) {
            return K(a, "nextSibling");
        },
        prev: function(a) {
            return K(a, "previousSibling");
        },
        nextAll: function(a) {
            return y(a, "nextSibling");
        },
        prevAll: function(a) {
            return y(a, "previousSibling");
        },
        nextUntil: function(a, b, c) {
            return y(a, "nextSibling", c);
        },
        prevUntil: function(a, b, c) {
            return y(a, "previousSibling", c);
        },
        siblings: function(a) {
            return z((a.parentNode || {}).firstChild, a);
        },
        children: function(a) {
            return z(a.firstChild);
        },
        contents: function(a) {
            return B(a, "iframe") ? a.contentDocument : (B(a, "template") && (a = a.content || a), 
            r.merge([], a.childNodes));
        }
    }, function(a, b) {
        r.fn[a] = function(c, d) {
            var e = r.map(this, b, c);
            return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = r.filter(d, e)), 
            this.length > 1 && (J[a] || r.uniqueSort(e), I.test(a) && e.reverse()), this.pushStack(e);
        };
    });
    var L = /[^\x20\t\r\n\f]+/g;
    function M(a) {
        var b = {};
        return r.each(a.match(L) || [], function(a, c) {
            b[c] = !0;
        }), b;
    }
    r.Callbacks = function(a) {
        a = "string" == typeof a ? M(a) : r.extend({}, a);
        var b, c, d, e, f = [], g = [], h = -1, i = function() {
            for (e = e || a.once, d = b = !0; g.length; h = -1) {
                c = g.shift();
                while (++h < f.length) f[h].apply(c[0], c[1]) === !1 && a.stopOnFalse && (h = f.length, 
                c = !1);
            }
            a.memory || (c = !1), b = !1, e && (f = c ? [] : "");
        }, j = {
            add: function() {
                return f && (c && !b && (h = f.length - 1, g.push(c)), function d(b) {
                    r.each(b, function(b, c) {
                        r.isFunction(c) ? a.unique && j.has(c) || f.push(c) : c && c.length && "string" !== r.type(c) && d(c);
                    });
                }(arguments), c && !b && i()), this;
            },
            remove: function() {
                return r.each(arguments, function(a, b) {
                    var c;
                    while ((c = r.inArray(b, f, c)) > -1) f.splice(c, 1), c <= h && h--;
                }), this;
            },
            has: function(a) {
                return a ? r.inArray(a, f) > -1 : f.length > 0;
            },
            empty: function() {
                return f && (f = []), this;
            },
            disable: function() {
                return e = g = [], f = c = "", this;
            },
            disabled: function() {
                return !f;
            },
            lock: function() {
                return e = g = [], c || b || (f = c = ""), this;
            },
            locked: function() {
                return !!e;
            },
            fireWith: function(a, c) {
                return e || (c = c || [], c = [ a, c.slice ? c.slice() : c ], g.push(c), b || i()), 
                this;
            },
            fire: function() {
                return j.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!d;
            }
        };
        return j;
    };
    function N(a) {
        return a;
    }
    function O(a) {
        throw a;
    }
    function P(a, b, c, d) {
        var e;
        try {
            a && r.isFunction(e = a.promise) ? e.call(a).done(b).fail(c) : a && r.isFunction(e = a.then) ? e.call(a, b, c) : b.apply(void 0, [ a ].slice(d));
        } catch (a) {
            c.apply(void 0, [ a ]);
        }
    }
    r.extend({
        Deferred: function(b) {
            var c = [ [ "notify", "progress", r.Callbacks("memory"), r.Callbacks("memory"), 2 ], [ "resolve", "done", r.Callbacks("once memory"), r.Callbacks("once memory"), 0, "resolved" ], [ "reject", "fail", r.Callbacks("once memory"), r.Callbacks("once memory"), 1, "rejected" ] ], d = "pending", e = {
                state: function() {
                    return d;
                },
                always: function() {
                    return f.done(arguments).fail(arguments), this;
                },
                catch: function(a) {
                    return e.then(null, a);
                },
                pipe: function() {
                    var a = arguments;
                    return r.Deferred(function(b) {
                        r.each(c, function(c, d) {
                            var e = r.isFunction(a[d[4]]) && a[d[4]];
                            f[d[1]](function() {
                                var a = e && e.apply(this, arguments);
                                a && r.isFunction(a.promise) ? a.promise().progress(b.notify).done(b.resolve).fail(b.reject) : b[d[0] + "With"](this, e ? [ a ] : arguments);
                            });
                        }), a = null;
                    }).promise();
                },
                then: function(b, d, e) {
                    var f = 0;
                    function g(b, c, d, e) {
                        return function() {
                            var h = this, i = arguments, j = function() {
                                var a, j;
                                if (!(b < f)) {
                                    if (a = d.apply(h, i), a === c.promise()) throw new TypeError("Thenable self-resolution");
                                    j = a && ("object" == typeof a || "function" == typeof a) && a.then, r.isFunction(j) ? e ? j.call(a, g(f, c, N, e), g(f, c, O, e)) : (f++, 
                                    j.call(a, g(f, c, N, e), g(f, c, O, e), g(f, c, N, c.notifyWith))) : (d !== N && (h = void 0, 
                                    i = [ a ]), (e || c.resolveWith)(h, i));
                                }
                            }, k = e ? j : function() {
                                try {
                                    j();
                                } catch (a) {
                                    r.Deferred.exceptionHook && r.Deferred.exceptionHook(a, k.stackTrace), b + 1 >= f && (d !== O && (h = void 0, 
                                    i = [ a ]), c.rejectWith(h, i));
                                }
                            };
                            b ? k() : (r.Deferred.getStackHook && (k.stackTrace = r.Deferred.getStackHook()), 
                            a.setTimeout(k));
                        };
                    }
                    return r.Deferred(function(a) {
                        c[0][3].add(g(0, a, r.isFunction(e) ? e : N, a.notifyWith)), c[1][3].add(g(0, a, r.isFunction(b) ? b : N)), 
                        c[2][3].add(g(0, a, r.isFunction(d) ? d : O));
                    }).promise();
                },
                promise: function(a) {
                    return null != a ? r.extend(a, e) : e;
                }
            }, f = {};
            return r.each(c, function(a, b) {
                var g = b[2], h = b[5];
                e[b[1]] = g.add, h && g.add(function() {
                    d = h;
                }, c[3 - a][2].disable, c[0][2].lock), g.add(b[3].fire), f[b[0]] = function() {
                    return f[b[0] + "With"](this === f ? void 0 : this, arguments), this;
                }, f[b[0] + "With"] = g.fireWith;
            }), e.promise(f), b && b.call(f, f), f;
        },
        when: function(a) {
            var b = arguments.length, c = b, d = Array(c), e = f.call(arguments), g = r.Deferred(), h = function(a) {
                return function(c) {
                    d[a] = this, e[a] = arguments.length > 1 ? f.call(arguments) : c, --b || g.resolveWith(d, e);
                };
            };
            if (b <= 1 && (P(a, g.done(h(c)).resolve, g.reject, !b), "pending" === g.state() || r.isFunction(e[c] && e[c].then))) return g.then();
            while (c--) P(e[c], h(c), g.reject);
            return g.promise();
        }
    });
    var Q = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
    r.Deferred.exceptionHook = function(b, c) {
        a.console && a.console.warn && b && Q.test(b.name) && a.console.warn("jQuery.Deferred exception: " + b.message, b.stack, c);
    }, r.readyException = function(b) {
        a.setTimeout(function() {
            throw b;
        });
    };
    var R = r.Deferred();
    r.fn.ready = function(a) {
        return R.then(a)["catch"](function(a) {
            r.readyException(a);
        }), this;
    }, r.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(a) {
            (a === !0 ? --r.readyWait : r.isReady) || (r.isReady = !0, a !== !0 && --r.readyWait > 0 || R.resolveWith(d, [ r ]));
        }
    }), r.ready.then = R.then;
    function S() {
        d.removeEventListener("DOMContentLoaded", S), a.removeEventListener("load", S), 
        r.ready();
    }
    "complete" === d.readyState || "loading" !== d.readyState && !d.documentElement.doScroll ? a.setTimeout(r.ready) : (d.addEventListener("DOMContentLoaded", S), 
    a.addEventListener("load", S));
    var T = function(a, b, c, d, e, f, g) {
        var h = 0, i = a.length, j = null == c;
        if ("object" === r.type(c)) {
            e = !0;
            for (h in c) T(a, b, h, c[h], !0, f, g);
        } else if (void 0 !== d && (e = !0, r.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), 
        b = null) : (j = b, b = function(a, b, c) {
            return j.call(r(a), c);
        })), b)) for (;h < i; h++) b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
        return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
    }, U = function(a) {
        return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
    };
    function V() {
        this.expando = r.expando + V.uid++;
    }
    V.uid = 1, V.prototype = {
        cache: function(a) {
            var b = a[this.expando];
            return b || (b = {}, U(a) && (a.nodeType ? a[this.expando] = b : Object.defineProperty(a, this.expando, {
                value: b,
                configurable: !0
            }))), b;
        },
        set: function(a, b, c) {
            var d, e = this.cache(a);
            if ("string" == typeof b) e[r.camelCase(b)] = c; else for (d in b) e[r.camelCase(d)] = b[d];
            return e;
        },
        get: function(a, b) {
            return void 0 === b ? this.cache(a) : a[this.expando] && a[this.expando][r.camelCase(b)];
        },
        access: function(a, b, c) {
            return void 0 === b || b && "string" == typeof b && void 0 === c ? this.get(a, b) : (this.set(a, b, c), 
            void 0 !== c ? c : b);
        },
        remove: function(a, b) {
            var c, d = a[this.expando];
            if (void 0 !== d) {
                if (void 0 !== b) {
                    Array.isArray(b) ? b = b.map(r.camelCase) : (b = r.camelCase(b), b = b in d ? [ b ] : b.match(L) || []), 
                    c = b.length;
                    while (c--) delete d[b[c]];
                }
                (void 0 === b || r.isEmptyObject(d)) && (a.nodeType ? a[this.expando] = void 0 : delete a[this.expando]);
            }
        },
        hasData: function(a) {
            var b = a[this.expando];
            return void 0 !== b && !r.isEmptyObject(b);
        }
    };
    var W = new V(), X = new V(), Y = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Z = /[A-Z]/g;
    function $(a) {
        return "true" === a || "false" !== a && ("null" === a ? null : a === +a + "" ? +a : Y.test(a) ? JSON.parse(a) : a);
    }
    function _(a, b, c) {
        var d;
        if (void 0 === c && 1 === a.nodeType) if (d = "data-" + b.replace(Z, "-$&").toLowerCase(), 
        c = a.getAttribute(d), "string" == typeof c) {
            try {
                c = $(c);
            } catch (e) {}
            X.set(a, b, c);
        } else c = void 0;
        return c;
    }
    r.extend({
        hasData: function(a) {
            return X.hasData(a) || W.hasData(a);
        },
        data: function(a, b, c) {
            return X.access(a, b, c);
        },
        removeData: function(a, b) {
            X.remove(a, b);
        },
        _data: function(a, b, c) {
            return W.access(a, b, c);
        },
        _removeData: function(a, b) {
            W.remove(a, b);
        }
    }), r.fn.extend({
        data: function(a, b) {
            var c, d, e, f = this[0], g = f && f.attributes;
            if (void 0 === a) {
                if (this.length && (e = X.get(f), 1 === f.nodeType && !W.get(f, "hasDataAttrs"))) {
                    c = g.length;
                    while (c--) g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = r.camelCase(d.slice(5)), 
                    _(f, d, e[d])));
                    W.set(f, "hasDataAttrs", !0);
                }
                return e;
            }
            return "object" == typeof a ? this.each(function() {
                X.set(this, a);
            }) : T(this, function(b) {
                var c;
                if (f && void 0 === b) {
                    if (c = X.get(f, a), void 0 !== c) return c;
                    if (c = _(f, a), void 0 !== c) return c;
                } else this.each(function() {
                    X.set(this, a, b);
                });
            }, null, b, arguments.length > 1, null, !0);
        },
        removeData: function(a) {
            return this.each(function() {
                X.remove(this, a);
            });
        }
    }), r.extend({
        queue: function(a, b, c) {
            var d;
            if (a) return b = (b || "fx") + "queue", d = W.get(a, b), c && (!d || Array.isArray(c) ? d = W.access(a, b, r.makeArray(c)) : d.push(c)), 
            d || [];
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = r.queue(a, b), d = c.length, e = c.shift(), f = r._queueHooks(a, b), g = function() {
                r.dequeue(a, b);
            };
            "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), 
            delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return W.get(a, c) || W.access(a, c, {
                empty: r.Callbacks("once memory").add(function() {
                    W.remove(a, [ b + "queue", c ]);
                })
            });
        }
    }), r.fn.extend({
        queue: function(a, b) {
            var c = 2;
            return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? r.queue(this[0], a) : void 0 === b ? this : this.each(function() {
                var c = r.queue(this, a, b);
                r._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && r.dequeue(this, a);
            });
        },
        dequeue: function(a) {
            return this.each(function() {
                r.dequeue(this, a);
            });
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", []);
        },
        promise: function(a, b) {
            var c, d = 1, e = r.Deferred(), f = this, g = this.length, h = function() {
                --d || e.resolveWith(f, [ f ]);
            };
            "string" != typeof a && (b = a, a = void 0), a = a || "fx";
            while (g--) c = W.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
            return h(), e.promise(b);
        }
    });
    var aa = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, ba = new RegExp("^(?:([+-])=|)(" + aa + ")([a-z%]*)$", "i"), ca = [ "Top", "Right", "Bottom", "Left" ], da = function(a, b) {
        return a = b || a, "none" === a.style.display || "" === a.style.display && r.contains(a.ownerDocument, a) && "none" === r.css(a, "display");
    }, ea = function(a, b, c, d) {
        var e, f, g = {};
        for (f in b) g[f] = a.style[f], a.style[f] = b[f];
        e = c.apply(a, d || []);
        for (f in b) a.style[f] = g[f];
        return e;
    };
    function fa(a, b, c, d) {
        var e, f = 1, g = 20, h = d ? function() {
            return d.cur();
        } : function() {
            return r.css(a, b, "");
        }, i = h(), j = c && c[3] || (r.cssNumber[b] ? "" : "px"), k = (r.cssNumber[b] || "px" !== j && +i) && ba.exec(r.css(a, b));
        if (k && k[3] !== j) {
            j = j || k[3], c = c || [], k = +i || 1;
            do {
                f = f || ".5", k /= f, r.style(a, b, k + j);
            } while (f !== (f = h() / i) && 1 !== f && --g);
        }
        return c && (k = +k || +i || 0, e = c[1] ? k + (c[1] + 1) * c[2] : +c[2], d && (d.unit = j, 
        d.start = k, d.end = e)), e;
    }
    var ga = {};
    function ha(a) {
        var b, c = a.ownerDocument, d = a.nodeName, e = ga[d];
        return e ? e : (b = c.body.appendChild(c.createElement(d)), e = r.css(b, "display"), 
        b.parentNode.removeChild(b), "none" === e && (e = "block"), ga[d] = e, e);
    }
    function ia(a, b) {
        for (var c, d, e = [], f = 0, g = a.length; f < g; f++) d = a[f], d.style && (c = d.style.display, 
        b ? ("none" === c && (e[f] = W.get(d, "display") || null, e[f] || (d.style.display = "")), 
        "" === d.style.display && da(d) && (e[f] = ha(d))) : "none" !== c && (e[f] = "none", 
        W.set(d, "display", c)));
        for (f = 0; f < g; f++) null != e[f] && (a[f].style.display = e[f]);
        return a;
    }
    r.fn.extend({
        show: function() {
            return ia(this, !0);
        },
        hide: function() {
            return ia(this);
        },
        toggle: function(a) {
            return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
                da(this) ? r(this).show() : r(this).hide();
            });
        }
    });
    var ja = /^(?:checkbox|radio)$/i, ka = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i, la = /^$|\/(?:java|ecma)script/i, ma = {
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        thead: [ 1, "<table>", "</table>" ],
        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: [ 0, "", "" ]
    };
    ma.optgroup = ma.option, ma.tbody = ma.tfoot = ma.colgroup = ma.caption = ma.thead, 
    ma.th = ma.td;
    function na(a, b) {
        var c;
        return c = "undefined" != typeof a.getElementsByTagName ? a.getElementsByTagName(b || "*") : "undefined" != typeof a.querySelectorAll ? a.querySelectorAll(b || "*") : [], 
        void 0 === b || b && B(a, b) ? r.merge([ a ], c) : c;
    }
    function oa(a, b) {
        for (var c = 0, d = a.length; c < d; c++) W.set(a[c], "globalEval", !b || W.get(b[c], "globalEval"));
    }
    var pa = /<|&#?\w+;/;
    function qa(a, b, c, d, e) {
        for (var f, g, h, i, j, k, l = b.createDocumentFragment(), m = [], n = 0, o = a.length; n < o; n++) if (f = a[n], 
        f || 0 === f) if ("object" === r.type(f)) r.merge(m, f.nodeType ? [ f ] : f); else if (pa.test(f)) {
            g = g || l.appendChild(b.createElement("div")), h = (ka.exec(f) || [ "", "" ])[1].toLowerCase(), 
            i = ma[h] || ma._default, g.innerHTML = i[1] + r.htmlPrefilter(f) + i[2], k = i[0];
            while (k--) g = g.lastChild;
            r.merge(m, g.childNodes), g = l.firstChild, g.textContent = "";
        } else m.push(b.createTextNode(f));
        l.textContent = "", n = 0;
        while (f = m[n++]) if (d && r.inArray(f, d) > -1) e && e.push(f); else if (j = r.contains(f.ownerDocument, f), 
        g = na(l.appendChild(f), "script"), j && oa(g), c) {
            k = 0;
            while (f = g[k++]) la.test(f.type || "") && c.push(f);
        }
        return l;
    }
    !function() {
        var a = d.createDocumentFragment(), b = a.appendChild(d.createElement("div")), c = d.createElement("input");
        c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), 
        b.appendChild(c), o.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, 
        b.innerHTML = "<textarea>x</textarea>", o.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;
    }();
    var ra = d.documentElement, sa = /^key/, ta = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, ua = /^([^.]*)(?:\.(.+)|)/;
    function va() {
        return !0;
    }
    function wa() {
        return !1;
    }
    function xa() {
        try {
            return d.activeElement;
        } catch (a) {}
    }
    function ya(a, b, c, d, e, f) {
        var g, h;
        if ("object" == typeof b) {
            "string" != typeof c && (d = d || c, c = void 0);
            for (h in b) ya(a, h, c, d, b[h], f);
            return a;
        }
        if (null == d && null == e ? (e = c, d = c = void 0) : null == e && ("string" == typeof c ? (e = d, 
        d = void 0) : (e = d, d = c, c = void 0)), e === !1) e = wa; else if (!e) return a;
        return 1 === f && (g = e, e = function(a) {
            return r().off(a), g.apply(this, arguments);
        }, e.guid = g.guid || (g.guid = r.guid++)), a.each(function() {
            r.event.add(this, b, e, d, c);
        });
    }
    r.event = {
        global: {},
        add: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q = W.get(a);
            if (q) {
                c.handler && (f = c, c = f.handler, e = f.selector), e && r.find.matchesSelector(ra, e), 
                c.guid || (c.guid = r.guid++), (i = q.events) || (i = q.events = {}), (g = q.handle) || (g = q.handle = function(b) {
                    return "undefined" != typeof r && r.event.triggered !== b.type ? r.event.dispatch.apply(a, arguments) : void 0;
                }), b = (b || "").match(L) || [ "" ], j = b.length;
                while (j--) h = ua.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), 
                n && (l = r.event.special[n] || {}, n = (e ? l.delegateType : l.bindType) || n, 
                l = r.event.special[n] || {}, k = r.extend({
                    type: n,
                    origType: p,
                    data: d,
                    handler: c,
                    guid: c.guid,
                    selector: e,
                    needsContext: e && r.expr.match.needsContext.test(e),
                    namespace: o.join(".")
                }, f), (m = i[n]) || (m = i[n] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, o, g) !== !1 || a.addEventListener && a.addEventListener(n, g)), 
                l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), 
                r.event.global[n] = !0);
            }
        },
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, p, q = W.hasData(a) && W.get(a);
            if (q && (i = q.events)) {
                b = (b || "").match(L) || [ "" ], j = b.length;
                while (j--) if (h = ua.exec(b[j]) || [], n = p = h[1], o = (h[2] || "").split(".").sort(), 
                n) {
                    l = r.event.special[n] || {}, n = (d ? l.delegateType : l.bindType) || n, m = i[n] || [], 
                    h = h[2] && new RegExp("(^|\\.)" + o.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;
                    while (f--) k = m[f], !e && p !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), 
                    k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
                    g && !m.length && (l.teardown && l.teardown.call(a, o, q.handle) !== !1 || r.removeEvent(a, n, q.handle), 
                    delete i[n]);
                } else for (n in i) r.event.remove(a, n + b[j], c, d, !0);
                r.isEmptyObject(i) && W.remove(a, "handle events");
            }
        },
        dispatch: function(a) {
            var b = r.event.fix(a), c, d, e, f, g, h, i = new Array(arguments.length), j = (W.get(this, "events") || {})[b.type] || [], k = r.event.special[b.type] || {};
            for (i[0] = b, c = 1; c < arguments.length; c++) i[c] = arguments[c];
            if (b.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, b) !== !1) {
                h = r.event.handlers.call(this, b, j), c = 0;
                while ((f = h[c++]) && !b.isPropagationStopped()) {
                    b.currentTarget = f.elem, d = 0;
                    while ((g = f.handlers[d++]) && !b.isImmediatePropagationStopped()) b.rnamespace && !b.rnamespace.test(g.namespace) || (b.handleObj = g, 
                    b.data = g.data, e = ((r.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), 
                    void 0 !== e && (b.result = e) === !1 && (b.preventDefault(), b.stopPropagation()));
                }
                return k.postDispatch && k.postDispatch.call(this, b), b.result;
            }
        },
        handlers: function(a, b) {
            var c, d, e, f, g, h = [], i = b.delegateCount, j = a.target;
            if (i && j.nodeType && !("click" === a.type && a.button >= 1)) for (;j !== this; j = j.parentNode || this) if (1 === j.nodeType && ("click" !== a.type || j.disabled !== !0)) {
                for (f = [], g = {}, c = 0; c < i; c++) d = b[c], e = d.selector + " ", void 0 === g[e] && (g[e] = d.needsContext ? r(e, this).index(j) > -1 : r.find(e, this, null, [ j ]).length), 
                g[e] && f.push(d);
                f.length && h.push({
                    elem: j,
                    handlers: f
                });
            }
            return j = this, i < b.length && h.push({
                elem: j,
                handlers: b.slice(i)
            }), h;
        },
        addProp: function(a, b) {
            Object.defineProperty(r.Event.prototype, a, {
                enumerable: !0,
                configurable: !0,
                get: r.isFunction(b) ? function() {
                    if (this.originalEvent) return b(this.originalEvent);
                } : function() {
                    if (this.originalEvent) return this.originalEvent[a];
                },
                set: function(b) {
                    Object.defineProperty(this, a, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: b
                    });
                }
            });
        },
        fix: function(a) {
            return a[r.expando] ? a : new r.Event(a);
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                trigger: function() {
                    if (this !== xa() && this.focus) return this.focus(), !1;
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    if (this === xa() && this.blur) return this.blur(), !1;
                },
                delegateType: "focusout"
            },
            click: {
                trigger: function() {
                    if ("checkbox" === this.type && this.click && B(this, "input")) return this.click(), 
                    !1;
                },
                _default: function(a) {
                    return B(a.target, "a");
                }
            },
            beforeunload: {
                postDispatch: function(a) {
                    void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
                }
            }
        }
    }, r.removeEvent = function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c);
    }, r.Event = function(a, b) {
        return this instanceof r.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, 
        this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? va : wa, 
        this.target = a.target && 3 === a.target.nodeType ? a.target.parentNode : a.target, 
        this.currentTarget = a.currentTarget, this.relatedTarget = a.relatedTarget) : this.type = a, 
        b && r.extend(this, b), this.timeStamp = a && a.timeStamp || r.now(), void (this[r.expando] = !0)) : new r.Event(a, b);
    }, r.Event.prototype = {
        constructor: r.Event,
        isDefaultPrevented: wa,
        isPropagationStopped: wa,
        isImmediatePropagationStopped: wa,
        isSimulated: !1,
        preventDefault: function() {
            var a = this.originalEvent;
            this.isDefaultPrevented = va, a && !this.isSimulated && a.preventDefault();
        },
        stopPropagation: function() {
            var a = this.originalEvent;
            this.isPropagationStopped = va, a && !this.isSimulated && a.stopPropagation();
        },
        stopImmediatePropagation: function() {
            var a = this.originalEvent;
            this.isImmediatePropagationStopped = va, a && !this.isSimulated && a.stopImmediatePropagation(), 
            this.stopPropagation();
        }
    }, r.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(a) {
            var b = a.button;
            return null == a.which && sa.test(a.type) ? null != a.charCode ? a.charCode : a.keyCode : !a.which && void 0 !== b && ta.test(a.type) ? 1 & b ? 1 : 2 & b ? 3 : 4 & b ? 2 : 0 : a.which;
        }
    }, r.event.addProp), r.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(a, b) {
        r.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj;
                return e && (e === d || r.contains(d, e)) || (a.type = f.origType, c = f.handler.apply(this, arguments), 
                a.type = b), c;
            }
        };
    }), r.fn.extend({
        on: function(a, b, c, d) {
            return ya(this, a, b, c, d);
        },
        one: function(a, b, c, d) {
            return ya(this, a, b, c, d, 1);
        },
        off: function(a, b, c) {
            var d, e;
            if (a && a.preventDefault && a.handleObj) return d = a.handleObj, r(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), 
            this;
            if ("object" == typeof a) {
                for (e in a) this.off(e, b, a[e]);
                return this;
            }
            return b !== !1 && "function" != typeof b || (c = b, b = void 0), c === !1 && (c = wa), 
            this.each(function() {
                r.event.remove(this, a, c, b);
            });
        }
    });
    var za = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, Aa = /<script|<style|<link/i, Ba = /checked\s*(?:[^=]|=\s*.checked.)/i, Ca = /^true\/(.*)/, Da = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function Ea(a, b) {
        return B(a, "table") && B(11 !== b.nodeType ? b : b.firstChild, "tr") ? r(">tbody", a)[0] || a : a;
    }
    function Fa(a) {
        return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;
    }
    function Ga(a) {
        var b = Ca.exec(a.type);
        return b ? a.type = b[1] : a.removeAttribute("type"), a;
    }
    function Ha(a, b) {
        var c, d, e, f, g, h, i, j;
        if (1 === b.nodeType) {
            if (W.hasData(a) && (f = W.access(a), g = W.set(b, f), j = f.events)) {
                delete g.handle, g.events = {};
                for (e in j) for (c = 0, d = j[e].length; c < d; c++) r.event.add(b, e, j[e][c]);
            }
            X.hasData(a) && (h = X.access(a), i = r.extend({}, h), X.set(b, i));
        }
    }
    function Ia(a, b) {
        var c = b.nodeName.toLowerCase();
        "input" === c && ja.test(a.type) ? b.checked = a.checked : "input" !== c && "textarea" !== c || (b.defaultValue = a.defaultValue);
    }
    function Ja(a, b, c, d) {
        b = g.apply([], b);
        var e, f, h, i, j, k, l = 0, m = a.length, n = m - 1, q = b[0], s = r.isFunction(q);
        if (s || m > 1 && "string" == typeof q && !o.checkClone && Ba.test(q)) return a.each(function(e) {
            var f = a.eq(e);
            s && (b[0] = q.call(this, e, f.html())), Ja(f, b, c, d);
        });
        if (m && (e = qa(b, a[0].ownerDocument, !1, a, d), f = e.firstChild, 1 === e.childNodes.length && (e = f), 
        f || d)) {
            for (h = r.map(na(e, "script"), Fa), i = h.length; l < m; l++) j = e, l !== n && (j = r.clone(j, !0, !0), 
            i && r.merge(h, na(j, "script"))), c.call(a[l], j, l);
            if (i) for (k = h[h.length - 1].ownerDocument, r.map(h, Ga), l = 0; l < i; l++) j = h[l], 
            la.test(j.type || "") && !W.access(j, "globalEval") && r.contains(k, j) && (j.src ? r._evalUrl && r._evalUrl(j.src) : p(j.textContent.replace(Da, ""), k));
        }
        return a;
    }
    function Ka(a, b, c) {
        for (var d, e = b ? r.filter(b, a) : a, f = 0; null != (d = e[f]); f++) c || 1 !== d.nodeType || r.cleanData(na(d)), 
        d.parentNode && (c && r.contains(d.ownerDocument, d) && oa(na(d, "script")), d.parentNode.removeChild(d));
        return a;
    }
    r.extend({
        htmlPrefilter: function(a) {
            return a.replace(za, "<$1></$2>");
        },
        clone: function(a, b, c) {
            var d, e, f, g, h = a.cloneNode(!0), i = r.contains(a.ownerDocument, a);
            if (!(o.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || r.isXMLDoc(a))) for (g = na(h), 
            f = na(a), d = 0, e = f.length; d < e; d++) Ia(f[d], g[d]);
            if (b) if (c) for (f = f || na(a), g = g || na(h), d = 0, e = f.length; d < e; d++) Ha(f[d], g[d]); else Ha(a, h);
            return g = na(h, "script"), g.length > 0 && oa(g, !i && na(a, "script")), h;
        },
        cleanData: function(a) {
            for (var b, c, d, e = r.event.special, f = 0; void 0 !== (c = a[f]); f++) if (U(c)) {
                if (b = c[W.expando]) {
                    if (b.events) for (d in b.events) e[d] ? r.event.remove(c, d) : r.removeEvent(c, d, b.handle);
                    c[W.expando] = void 0;
                }
                c[X.expando] && (c[X.expando] = void 0);
            }
        }
    }), r.fn.extend({
        detach: function(a) {
            return Ka(this, a, !0);
        },
        remove: function(a) {
            return Ka(this, a);
        },
        text: function(a) {
            return T(this, function(a) {
                return void 0 === a ? r.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = a);
                });
            }, null, a, arguments.length);
        },
        append: function() {
            return Ja(this, arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = Ea(this, a);
                    b.appendChild(a);
                }
            });
        },
        prepend: function() {
            return Ja(this, arguments, function(a) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var b = Ea(this, a);
                    b.insertBefore(a, b.firstChild);
                }
            });
        },
        before: function() {
            return Ja(this, arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this);
            });
        },
        after: function() {
            return Ja(this, arguments, function(a) {
                this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
            });
        },
        empty: function() {
            for (var a, b = 0; null != (a = this[b]); b++) 1 === a.nodeType && (r.cleanData(na(a, !1)), 
            a.textContent = "");
            return this;
        },
        clone: function(a, b) {
            return a = null != a && a, b = null == b ? a : b, this.map(function() {
                return r.clone(this, a, b);
            });
        },
        html: function(a) {
            return T(this, function(a) {
                var b = this[0] || {}, c = 0, d = this.length;
                if (void 0 === a && 1 === b.nodeType) return b.innerHTML;
                if ("string" == typeof a && !Aa.test(a) && !ma[(ka.exec(a) || [ "", "" ])[1].toLowerCase()]) {
                    a = r.htmlPrefilter(a);
                    try {
                        for (;c < d; c++) b = this[c] || {}, 1 === b.nodeType && (r.cleanData(na(b, !1)), 
                        b.innerHTML = a);
                        b = 0;
                    } catch (e) {}
                }
                b && this.empty().append(a);
            }, null, a, arguments.length);
        },
        replaceWith: function() {
            var a = [];
            return Ja(this, arguments, function(b) {
                var c = this.parentNode;
                r.inArray(this, a) < 0 && (r.cleanData(na(this)), c && c.replaceChild(b, this));
            }, a);
        }
    }), r.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        r.fn[a] = function(a) {
            for (var c, d = [], e = r(a), f = e.length - 1, g = 0; g <= f; g++) c = g === f ? this : this.clone(!0), 
            r(e[g])[b](c), h.apply(d, c.get());
            return this.pushStack(d);
        };
    });
    var La = /^margin/, Ma = new RegExp("^(" + aa + ")(?!px)[a-z%]+$", "i"), Na = function(b) {
        var c = b.ownerDocument.defaultView;
        return c && c.opener || (c = a), c.getComputedStyle(b);
    };
    !function() {
        function b() {
            if (i) {
                i.style.cssText = "box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%", 
                i.innerHTML = "", ra.appendChild(h);
                var b = a.getComputedStyle(i);
                c = "1%" !== b.top, g = "2px" === b.marginLeft, e = "4px" === b.width, i.style.marginRight = "50%", 
                f = "4px" === b.marginRight, ra.removeChild(h), i = null;
            }
        }
        var c, e, f, g, h = d.createElement("div"), i = d.createElement("div");
        i.style && (i.style.backgroundClip = "content-box", i.cloneNode(!0).style.backgroundClip = "", 
        o.clearCloneStyle = "content-box" === i.style.backgroundClip, h.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute", 
        h.appendChild(i), r.extend(o, {
            pixelPosition: function() {
                return b(), c;
            },
            boxSizingReliable: function() {
                return b(), e;
            },
            pixelMarginRight: function() {
                return b(), f;
            },
            reliableMarginLeft: function() {
                return b(), g;
            }
        }));
    }();
    function Oa(a, b, c) {
        var d, e, f, g, h = a.style;
        return c = c || Na(a), c && (g = c.getPropertyValue(b) || c[b], "" !== g || r.contains(a.ownerDocument, a) || (g = r.style(a, b)), 
        !o.pixelMarginRight() && Ma.test(g) && La.test(b) && (d = h.width, e = h.minWidth, 
        f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, 
        h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g;
    }
    function Pa(a, b) {
        return {
            get: function() {
                return a() ? void delete this.get : (this.get = b).apply(this, arguments);
            }
        };
    }
    var Qa = /^(none|table(?!-c[ea]).+)/, Ra = /^--/, Sa = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, Ta = {
        letterSpacing: "0",
        fontWeight: "400"
    }, Ua = [ "Webkit", "Moz", "ms" ], Va = d.createElement("div").style;
    function Wa(a) {
        if (a in Va) return a;
        var b = a[0].toUpperCase() + a.slice(1), c = Ua.length;
        while (c--) if (a = Ua[c] + b, a in Va) return a;
    }
    function Xa(a) {
        var b = r.cssProps[a];
        return b || (b = r.cssProps[a] = Wa(a) || a), b;
    }
    function Ya(a, b, c) {
        var d = ba.exec(b);
        return d ? Math.max(0, d[2] - (c || 0)) + (d[3] || "px") : b;
    }
    function Za(a, b, c, d, e) {
        var f, g = 0;
        for (f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0; f < 4; f += 2) "margin" === c && (g += r.css(a, c + ca[f], !0, e)), 
        d ? ("content" === c && (g -= r.css(a, "padding" + ca[f], !0, e)), "margin" !== c && (g -= r.css(a, "border" + ca[f] + "Width", !0, e))) : (g += r.css(a, "padding" + ca[f], !0, e), 
        "padding" !== c && (g += r.css(a, "border" + ca[f] + "Width", !0, e)));
        return g;
    }
    function $a(a, b, c) {
        var d, e = Na(a), f = Oa(a, b, e), g = "border-box" === r.css(a, "boxSizing", !1, e);
        return Ma.test(f) ? f : (d = g && (o.boxSizingReliable() || f === a.style[b]), "auto" === f && (f = a["offset" + b[0].toUpperCase() + b.slice(1)]), 
        f = parseFloat(f) || 0, f + Za(a, b, c || (g ? "border" : "content"), d, e) + "px");
    }
    r.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = Oa(a, "opacity");
                        return "" === c ? "1" : c;
                    }
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            float: "cssFloat"
        },
        style: function(a, b, c, d) {
            if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
                var e, f, g, h = r.camelCase(b), i = Ra.test(b), j = a.style;
                return i || (b = Xa(h)), g = r.cssHooks[b] || r.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : j[b] : (f = typeof c, 
                "string" === f && (e = ba.exec(c)) && e[1] && (c = fa(a, b, e), f = "number"), null != c && c === c && ("number" === f && (c += e && e[3] || (r.cssNumber[h] ? "" : "px")), 
                o.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (j[b] = "inherit"), 
                g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i ? j.setProperty(b, c) : j[b] = c)), 
                void 0);
            }
        },
        css: function(a, b, c, d) {
            var e, f, g, h = r.camelCase(b), i = Ra.test(b);
            return i || (b = Xa(h)), g = r.cssHooks[b] || r.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), 
            void 0 === e && (e = Oa(a, b, d)), "normal" === e && b in Ta && (e = Ta[b]), "" === c || c ? (f = parseFloat(e), 
            c === !0 || isFinite(f) ? f || 0 : e) : e;
        }
    }), r.each([ "height", "width" ], function(a, b) {
        r.cssHooks[b] = {
            get: function(a, c, d) {
                if (c) return !Qa.test(r.css(a, "display")) || a.getClientRects().length && a.getBoundingClientRect().width ? $a(a, b, d) : ea(a, Sa, function() {
                    return $a(a, b, d);
                });
            },
            set: function(a, c, d) {
                var e, f = d && Na(a), g = d && Za(a, b, d, "border-box" === r.css(a, "boxSizing", !1, f), f);
                return g && (e = ba.exec(c)) && "px" !== (e[3] || "px") && (a.style[b] = c, c = r.css(a, b)), 
                Ya(a, c, g);
            }
        };
    }), r.cssHooks.marginLeft = Pa(o.reliableMarginLeft, function(a, b) {
        if (b) return (parseFloat(Oa(a, "marginLeft")) || a.getBoundingClientRect().left - ea(a, {
            marginLeft: 0
        }, function() {
            return a.getBoundingClientRect().left;
        })) + "px";
    }), r.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        r.cssHooks[a + b] = {
            expand: function(c) {
                for (var d = 0, e = {}, f = "string" == typeof c ? c.split(" ") : [ c ]; d < 4; d++) e[a + ca[d] + b] = f[d] || f[d - 2] || f[0];
                return e;
            }
        }, La.test(a) || (r.cssHooks[a + b].set = Ya);
    }), r.fn.extend({
        css: function(a, b) {
            return T(this, function(a, b, c) {
                var d, e, f = {}, g = 0;
                if (Array.isArray(b)) {
                    for (d = Na(a), e = b.length; g < e; g++) f[b[g]] = r.css(a, b[g], !1, d);
                    return f;
                }
                return void 0 !== c ? r.style(a, b, c) : r.css(a, b);
            }, a, b, arguments.length > 1);
        }
    });
    function _a(a, b, c, d, e) {
        return new _a.prototype.init(a, b, c, d, e);
    }
    r.Tween = _a, _a.prototype = {
        constructor: _a,
        init: function(a, b, c, d, e, f) {
            this.elem = a, this.prop = c, this.easing = e || r.easing._default, this.options = b, 
            this.start = this.now = this.cur(), this.end = d, this.unit = f || (r.cssNumber[c] ? "" : "px");
        },
        cur: function() {
            var a = _a.propHooks[this.prop];
            return a && a.get ? a.get(this) : _a.propHooks._default.get(this);
        },
        run: function(a) {
            var b, c = _a.propHooks[this.prop];
            return this.options.duration ? this.pos = b = r.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, 
            this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            c && c.set ? c.set(this) : _a.propHooks._default.set(this), this;
        }
    }, _a.prototype.init.prototype = _a.prototype, _a.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return 1 !== a.elem.nodeType || null != a.elem[a.prop] && null == a.elem.style[a.prop] ? a.elem[a.prop] : (b = r.css(a.elem, a.prop, ""), 
                b && "auto" !== b ? b : 0);
            },
            set: function(a) {
                r.fx.step[a.prop] ? r.fx.step[a.prop](a) : 1 !== a.elem.nodeType || null == a.elem.style[r.cssProps[a.prop]] && !r.cssHooks[a.prop] ? a.elem[a.prop] = a.now : r.style(a.elem, a.prop, a.now + a.unit);
            }
        }
    }, _a.propHooks.scrollTop = _a.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
        }
    }, r.easing = {
        linear: function(a) {
            return a;
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2;
        },
        _default: "swing"
    }, r.fx = _a.prototype.init, r.fx.step = {};
    var ab, bb, cb = /^(?:toggle|show|hide)$/, db = /queueHooks$/;
    function eb() {
        bb && (d.hidden === !1 && a.requestAnimationFrame ? a.requestAnimationFrame(eb) : a.setTimeout(eb, r.fx.interval), 
        r.fx.tick());
    }
    function fb() {
        return a.setTimeout(function() {
            ab = void 0;
        }), ab = r.now();
    }
    function gb(a, b) {
        var c, d = 0, e = {
            height: a
        };
        for (b = b ? 1 : 0; d < 4; d += 2 - b) c = ca[d], e["margin" + c] = e["padding" + c] = a;
        return b && (e.opacity = e.width = a), e;
    }
    function hb(a, b, c) {
        for (var d, e = (kb.tweeners[b] || []).concat(kb.tweeners["*"]), f = 0, g = e.length; f < g; f++) if (d = e[f].call(c, b, a)) return d;
    }
    function ib(a, b, c) {
        var d, e, f, g, h, i, j, k, l = "width" in b || "height" in b, m = this, n = {}, o = a.style, p = a.nodeType && da(a), q = W.get(a, "fxshow");
        c.queue || (g = r._queueHooks(a, "fx"), null == g.unqueued && (g.unqueued = 0, h = g.empty.fire, 
        g.empty.fire = function() {
            g.unqueued || h();
        }), g.unqueued++, m.always(function() {
            m.always(function() {
                g.unqueued--, r.queue(a, "fx").length || g.empty.fire();
            });
        }));
        for (d in b) if (e = b[d], cb.test(e)) {
            if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
                if ("show" !== e || !q || void 0 === q[d]) continue;
                p = !0;
            }
            n[d] = q && q[d] || r.style(a, d);
        }
        if (i = !r.isEmptyObject(b), i || !r.isEmptyObject(n)) {
            l && 1 === a.nodeType && (c.overflow = [ o.overflow, o.overflowX, o.overflowY ], 
            j = q && q.display, null == j && (j = W.get(a, "display")), k = r.css(a, "display"), 
            "none" === k && (j ? k = j : (ia([ a ], !0), j = a.style.display || j, k = r.css(a, "display"), 
            ia([ a ]))), ("inline" === k || "inline-block" === k && null != j) && "none" === r.css(a, "float") && (i || (m.done(function() {
                o.display = j;
            }), null == j && (k = o.display, j = "none" === k ? "" : k)), o.display = "inline-block")), 
            c.overflow && (o.overflow = "hidden", m.always(function() {
                o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];
            })), i = !1;
            for (d in n) i || (q ? "hidden" in q && (p = q.hidden) : q = W.access(a, "fxshow", {
                display: j
            }), f && (q.hidden = !p), p && ia([ a ], !0), m.done(function() {
                p || ia([ a ]), W.remove(a, "fxshow");
                for (d in n) r.style(a, d, n[d]);
            })), i = hb(p ? q[d] : 0, d, m), d in q || (q[d] = i.start, p && (i.end = i.start, 
            i.start = 0));
        }
    }
    function jb(a, b) {
        var c, d, e, f, g;
        for (c in a) if (d = r.camelCase(c), e = b[d], f = a[c], Array.isArray(f) && (e = f[1], 
        f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = r.cssHooks[d], g && "expand" in g) {
            f = g.expand(f), delete a[d];
            for (c in f) c in a || (a[c] = f[c], b[c] = e);
        } else b[d] = e;
    }
    function kb(a, b, c) {
        var d, e, f = 0, g = kb.prefilters.length, h = r.Deferred().always(function() {
            delete i.elem;
        }), i = function() {
            if (e) return !1;
            for (var b = ab || fb(), c = Math.max(0, j.startTime + j.duration - b), d = c / j.duration || 0, f = 1 - d, g = 0, i = j.tweens.length; g < i; g++) j.tweens[g].run(f);
            return h.notifyWith(a, [ j, f, c ]), f < 1 && i ? c : (i || h.notifyWith(a, [ j, 1, 0 ]), 
            h.resolveWith(a, [ j ]), !1);
        }, j = h.promise({
            elem: a,
            props: r.extend({}, b),
            opts: r.extend(!0, {
                specialEasing: {},
                easing: r.easing._default
            }, c),
            originalProperties: b,
            originalOptions: c,
            startTime: ab || fb(),
            duration: c.duration,
            tweens: [],
            createTween: function(b, c) {
                var d = r.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(d), d;
            },
            stop: function(b) {
                var c = 0, d = b ? j.tweens.length : 0;
                if (e) return this;
                for (e = !0; c < d; c++) j.tweens[c].run(1);
                return b ? (h.notifyWith(a, [ j, 1, 0 ]), h.resolveWith(a, [ j, b ])) : h.rejectWith(a, [ j, b ]), 
                this;
            }
        }), k = j.props;
        for (jb(k, j.opts.specialEasing); f < g; f++) if (d = kb.prefilters[f].call(j, a, k, j.opts)) return r.isFunction(d.stop) && (r._queueHooks(j.elem, j.opts.queue).stop = r.proxy(d.stop, d)), 
        d;
        return r.map(k, hb, j), r.isFunction(j.opts.start) && j.opts.start.call(a, j), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always), 
        r.fx.timer(r.extend(i, {
            elem: a,
            anim: j,
            queue: j.opts.queue
        })), j;
    }
    r.Animation = r.extend(kb, {
        tweeners: {
            "*": [ function(a, b) {
                var c = this.createTween(a, b);
                return fa(c.elem, a, ba.exec(b), c), c;
            } ]
        },
        tweener: function(a, b) {
            r.isFunction(a) ? (b = a, a = [ "*" ]) : a = a.match(L);
            for (var c, d = 0, e = a.length; d < e; d++) c = a[d], kb.tweeners[c] = kb.tweeners[c] || [], 
            kb.tweeners[c].unshift(b);
        },
        prefilters: [ ib ],
        prefilter: function(a, b) {
            b ? kb.prefilters.unshift(a) : kb.prefilters.push(a);
        }
    }), r.speed = function(a, b, c) {
        var d = a && "object" == typeof a ? r.extend({}, a) : {
            complete: c || !c && b || r.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !r.isFunction(b) && b
        };
        return r.fx.off ? d.duration = 0 : "number" != typeof d.duration && (d.duration in r.fx.speeds ? d.duration = r.fx.speeds[d.duration] : d.duration = r.fx.speeds._default), 
        null != d.queue && d.queue !== !0 || (d.queue = "fx"), d.old = d.complete, d.complete = function() {
            r.isFunction(d.old) && d.old.call(this), d.queue && r.dequeue(this, d.queue);
        }, d;
    }, r.fn.extend({
        fadeTo: function(a, b, c, d) {
            return this.filter(da).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d);
        },
        animate: function(a, b, c, d) {
            var e = r.isEmptyObject(a), f = r.speed(b, c, d), g = function() {
                var b = kb(this, r.extend({}, a), f);
                (e || W.get(this, "finish")) && b.stop(!0);
            };
            return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
        },
        stop: function(a, b, c) {
            var d = function(a) {
                var b = a.stop;
                delete a.stop, b(c);
            };
            return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), 
            this.each(function() {
                var b = !0, e = null != a && a + "queueHooks", f = r.timers, g = W.get(this);
                if (e) g[e] && g[e].stop && d(g[e]); else for (e in g) g[e] && g[e].stop && db.test(e) && d(g[e]);
                for (e = f.length; e--; ) f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), 
                b = !1, f.splice(e, 1));
                !b && c || r.dequeue(this, a);
            });
        },
        finish: function(a) {
            return a !== !1 && (a = a || "fx"), this.each(function() {
                var b, c = W.get(this), d = c[a + "queue"], e = c[a + "queueHooks"], f = r.timers, g = d ? d.length : 0;
                for (c.finish = !0, r.queue(this, a, []), e && e.stop && e.stop.call(this, !0), 
                b = f.length; b--; ) f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), 
                f.splice(b, 1));
                for (b = 0; b < g; b++) d[b] && d[b].finish && d[b].finish.call(this);
                delete c.finish;
            });
        }
    }), r.each([ "toggle", "show", "hide" ], function(a, b) {
        var c = r.fn[b];
        r.fn[b] = function(a, d, e) {
            return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(gb(b, !0), a, d, e);
        };
    }), r.each({
        slideDown: gb("show"),
        slideUp: gb("hide"),
        slideToggle: gb("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        r.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d);
        };
    }), r.timers = [], r.fx.tick = function() {
        var a, b = 0, c = r.timers;
        for (ab = r.now(); b < c.length; b++) a = c[b], a() || c[b] !== a || c.splice(b--, 1);
        c.length || r.fx.stop(), ab = void 0;
    }, r.fx.timer = function(a) {
        r.timers.push(a), r.fx.start();
    }, r.fx.interval = 13, r.fx.start = function() {
        bb || (bb = !0, eb());
    }, r.fx.stop = function() {
        bb = null;
    }, r.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, r.fn.delay = function(b, c) {
        return b = r.fx ? r.fx.speeds[b] || b : b, c = c || "fx", this.queue(c, function(c, d) {
            var e = a.setTimeout(c, b);
            d.stop = function() {
                a.clearTimeout(e);
            };
        });
    }, function() {
        var a = d.createElement("input"), b = d.createElement("select"), c = b.appendChild(d.createElement("option"));
        a.type = "checkbox", o.checkOn = "" !== a.value, o.optSelected = c.selected, a = d.createElement("input"), 
        a.value = "t", a.type = "radio", o.radioValue = "t" === a.value;
    }();
    var lb, mb = r.expr.attrHandle;
    r.fn.extend({
        attr: function(a, b) {
            return T(this, r.attr, a, b, arguments.length > 1);
        },
        removeAttr: function(a) {
            return this.each(function() {
                r.removeAttr(this, a);
            });
        }
    }), r.extend({
        attr: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (3 !== f && 8 !== f && 2 !== f) return "undefined" == typeof a.getAttribute ? r.prop(a, b, c) : (1 === f && r.isXMLDoc(a) || (e = r.attrHooks[b.toLowerCase()] || (r.expr.match.bool.test(b) ? lb : void 0)), 
            void 0 !== c ? null === c ? void r.removeAttr(a, b) : e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : (a.setAttribute(b, c + ""), 
            c) : e && "get" in e && null !== (d = e.get(a, b)) ? d : (d = r.find.attr(a, b), 
            null == d ? void 0 : d));
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (!o.radioValue && "radio" === b && B(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b), c && (a.value = c), b;
                    }
                }
            }
        },
        removeAttr: function(a, b) {
            var c, d = 0, e = b && b.match(L);
            if (e && 1 === a.nodeType) while (c = e[d++]) a.removeAttribute(c);
        }
    }), lb = {
        set: function(a, b, c) {
            return b === !1 ? r.removeAttr(a, c) : a.setAttribute(c, c), c;
        }
    }, r.each(r.expr.match.bool.source.match(/\w+/g), function(a, b) {
        var c = mb[b] || r.find.attr;
        mb[b] = function(a, b, d) {
            var e, f, g = b.toLowerCase();
            return d || (f = mb[g], mb[g] = e, e = null != c(a, b, d) ? g : null, mb[g] = f), 
            e;
        };
    });
    var nb = /^(?:input|select|textarea|button)$/i, ob = /^(?:a|area)$/i;
    r.fn.extend({
        prop: function(a, b) {
            return T(this, r.prop, a, b, arguments.length > 1);
        },
        removeProp: function(a) {
            return this.each(function() {
                delete this[r.propFix[a] || a];
            });
        }
    }), r.extend({
        prop: function(a, b, c) {
            var d, e, f = a.nodeType;
            if (3 !== f && 8 !== f && 2 !== f) return 1 === f && r.isXMLDoc(a) || (b = r.propFix[b] || b, 
            e = r.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b];
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var b = r.find.attr(a, "tabindex");
                    return b ? parseInt(b, 10) : nb.test(a.nodeName) || ob.test(a.nodeName) && a.href ? 0 : -1;
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        }
    }), o.optSelected || (r.propHooks.selected = {
        get: function(a) {
            var b = a.parentNode;
            return b && b.parentNode && b.parentNode.selectedIndex, null;
        },
        set: function(a) {
            var b = a.parentNode;
            b && (b.selectedIndex, b.parentNode && b.parentNode.selectedIndex);
        }
    }), r.each([ "tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable" ], function() {
        r.propFix[this.toLowerCase()] = this;
    });
    function pb(a) {
        var b = a.match(L) || [];
        return b.join(" ");
    }
    function qb(a) {
        return a.getAttribute && a.getAttribute("class") || "";
    }
    r.fn.extend({
        addClass: function(a) {
            var b, c, d, e, f, g, h, i = 0;
            if (r.isFunction(a)) return this.each(function(b) {
                r(this).addClass(a.call(this, b, qb(this)));
            });
            if ("string" == typeof a && a) {
                b = a.match(L) || [];
                while (c = this[i++]) if (e = qb(c), d = 1 === c.nodeType && " " + pb(e) + " ") {
                    g = 0;
                    while (f = b[g++]) d.indexOf(" " + f + " ") < 0 && (d += f + " ");
                    h = pb(d), e !== h && c.setAttribute("class", h);
                }
            }
            return this;
        },
        removeClass: function(a) {
            var b, c, d, e, f, g, h, i = 0;
            if (r.isFunction(a)) return this.each(function(b) {
                r(this).removeClass(a.call(this, b, qb(this)));
            });
            if (!arguments.length) return this.attr("class", "");
            if ("string" == typeof a && a) {
                b = a.match(L) || [];
                while (c = this[i++]) if (e = qb(c), d = 1 === c.nodeType && " " + pb(e) + " ") {
                    g = 0;
                    while (f = b[g++]) while (d.indexOf(" " + f + " ") > -1) d = d.replace(" " + f + " ", " ");
                    h = pb(d), e !== h && c.setAttribute("class", h);
                }
            }
            return this;
        },
        toggleClass: function(a, b) {
            var c = typeof a;
            return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : r.isFunction(a) ? this.each(function(c) {
                r(this).toggleClass(a.call(this, c, qb(this), b), b);
            }) : this.each(function() {
                var b, d, e, f;
                if ("string" === c) {
                    d = 0, e = r(this), f = a.match(L) || [];
                    while (b = f[d++]) e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
                } else void 0 !== a && "boolean" !== c || (b = qb(this), b && W.set(this, "__className__", b), 
                this.setAttribute && this.setAttribute("class", b || a === !1 ? "" : W.get(this, "__className__") || ""));
            });
        },
        hasClass: function(a) {
            var b, c, d = 0;
            b = " " + a + " ";
            while (c = this[d++]) if (1 === c.nodeType && (" " + pb(qb(c)) + " ").indexOf(b) > -1) return !0;
            return !1;
        }
    });
    var rb = /\r/g;
    r.fn.extend({
        val: function(a) {
            var b, c, d, e = this[0];
            {
                if (arguments.length) return d = r.isFunction(a), this.each(function(c) {
                    var e;
                    1 === this.nodeType && (e = d ? a.call(this, c, r(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : Array.isArray(e) && (e = r.map(e, function(a) {
                        return null == a ? "" : a + "";
                    })), b = r.valHooks[this.type] || r.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));
                });
                if (e) return b = r.valHooks[e.type] || r.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, 
                "string" == typeof c ? c.replace(rb, "") : null == c ? "" : c);
            }
        }
    }), r.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = r.find.attr(a, "value");
                    return null != b ? b : pb(r.text(a));
                }
            },
            select: {
                get: function(a) {
                    var b, c, d, e = a.options, f = a.selectedIndex, g = "select-one" === a.type, h = g ? null : [], i = g ? f + 1 : e.length;
                    for (d = f < 0 ? i : g ? f : 0; d < i; d++) if (c = e[d], (c.selected || d === f) && !c.disabled && (!c.parentNode.disabled || !B(c.parentNode, "optgroup"))) {
                        if (b = r(c).val(), g) return b;
                        h.push(b);
                    }
                    return h;
                },
                set: function(a, b) {
                    var c, d, e = a.options, f = r.makeArray(b), g = e.length;
                    while (g--) d = e[g], (d.selected = r.inArray(r.valHooks.option.get(d), f) > -1) && (c = !0);
                    return c || (a.selectedIndex = -1), f;
                }
            }
        }
    }), r.each([ "radio", "checkbox" ], function() {
        r.valHooks[this] = {
            set: function(a, b) {
                if (Array.isArray(b)) return a.checked = r.inArray(r(a).val(), b) > -1;
            }
        }, o.checkOn || (r.valHooks[this].get = function(a) {
            return null === a.getAttribute("value") ? "on" : a.value;
        });
    });
    var sb = /^(?:focusinfocus|focusoutblur)$/;
    r.extend(r.event, {
        trigger: function(b, c, e, f) {
            var g, h, i, j, k, m, n, o = [ e || d ], p = l.call(b, "type") ? b.type : b, q = l.call(b, "namespace") ? b.namespace.split(".") : [];
            if (h = i = e = e || d, 3 !== e.nodeType && 8 !== e.nodeType && !sb.test(p + r.event.triggered) && (p.indexOf(".") > -1 && (q = p.split("."), 
            p = q.shift(), q.sort()), k = p.indexOf(":") < 0 && "on" + p, b = b[r.expando] ? b : new r.Event(p, "object" == typeof b && b), 
            b.isTrigger = f ? 2 : 3, b.namespace = q.join("."), b.rnamespace = b.namespace ? new RegExp("(^|\\.)" + q.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            b.result = void 0, b.target || (b.target = e), c = null == c ? [ b ] : r.makeArray(c, [ b ]), 
            n = r.event.special[p] || {}, f || !n.trigger || n.trigger.apply(e, c) !== !1)) {
                if (!f && !n.noBubble && !r.isWindow(e)) {
                    for (j = n.delegateType || p, sb.test(j + p) || (h = h.parentNode); h; h = h.parentNode) o.push(h), 
                    i = h;
                    i === (e.ownerDocument || d) && o.push(i.defaultView || i.parentWindow || a);
                }
                g = 0;
                while ((h = o[g++]) && !b.isPropagationStopped()) b.type = g > 1 ? j : n.bindType || p, 
                m = (W.get(h, "events") || {})[b.type] && W.get(h, "handle"), m && m.apply(h, c), 
                m = k && h[k], m && m.apply && U(h) && (b.result = m.apply(h, c), b.result === !1 && b.preventDefault());
                return b.type = p, f || b.isDefaultPrevented() || n._default && n._default.apply(o.pop(), c) !== !1 || !U(e) || k && r.isFunction(e[p]) && !r.isWindow(e) && (i = e[k], 
                i && (e[k] = null), r.event.triggered = p, e[p](), r.event.triggered = void 0, i && (e[k] = i)), 
                b.result;
            }
        },
        simulate: function(a, b, c) {
            var d = r.extend(new r.Event(), c, {
                type: a,
                isSimulated: !0
            });
            r.event.trigger(d, null, b);
        }
    }), r.fn.extend({
        trigger: function(a, b) {
            return this.each(function() {
                r.event.trigger(a, b, this);
            });
        },
        triggerHandler: function(a, b) {
            var c = this[0];
            if (c) return r.event.trigger(a, b, c, !0);
        }
    }), r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(a, b) {
        r.fn[b] = function(a, c) {
            return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
        };
    }), r.fn.extend({
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a);
        }
    }), o.focusin = "onfocusin" in a, o.focusin || r.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = function(a) {
            r.event.simulate(b, a.target, r.event.fix(a));
        };
        r.event.special[b] = {
            setup: function() {
                var d = this.ownerDocument || this, e = W.access(d, b);
                e || d.addEventListener(a, c, !0), W.access(d, b, (e || 0) + 1);
            },
            teardown: function() {
                var d = this.ownerDocument || this, e = W.access(d, b) - 1;
                e ? W.access(d, b, e) : (d.removeEventListener(a, c, !0), W.remove(d, b));
            }
        };
    });
    var tb = a.location, ub = r.now(), vb = /\?/;
    r.parseXML = function(b) {
        var c;
        if (!b || "string" != typeof b) return null;
        try {
            c = new a.DOMParser().parseFromString(b, "text/xml");
        } catch (d) {
            c = void 0;
        }
        return c && !c.getElementsByTagName("parsererror").length || r.error("Invalid XML: " + b), 
        c;
    };
    var wb = /\[\]$/, xb = /\r?\n/g, yb = /^(?:submit|button|image|reset|file)$/i, zb = /^(?:input|select|textarea|keygen)/i;
    function Ab(a, b, c, d) {
        var e;
        if (Array.isArray(b)) r.each(b, function(b, e) {
            c || wb.test(a) ? d(a, e) : Ab(a + "[" + ("object" == typeof e && null != e ? b : "") + "]", e, c, d);
        }); else if (c || "object" !== r.type(b)) d(a, b); else for (e in b) Ab(a + "[" + e + "]", b[e], c, d);
    }
    r.param = function(a, b) {
        var c, d = [], e = function(a, b) {
            var c = r.isFunction(b) ? b() : b;
            d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(null == c ? "" : c);
        };
        if (Array.isArray(a) || a.jquery && !r.isPlainObject(a)) r.each(a, function() {
            e(this.name, this.value);
        }); else for (c in a) Ab(c, a[c], b, e);
        return d.join("&");
    }, r.fn.extend({
        serialize: function() {
            return r.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var a = r.prop(this, "elements");
                return a ? r.makeArray(a) : this;
            }).filter(function() {
                var a = this.type;
                return this.name && !r(this).is(":disabled") && zb.test(this.nodeName) && !yb.test(a) && (this.checked || !ja.test(a));
            }).map(function(a, b) {
                var c = r(this).val();
                return null == c ? null : Array.isArray(c) ? r.map(c, function(a) {
                    return {
                        name: b.name,
                        value: a.replace(xb, "\r\n")
                    };
                }) : {
                    name: b.name,
                    value: c.replace(xb, "\r\n")
                };
            }).get();
        }
    });
    var Bb = /%20/g, Cb = /#.*$/, Db = /([?&])_=[^&]*/, Eb = /^(.*?):[ \t]*([^\r\n]*)$/gm, Fb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Gb = /^(?:GET|HEAD)$/, Hb = /^\/\//, Ib = {}, Jb = {}, Kb = "*/".concat("*"), Lb = d.createElement("a");
    Lb.href = tb.href;
    function Mb(a) {
        return function(b, c) {
            "string" != typeof b && (c = b, b = "*");
            var d, e = 0, f = b.toLowerCase().match(L) || [];
            if (r.isFunction(c)) while (d = f[e++]) "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
        };
    }
    function Nb(a, b, c, d) {
        var e = {}, f = a === Jb;
        function g(h) {
            var i;
            return e[h] = !0, r.each(a[h] || [], function(a, h) {
                var j = h(b, c, d);
                return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), 
                g(j), !1);
            }), i;
        }
        return g(b.dataTypes[0]) || !e["*"] && g("*");
    }
    function Ob(a, b) {
        var c, d, e = r.ajaxSettings.flatOptions || {};
        for (c in b) void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
        return d && r.extend(!0, a, d), a;
    }
    function Pb(a, b, c) {
        var d, e, f, g, h = a.contents, i = a.dataTypes;
        while ("*" === i[0]) i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
        if (d) for (e in h) if (h[e] && h[e].test(d)) {
            i.unshift(e);
            break;
        }
        if (i[0] in c) f = i[0]; else {
            for (e in c) {
                if (!i[0] || a.converters[e + " " + i[0]]) {
                    f = e;
                    break;
                }
                g || (g = e);
            }
            f = f || g;
        }
        if (f) return f !== i[0] && i.unshift(f), c[f];
    }
    function Qb(a, b, c, d) {
        var e, f, g, h, i, j = {}, k = a.dataTypes.slice();
        if (k[1]) for (g in a.converters) j[g.toLowerCase()] = a.converters[g];
        f = k.shift();
        while (f) if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), 
        i = f, f = k.shift()) if ("*" === f) f = i; else if ("*" !== i && i !== f) {
            if (g = j[i + " " + f] || j["* " + f], !g) for (e in j) if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                break;
            }
            if (g !== !0) if (g && a["throws"]) b = g(b); else try {
                b = g(b);
            } catch (l) {
                return {
                    state: "parsererror",
                    error: g ? l : "No conversion from " + i + " to " + f
                };
            }
        }
        return {
            state: "success",
            data: b
        };
    }
    r.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: tb.href,
            type: "GET",
            isLocal: Fb.test(tb.protocol),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": Kb,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /\bxml\b/,
                html: /\bhtml/,
                json: /\bjson\b/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText",
                json: "responseJSON"
            },
            converters: {
                "* text": String,
                "text html": !0,
                "text json": JSON.parse,
                "text xml": r.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(a, b) {
            return b ? Ob(Ob(a, r.ajaxSettings), b) : Ob(r.ajaxSettings, a);
        },
        ajaxPrefilter: Mb(Ib),
        ajaxTransport: Mb(Jb),
        ajax: function(b, c) {
            "object" == typeof b && (c = b, b = void 0), c = c || {};
            var e, f, g, h, i, j, k, l, m, n, o = r.ajaxSetup({}, c), p = o.context || o, q = o.context && (p.nodeType || p.jquery) ? r(p) : r.event, s = r.Deferred(), t = r.Callbacks("once memory"), u = o.statusCode || {}, v = {}, w = {}, x = "canceled", y = {
                readyState: 0,
                getResponseHeader: function(a) {
                    var b;
                    if (k) {
                        if (!h) {
                            h = {};
                            while (b = Eb.exec(g)) h[b[1].toLowerCase()] = b[2];
                        }
                        b = h[a.toLowerCase()];
                    }
                    return null == b ? null : b;
                },
                getAllResponseHeaders: function() {
                    return k ? g : null;
                },
                setRequestHeader: function(a, b) {
                    return null == k && (a = w[a.toLowerCase()] = w[a.toLowerCase()] || a, v[a] = b), 
                    this;
                },
                overrideMimeType: function(a) {
                    return null == k && (o.mimeType = a), this;
                },
                statusCode: function(a) {
                    var b;
                    if (a) if (k) y.always(a[y.status]); else for (b in a) u[b] = [ u[b], a[b] ];
                    return this;
                },
                abort: function(a) {
                    var b = a || x;
                    return e && e.abort(b), A(0, b), this;
                }
            };
            if (s.promise(y), o.url = ((b || o.url || tb.href) + "").replace(Hb, tb.protocol + "//"), 
            o.type = c.method || c.type || o.method || o.type, o.dataTypes = (o.dataType || "*").toLowerCase().match(L) || [ "" ], 
            null == o.crossDomain) {
                j = d.createElement("a");
                try {
                    j.href = o.url, j.href = j.href, o.crossDomain = Lb.protocol + "//" + Lb.host != j.protocol + "//" + j.host;
                } catch (z) {
                    o.crossDomain = !0;
                }
            }
            if (o.data && o.processData && "string" != typeof o.data && (o.data = r.param(o.data, o.traditional)), 
            Nb(Ib, o, c, y), k) return y;
            l = r.event && o.global, l && 0 === r.active++ && r.event.trigger("ajaxStart"), 
            o.type = o.type.toUpperCase(), o.hasContent = !Gb.test(o.type), f = o.url.replace(Cb, ""), 
            o.hasContent ? o.data && o.processData && 0 === (o.contentType || "").indexOf("application/x-www-form-urlencoded") && (o.data = o.data.replace(Bb, "+")) : (n = o.url.slice(f.length), 
            o.data && (f += (vb.test(f) ? "&" : "?") + o.data, delete o.data), o.cache === !1 && (f = f.replace(Db, "$1"), 
            n = (vb.test(f) ? "&" : "?") + "_=" + ub++ + n), o.url = f + n), o.ifModified && (r.lastModified[f] && y.setRequestHeader("If-Modified-Since", r.lastModified[f]), 
            r.etag[f] && y.setRequestHeader("If-None-Match", r.etag[f])), (o.data && o.hasContent && o.contentType !== !1 || c.contentType) && y.setRequestHeader("Content-Type", o.contentType), 
            y.setRequestHeader("Accept", o.dataTypes[0] && o.accepts[o.dataTypes[0]] ? o.accepts[o.dataTypes[0]] + ("*" !== o.dataTypes[0] ? ", " + Kb + "; q=0.01" : "") : o.accepts["*"]);
            for (m in o.headers) y.setRequestHeader(m, o.headers[m]);
            if (o.beforeSend && (o.beforeSend.call(p, y, o) === !1 || k)) return y.abort();
            if (x = "abort", t.add(o.complete), y.done(o.success), y.fail(o.error), e = Nb(Jb, o, c, y)) {
                if (y.readyState = 1, l && q.trigger("ajaxSend", [ y, o ]), k) return y;
                o.async && o.timeout > 0 && (i = a.setTimeout(function() {
                    y.abort("timeout");
                }, o.timeout));
                try {
                    k = !1, e.send(v, A);
                } catch (z) {
                    if (k) throw z;
                    A(-1, z);
                }
            } else A(-1, "No Transport");
            function A(b, c, d, h) {
                var j, m, n, v, w, x = c;
                k || (k = !0, i && a.clearTimeout(i), e = void 0, g = h || "", y.readyState = b > 0 ? 4 : 0, 
                j = b >= 200 && b < 300 || 304 === b, d && (v = Pb(o, y, d)), v = Qb(o, v, y, j), 
                j ? (o.ifModified && (w = y.getResponseHeader("Last-Modified"), w && (r.lastModified[f] = w), 
                w = y.getResponseHeader("etag"), w && (r.etag[f] = w)), 204 === b || "HEAD" === o.type ? x = "nocontent" : 304 === b ? x = "notmodified" : (x = v.state, 
                m = v.data, n = v.error, j = !n)) : (n = x, !b && x || (x = "error", b < 0 && (b = 0))), 
                y.status = b, y.statusText = (c || x) + "", j ? s.resolveWith(p, [ m, x, y ]) : s.rejectWith(p, [ y, x, n ]), 
                y.statusCode(u), u = void 0, l && q.trigger(j ? "ajaxSuccess" : "ajaxError", [ y, o, j ? m : n ]), 
                t.fireWith(p, [ y, x ]), l && (q.trigger("ajaxComplete", [ y, o ]), --r.active || r.event.trigger("ajaxStop")));
            }
            return y;
        },
        getJSON: function(a, b, c) {
            return r.get(a, b, c, "json");
        },
        getScript: function(a, b) {
            return r.get(a, void 0, b, "script");
        }
    }), r.each([ "get", "post" ], function(a, b) {
        r[b] = function(a, c, d, e) {
            return r.isFunction(c) && (e = e || d, d = c, c = void 0), r.ajax(r.extend({
                url: a,
                type: b,
                dataType: e,
                data: c,
                success: d
            }, r.isPlainObject(a) && a));
        };
    }), r._evalUrl = function(a) {
        return r.ajax({
            url: a,
            type: "GET",
            dataType: "script",
            cache: !0,
            async: !1,
            global: !1,
            throws: !0
        });
    }, r.fn.extend({
        wrapAll: function(a) {
            var b;
            return this[0] && (r.isFunction(a) && (a = a.call(this[0])), b = r(a, this[0].ownerDocument).eq(0).clone(!0), 
            this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
                var a = this;
                while (a.firstElementChild) a = a.firstElementChild;
                return a;
            }).append(this)), this;
        },
        wrapInner: function(a) {
            return r.isFunction(a) ? this.each(function(b) {
                r(this).wrapInner(a.call(this, b));
            }) : this.each(function() {
                var b = r(this), c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a);
            });
        },
        wrap: function(a) {
            var b = r.isFunction(a);
            return this.each(function(c) {
                r(this).wrapAll(b ? a.call(this, c) : a);
            });
        },
        unwrap: function(a) {
            return this.parent(a).not("body").each(function() {
                r(this).replaceWith(this.childNodes);
            }), this;
        }
    }), r.expr.pseudos.hidden = function(a) {
        return !r.expr.pseudos.visible(a);
    }, r.expr.pseudos.visible = function(a) {
        return !!(a.offsetWidth || a.offsetHeight || a.getClientRects().length);
    }, r.ajaxSettings.xhr = function() {
        try {
            return new a.XMLHttpRequest();
        } catch (b) {}
    };
    var Rb = {
        0: 200,
        1223: 204
    }, Sb = r.ajaxSettings.xhr();
    o.cors = !!Sb && "withCredentials" in Sb, o.ajax = Sb = !!Sb, r.ajaxTransport(function(b) {
        var c, d;
        if (o.cors || Sb && !b.crossDomain) return {
            send: function(e, f) {
                var g, h = b.xhr();
                if (h.open(b.type, b.url, b.async, b.username, b.password), b.xhrFields) for (g in b.xhrFields) h[g] = b.xhrFields[g];
                b.mimeType && h.overrideMimeType && h.overrideMimeType(b.mimeType), b.crossDomain || e["X-Requested-With"] || (e["X-Requested-With"] = "XMLHttpRequest");
                for (g in e) h.setRequestHeader(g, e[g]);
                c = function(a) {
                    return function() {
                        c && (c = d = h.onload = h.onerror = h.onabort = h.onreadystatechange = null, "abort" === a ? h.abort() : "error" === a ? "number" != typeof h.status ? f(0, "error") : f(h.status, h.statusText) : f(Rb[h.status] || h.status, h.statusText, "text" !== (h.responseType || "text") || "string" != typeof h.responseText ? {
                            binary: h.response
                        } : {
                            text: h.responseText
                        }, h.getAllResponseHeaders()));
                    };
                }, h.onload = c(), d = h.onerror = c("error"), void 0 !== h.onabort ? h.onabort = d : h.onreadystatechange = function() {
                    4 === h.readyState && a.setTimeout(function() {
                        c && d();
                    });
                }, c = c("abort");
                try {
                    h.send(b.hasContent && b.data || null);
                } catch (i) {
                    if (c) throw i;
                }
            },
            abort: function() {
                c && c();
            }
        };
    }), r.ajaxPrefilter(function(a) {
        a.crossDomain && (a.contents.script = !1);
    }), r.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /\b(?:java|ecma)script\b/
        },
        converters: {
            "text script": function(a) {
                return r.globalEval(a), a;
            }
        }
    }), r.ajaxPrefilter("script", function(a) {
        void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
    }), r.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var b, c;
            return {
                send: function(e, f) {
                    b = r("<script>").prop({
                        charset: a.scriptCharset,
                        src: a.url
                    }).on("load error", c = function(a) {
                        b.remove(), c = null, a && f("error" === a.type ? 404 : 200, a.type);
                    }), d.head.appendChild(b[0]);
                },
                abort: function() {
                    c && c();
                }
            };
        }
    });
    var Tb = [], Ub = /(=)\?(?=&|$)|\?\?/;
    r.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = Tb.pop() || r.expando + "_" + ub++;
            return this[a] = !0, a;
        }
    }), r.ajaxPrefilter("json jsonp", function(b, c, d) {
        var e, f, g, h = b.jsonp !== !1 && (Ub.test(b.url) ? "url" : "string" == typeof b.data && 0 === (b.contentType || "").indexOf("application/x-www-form-urlencoded") && Ub.test(b.data) && "data");
        if (h || "jsonp" === b.dataTypes[0]) return e = b.jsonpCallback = r.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, 
        h ? b[h] = b[h].replace(Ub, "$1" + e) : b.jsonp !== !1 && (b.url += (vb.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), 
        b.converters["script json"] = function() {
            return g || r.error(e + " was not called"), g[0];
        }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
            g = arguments;
        }, d.always(function() {
            void 0 === f ? r(a).removeProp(e) : a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, 
            Tb.push(e)), g && r.isFunction(f) && f(g[0]), g = f = void 0;
        }), "script";
    }), o.createHTMLDocument = function() {
        var a = d.implementation.createHTMLDocument("").body;
        return a.innerHTML = "<form></form><form></form>", 2 === a.childNodes.length;
    }(), r.parseHTML = function(a, b, c) {
        if ("string" != typeof a) return [];
        "boolean" == typeof b && (c = b, b = !1);
        var e, f, g;
        return b || (o.createHTMLDocument ? (b = d.implementation.createHTMLDocument(""), 
        e = b.createElement("base"), e.href = d.location.href, b.head.appendChild(e)) : b = d), 
        f = C.exec(a), g = !c && [], f ? [ b.createElement(f[1]) ] : (f = qa([ a ], b, g), 
        g && g.length && r(g).remove(), r.merge([], f.childNodes));
    }, r.fn.load = function(a, b, c) {
        var d, e, f, g = this, h = a.indexOf(" ");
        return h > -1 && (d = pb(a.slice(h)), a = a.slice(0, h)), r.isFunction(b) ? (c = b, 
        b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && r.ajax({
            url: a,
            type: e || "GET",
            dataType: "html",
            data: b
        }).done(function(a) {
            f = arguments, g.html(d ? r("<div>").append(r.parseHTML(a)).find(d) : a);
        }).always(c && function(a, b) {
            g.each(function() {
                c.apply(this, f || [ a.responseText, b, a ]);
            });
        }), this;
    }, r.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(a, b) {
        r.fn[b] = function(a) {
            return this.on(b, a);
        };
    }), r.expr.pseudos.animated = function(a) {
        return r.grep(r.timers, function(b) {
            return a === b.elem;
        }).length;
    }, r.offset = {
        setOffset: function(a, b, c) {
            var d, e, f, g, h, i, j, k = r.css(a, "position"), l = r(a), m = {};
            "static" === k && (a.style.position = "relative"), h = l.offset(), f = r.css(a, "top"), 
            i = r.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, 
            j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), 
            r.isFunction(b) && (b = b.call(a, c, r.extend({}, h))), null != b.top && (m.top = b.top - h.top + g), 
            null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);
        }
    }, r.fn.extend({
        offset: function(a) {
            if (arguments.length) return void 0 === a ? this : this.each(function(b) {
                r.offset.setOffset(this, a, b);
            });
            var b, c, d, e, f = this[0];
            if (f) return f.getClientRects().length ? (d = f.getBoundingClientRect(), b = f.ownerDocument, 
            c = b.documentElement, e = b.defaultView, {
                top: d.top + e.pageYOffset - c.clientTop,
                left: d.left + e.pageXOffset - c.clientLeft
            }) : {
                top: 0,
                left: 0
            };
        },
        position: function() {
            if (this[0]) {
                var a, b, c = this[0], d = {
                    top: 0,
                    left: 0
                };
                return "fixed" === r.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), 
                b = this.offset(), B(a[0], "html") || (d = a.offset()), d = {
                    top: d.top + r.css(a[0], "borderTopWidth", !0),
                    left: d.left + r.css(a[0], "borderLeftWidth", !0)
                }), {
                    top: b.top - d.top - r.css(c, "marginTop", !0),
                    left: b.left - d.left - r.css(c, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent;
                while (a && "static" === r.css(a, "position")) a = a.offsetParent;
                return a || ra;
            });
        }
    }), r.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, b) {
        var c = "pageYOffset" === b;
        r.fn[a] = function(d) {
            return T(this, function(a, d, e) {
                var f;
                return r.isWindow(a) ? f = a : 9 === a.nodeType && (f = a.defaultView), void 0 === e ? f ? f[b] : a[d] : void (f ? f.scrollTo(c ? f.pageXOffset : e, c ? e : f.pageYOffset) : a[d] = e);
            }, a, d, arguments.length);
        };
    }), r.each([ "top", "left" ], function(a, b) {
        r.cssHooks[b] = Pa(o.pixelPosition, function(a, c) {
            if (c) return c = Oa(a, b), Ma.test(c) ? r(a).position()[b] + "px" : c;
        });
    }), r.each({
        Height: "height",
        Width: "width"
    }, function(a, b) {
        r.each({
            padding: "inner" + a,
            content: b,
            "": "outer" + a
        }, function(c, d) {
            r.fn[d] = function(e, f) {
                var g = arguments.length && (c || "boolean" != typeof e), h = c || (e === !0 || f === !0 ? "margin" : "border");
                return T(this, function(b, c, e) {
                    var f;
                    return r.isWindow(b) ? 0 === d.indexOf("outer") ? b["inner" + a] : b.document.documentElement["client" + a] : 9 === b.nodeType ? (f = b.documentElement, 
                    Math.max(b.body["scroll" + a], f["scroll" + a], b.body["offset" + a], f["offset" + a], f["client" + a])) : void 0 === e ? r.css(b, c, h) : r.style(b, c, e, h);
                }, b, g ? e : void 0, g);
            };
        });
    }), r.fn.extend({
        bind: function(a, b, c) {
            return this.on(a, null, b, c);
        },
        unbind: function(a, b) {
            return this.off(a, null, b);
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d);
        },
        undelegate: function(a, b, c) {
            return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
        }
    }), r.holdReady = function(a) {
        a ? r.readyWait++ : r.ready(!0);
    }, r.isArray = Array.isArray, r.parseJSON = JSON.parse, r.nodeName = B, "function" == typeof define && define.amd && define("jquery", [], function() {
        return r;
    });
    var Vb = a.jQuery, Wb = a.$;
    return r.noConflict = function(b) {
        return a.$ === r && (a.$ = Wb), b && a.jQuery === r && (a.jQuery = Vb), r;
    }, b || (a.jQuery = a.$ = r), r;
});

if (typeof jQuery === "undefined") {
    throw new Error("Bootstrap's JavaScript requires jQuery");
}

+function($) {
    "use strict";
    var version = $.fn.jquery.split(" ")[0].split(".");
    if (version[0] < 2 && version[1] < 9 || version[0] == 1 && version[1] == 9 && version[2] < 1 || version[0] > 3) {
        throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4");
    }
}(jQuery);

+function($) {
    "use strict";
    function transitionEnd() {
        var el = document.createElement("bootstrap");
        var transEndEventNames = {
            WebkitTransition: "webkitTransitionEnd",
            MozTransition: "transitionend",
            OTransition: "oTransitionEnd otransitionend",
            transition: "transitionend"
        };
        for (var name in transEndEventNames) {
            if (el.style[name] !== undefined) {
                return {
                    end: transEndEventNames[name]
                };
            }
        }
        return false;
    }
    $.fn.emulateTransitionEnd = function(duration) {
        var called = false;
        var $el = this;
        $(this).one("bsTransitionEnd", function() {
            called = true;
        });
        var callback = function() {
            if (!called) $($el).trigger($.support.transition.end);
        };
        setTimeout(callback, duration);
        return this;
    };
    $(function() {
        $.support.transition = transitionEnd();
        if (!$.support.transition) return;
        $.event.special.bsTransitionEnd = {
            bindType: $.support.transition.end,
            delegateType: $.support.transition.end,
            handle: function(e) {
                if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);
            }
        };
    });
}(jQuery);

+function($) {
    "use strict";
    var dismiss = '[data-dismiss="alert"]';
    var Alert = function(el) {
        $(el).on("click", dismiss, this.close);
    };
    Alert.VERSION = "3.3.7";
    Alert.TRANSITION_DURATION = 150;
    Alert.prototype.close = function(e) {
        var $this = $(this);
        var selector = $this.attr("data-target");
        if (!selector) {
            selector = $this.attr("href");
            selector = selector && selector.replace(/.*(?=#[^\s]*$)/, "");
        }
        var $parent = $(selector === "#" ? [] : selector);
        if (e) e.preventDefault();
        if (!$parent.length) {
            $parent = $this.closest(".alert");
        }
        $parent.trigger(e = $.Event("close.bs.alert"));
        if (e.isDefaultPrevented()) return;
        $parent.removeClass("in");
        function removeElement() {
            $parent.detach().trigger("closed.bs.alert").remove();
        }
        $.support.transition && $parent.hasClass("fade") ? $parent.one("bsTransitionEnd", removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION) : removeElement();
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.alert");
            if (!data) $this.data("bs.alert", data = new Alert(this));
            if (typeof option == "string") data[option].call($this);
        });
    }
    var old = $.fn.alert;
    $.fn.alert = Plugin;
    $.fn.alert.Constructor = Alert;
    $.fn.alert.noConflict = function() {
        $.fn.alert = old;
        return this;
    };
    $(document).on("click.bs.alert.data-api", dismiss, Alert.prototype.close);
}(jQuery);

+function($) {
    "use strict";
    var Button = function(element, options) {
        this.$element = $(element);
        this.options = $.extend({}, Button.DEFAULTS, options);
        this.isLoading = false;
    };
    Button.VERSION = "3.3.7";
    Button.DEFAULTS = {
        loadingText: "loading..."
    };
    Button.prototype.setState = function(state) {
        var d = "disabled";
        var $el = this.$element;
        var val = $el.is("input") ? "val" : "html";
        var data = $el.data();
        state += "Text";
        if (data.resetText == null) $el.data("resetText", $el[val]());
        setTimeout($.proxy(function() {
            $el[val](data[state] == null ? this.options[state] : data[state]);
            if (state == "loadingText") {
                this.isLoading = true;
                $el.addClass(d).attr(d, d).prop(d, true);
            } else if (this.isLoading) {
                this.isLoading = false;
                $el.removeClass(d).removeAttr(d).prop(d, false);
            }
        }, this), 0);
    };
    Button.prototype.toggle = function() {
        var changed = true;
        var $parent = this.$element.closest('[data-toggle="buttons"]');
        if ($parent.length) {
            var $input = this.$element.find("input");
            if ($input.prop("type") == "radio") {
                if ($input.prop("checked")) changed = false;
                $parent.find(".active").removeClass("active");
                this.$element.addClass("active");
            } else if ($input.prop("type") == "checkbox") {
                if ($input.prop("checked") !== this.$element.hasClass("active")) changed = false;
                this.$element.toggleClass("active");
            }
            $input.prop("checked", this.$element.hasClass("active"));
            if (changed) $input.trigger("change");
        } else {
            this.$element.attr("aria-pressed", !this.$element.hasClass("active"));
            this.$element.toggleClass("active");
        }
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.button");
            var options = typeof option == "object" && option;
            if (!data) $this.data("bs.button", data = new Button(this, options));
            if (option == "toggle") data.toggle(); else if (option) data.setState(option);
        });
    }
    var old = $.fn.button;
    $.fn.button = Plugin;
    $.fn.button.Constructor = Button;
    $.fn.button.noConflict = function() {
        $.fn.button = old;
        return this;
    };
    $(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(e) {
        var $btn = $(e.target).closest(".btn");
        Plugin.call($btn, "toggle");
        if (!$(e.target).is('input[type="radio"], input[type="checkbox"]')) {
            e.preventDefault();
            if ($btn.is("input,button")) $btn.trigger("focus"); else $btn.find("input:visible,button:visible").first().trigger("focus");
        }
    }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(e) {
        $(e.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(e.type));
    });
}(jQuery);

+function($) {
    "use strict";
    var Carousel = function(element, options) {
        this.$element = $(element);
        this.$indicators = this.$element.find(".carousel-indicators");
        this.options = options;
        this.paused = null;
        this.sliding = null;
        this.interval = null;
        this.$active = null;
        this.$items = null;
        this.options.keyboard && this.$element.on("keydown.bs.carousel", $.proxy(this.keydown, this));
        this.options.pause == "hover" && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", $.proxy(this.pause, this)).on("mouseleave.bs.carousel", $.proxy(this.cycle, this));
    };
    Carousel.VERSION = "3.3.7";
    Carousel.TRANSITION_DURATION = 600;
    Carousel.DEFAULTS = {
        interval: 5e3,
        pause: "hover",
        wrap: true,
        keyboard: true
    };
    Carousel.prototype.keydown = function(e) {
        if (/input|textarea/i.test(e.target.tagName)) return;
        switch (e.which) {
          case 37:
            this.prev();
            break;

          case 39:
            this.next();
            break;

          default:
            return;
        }
        e.preventDefault();
    };
    Carousel.prototype.cycle = function(e) {
        e || (this.paused = false);
        this.interval && clearInterval(this.interval);
        this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval));
        return this;
    };
    Carousel.prototype.getItemIndex = function(item) {
        this.$items = item.parent().children(".item");
        return this.$items.index(item || this.$active);
    };
    Carousel.prototype.getItemForDirection = function(direction, active) {
        var activeIndex = this.getItemIndex(active);
        var willWrap = direction == "prev" && activeIndex === 0 || direction == "next" && activeIndex == this.$items.length - 1;
        if (willWrap && !this.options.wrap) return active;
        var delta = direction == "prev" ? -1 : 1;
        var itemIndex = (activeIndex + delta) % this.$items.length;
        return this.$items.eq(itemIndex);
    };
    Carousel.prototype.to = function(pos) {
        var that = this;
        var activeIndex = this.getItemIndex(this.$active = this.$element.find(".item.active"));
        if (pos > this.$items.length - 1 || pos < 0) return;
        if (this.sliding) return this.$element.one("slid.bs.carousel", function() {
            that.to(pos);
        });
        if (activeIndex == pos) return this.pause().cycle();
        return this.slide(pos > activeIndex ? "next" : "prev", this.$items.eq(pos));
    };
    Carousel.prototype.pause = function(e) {
        e || (this.paused = true);
        if (this.$element.find(".next, .prev").length && $.support.transition) {
            this.$element.trigger($.support.transition.end);
            this.cycle(true);
        }
        this.interval = clearInterval(this.interval);
        return this;
    };
    Carousel.prototype.next = function() {
        if (this.sliding) return;
        return this.slide("next");
    };
    Carousel.prototype.prev = function() {
        if (this.sliding) return;
        return this.slide("prev");
    };
    Carousel.prototype.slide = function(type, next) {
        var $active = this.$element.find(".item.active");
        var $next = next || this.getItemForDirection(type, $active);
        var isCycling = this.interval;
        var direction = type == "next" ? "left" : "right";
        var that = this;
        if ($next.hasClass("active")) return this.sliding = false;
        var relatedTarget = $next[0];
        var slideEvent = $.Event("slide.bs.carousel", {
            relatedTarget: relatedTarget,
            direction: direction
        });
        this.$element.trigger(slideEvent);
        if (slideEvent.isDefaultPrevented()) return;
        this.sliding = true;
        isCycling && this.pause();
        if (this.$indicators.length) {
            this.$indicators.find(".active").removeClass("active");
            var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)]);
            $nextIndicator && $nextIndicator.addClass("active");
        }
        var slidEvent = $.Event("slid.bs.carousel", {
            relatedTarget: relatedTarget,
            direction: direction
        });
        if ($.support.transition && this.$element.hasClass("slide")) {
            $next.addClass(type);
            $next[0].offsetWidth;
            $active.addClass(direction);
            $next.addClass(direction);
            $active.one("bsTransitionEnd", function() {
                $next.removeClass([ type, direction ].join(" ")).addClass("active");
                $active.removeClass([ "active", direction ].join(" "));
                that.sliding = false;
                setTimeout(function() {
                    that.$element.trigger(slidEvent);
                }, 0);
            }).emulateTransitionEnd(Carousel.TRANSITION_DURATION);
        } else {
            $active.removeClass("active");
            $next.addClass("active");
            this.sliding = false;
            this.$element.trigger(slidEvent);
        }
        isCycling && this.cycle();
        return this;
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.carousel");
            var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == "object" && option);
            var action = typeof option == "string" ? option : options.slide;
            if (!data) $this.data("bs.carousel", data = new Carousel(this, options));
            if (typeof option == "number") data.to(option); else if (action) data[action](); else if (options.interval) data.pause().cycle();
        });
    }
    var old = $.fn.carousel;
    $.fn.carousel = Plugin;
    $.fn.carousel.Constructor = Carousel;
    $.fn.carousel.noConflict = function() {
        $.fn.carousel = old;
        return this;
    };
    var clickHandler = function(e) {
        var href;
        var $this = $(this);
        var $target = $($this.attr("data-target") || (href = $this.attr("href")) && href.replace(/.*(?=#[^\s]+$)/, ""));
        if (!$target.hasClass("carousel")) return;
        var options = $.extend({}, $target.data(), $this.data());
        var slideIndex = $this.attr("data-slide-to");
        if (slideIndex) options.interval = false;
        Plugin.call($target, options);
        if (slideIndex) {
            $target.data("bs.carousel").to(slideIndex);
        }
        e.preventDefault();
    };
    $(document).on("click.bs.carousel.data-api", "[data-slide]", clickHandler).on("click.bs.carousel.data-api", "[data-slide-to]", clickHandler);
    $(window).on("load", function() {
        $('[data-ride="carousel"]').each(function() {
            var $carousel = $(this);
            Plugin.call($carousel, $carousel.data());
        });
    });
}(jQuery);

+function($) {
    "use strict";
    var Collapse = function(element, options) {
        this.$element = $(element);
        this.options = $.extend({}, Collapse.DEFAULTS, options);
        this.$trigger = $('[data-toggle="collapse"][href="#' + element.id + '"],' + '[data-toggle="collapse"][data-target="#' + element.id + '"]');
        this.transitioning = null;
        if (this.options.parent) {
            this.$parent = this.getParent();
        } else {
            this.addAriaAndCollapsedClass(this.$element, this.$trigger);
        }
        if (this.options.toggle) this.toggle();
    };
    Collapse.VERSION = "3.3.7";
    Collapse.TRANSITION_DURATION = 350;
    Collapse.DEFAULTS = {
        toggle: true
    };
    Collapse.prototype.dimension = function() {
        var hasWidth = this.$element.hasClass("width");
        return hasWidth ? "width" : "height";
    };
    Collapse.prototype.show = function() {
        if (this.transitioning || this.$element.hasClass("in")) return;
        var activesData;
        var actives = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
        if (actives && actives.length) {
            activesData = actives.data("bs.collapse");
            if (activesData && activesData.transitioning) return;
        }
        var startEvent = $.Event("show.bs.collapse");
        this.$element.trigger(startEvent);
        if (startEvent.isDefaultPrevented()) return;
        if (actives && actives.length) {
            Plugin.call(actives, "hide");
            activesData || actives.data("bs.collapse", null);
        }
        var dimension = this.dimension();
        this.$element.removeClass("collapse").addClass("collapsing")[dimension](0).attr("aria-expanded", true);
        this.$trigger.removeClass("collapsed").attr("aria-expanded", true);
        this.transitioning = 1;
        var complete = function() {
            this.$element.removeClass("collapsing").addClass("collapse in")[dimension]("");
            this.transitioning = 0;
            this.$element.trigger("shown.bs.collapse");
        };
        if (!$.support.transition) return complete.call(this);
        var scrollSize = $.camelCase([ "scroll", dimension ].join("-"));
        this.$element.one("bsTransitionEnd", $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);
    };
    Collapse.prototype.hide = function() {
        if (this.transitioning || !this.$element.hasClass("in")) return;
        var startEvent = $.Event("hide.bs.collapse");
        this.$element.trigger(startEvent);
        if (startEvent.isDefaultPrevented()) return;
        var dimension = this.dimension();
        this.$element[dimension](this.$element[dimension]())[0].offsetHeight;
        this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", false);
        this.$trigger.addClass("collapsed").attr("aria-expanded", false);
        this.transitioning = 1;
        var complete = function() {
            this.transitioning = 0;
            this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse");
        };
        if (!$.support.transition) return complete.call(this);
        this.$element[dimension](0).one("bsTransitionEnd", $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION);
    };
    Collapse.prototype.toggle = function() {
        this[this.$element.hasClass("in") ? "hide" : "show"]();
    };
    Collapse.prototype.getParent = function() {
        return $(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each($.proxy(function(i, element) {
            var $element = $(element);
            this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);
        }, this)).end();
    };
    Collapse.prototype.addAriaAndCollapsedClass = function($element, $trigger) {
        var isOpen = $element.hasClass("in");
        $element.attr("aria-expanded", isOpen);
        $trigger.toggleClass("collapsed", !isOpen).attr("aria-expanded", isOpen);
    };
    function getTargetFromTrigger($trigger) {
        var href;
        var target = $trigger.attr("data-target") || (href = $trigger.attr("href")) && href.replace(/.*(?=#[^\s]+$)/, "");
        return $(target);
    }
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.collapse");
            var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == "object" && option);
            if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false;
            if (!data) $this.data("bs.collapse", data = new Collapse(this, options));
            if (typeof option == "string") data[option]();
        });
    }
    var old = $.fn.collapse;
    $.fn.collapse = Plugin;
    $.fn.collapse.Constructor = Collapse;
    $.fn.collapse.noConflict = function() {
        $.fn.collapse = old;
        return this;
    };
    $(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(e) {
        var $this = $(this);
        if (!$this.attr("data-target")) e.preventDefault();
        var $target = getTargetFromTrigger($this);
        var data = $target.data("bs.collapse");
        var option = data ? "toggle" : $this.data();
        Plugin.call($target, option);
    });
}(jQuery);

+function($) {
    "use strict";
    var backdrop = ".dropdown-backdrop";
    var toggle = '[data-toggle="dropdown"]';
    var Dropdown = function(element) {
        $(element).on("click.bs.dropdown", this.toggle);
    };
    Dropdown.VERSION = "3.3.7";
    function getParent($this) {
        var selector = $this.attr("data-target");
        if (!selector) {
            selector = $this.attr("href");
            selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, "");
        }
        var $parent = selector && $(selector);
        return $parent && $parent.length ? $parent : $this.parent();
    }
    function clearMenus(e) {
        if (e && e.which === 3) return;
        $(backdrop).remove();
        $(toggle).each(function() {
            var $this = $(this);
            var $parent = getParent($this);
            var relatedTarget = {
                relatedTarget: this
            };
            if (!$parent.hasClass("open")) return;
            if (e && e.type == "click" && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return;
            $parent.trigger(e = $.Event("hide.bs.dropdown", relatedTarget));
            if (e.isDefaultPrevented()) return;
            $this.attr("aria-expanded", "false");
            $parent.removeClass("open").trigger($.Event("hidden.bs.dropdown", relatedTarget));
        });
    }
    Dropdown.prototype.toggle = function(e) {
        var $this = $(this);
        if ($this.is(".disabled, :disabled")) return;
        var $parent = getParent($this);
        var isActive = $parent.hasClass("open");
        clearMenus();
        if (!isActive) {
            if ("ontouchstart" in document.documentElement && !$parent.closest(".navbar-nav").length) {
                $(document.createElement("div")).addClass("dropdown-backdrop").insertAfter($(this)).on("click", clearMenus);
            }
            var relatedTarget = {
                relatedTarget: this
            };
            $parent.trigger(e = $.Event("show.bs.dropdown", relatedTarget));
            if (e.isDefaultPrevented()) return;
            $this.trigger("focus").attr("aria-expanded", "true");
            $parent.toggleClass("open").trigger($.Event("shown.bs.dropdown", relatedTarget));
        }
        return false;
    };
    Dropdown.prototype.keydown = function(e) {
        if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;
        var $this = $(this);
        e.preventDefault();
        e.stopPropagation();
        if ($this.is(".disabled, :disabled")) return;
        var $parent = getParent($this);
        var isActive = $parent.hasClass("open");
        if (!isActive && e.which != 27 || isActive && e.which == 27) {
            if (e.which == 27) $parent.find(toggle).trigger("focus");
            return $this.trigger("click");
        }
        var desc = " li:not(.disabled):visible a";
        var $items = $parent.find(".dropdown-menu" + desc);
        if (!$items.length) return;
        var index = $items.index(e.target);
        if (e.which == 38 && index > 0) index--;
        if (e.which == 40 && index < $items.length - 1) index++;
        if (!~index) index = 0;
        $items.eq(index).trigger("focus");
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.dropdown");
            if (!data) $this.data("bs.dropdown", data = new Dropdown(this));
            if (typeof option == "string") data[option].call($this);
        });
    }
    var old = $.fn.dropdown;
    $.fn.dropdown = Plugin;
    $.fn.dropdown.Constructor = Dropdown;
    $.fn.dropdown.noConflict = function() {
        $.fn.dropdown = old;
        return this;
    };
    $(document).on("click.bs.dropdown.data-api", clearMenus).on("click.bs.dropdown.data-api", ".dropdown form", function(e) {
        e.stopPropagation();
    }).on("click.bs.dropdown.data-api", toggle, Dropdown.prototype.toggle).on("keydown.bs.dropdown.data-api", toggle, Dropdown.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", Dropdown.prototype.keydown);
}(jQuery);

+function($) {
    "use strict";
    var Modal = function(element, options) {
        this.options = options;
        this.$body = $(document.body);
        this.$element = $(element);
        this.$dialog = this.$element.find(".modal-dialog");
        this.$backdrop = null;
        this.isShown = null;
        this.originalBodyPad = null;
        this.scrollbarWidth = 0;
        this.ignoreBackdropClick = false;
        if (this.options.remote) {
            this.$element.find(".modal-content").load(this.options.remote, $.proxy(function() {
                this.$element.trigger("loaded.bs.modal");
            }, this));
        }
    };
    Modal.VERSION = "3.3.7";
    Modal.TRANSITION_DURATION = 300;
    Modal.BACKDROP_TRANSITION_DURATION = 150;
    Modal.DEFAULTS = {
        backdrop: true,
        keyboard: true,
        show: true
    };
    Modal.prototype.toggle = function(_relatedTarget) {
        return this.isShown ? this.hide() : this.show(_relatedTarget);
    };
    Modal.prototype.show = function(_relatedTarget) {
        var that = this;
        var e = $.Event("show.bs.modal", {
            relatedTarget: _relatedTarget
        });
        this.$element.trigger(e);
        if (this.isShown || e.isDefaultPrevented()) return;
        this.isShown = true;
        this.checkScrollbar();
        this.setScrollbar();
        this.$body.addClass("modal-open");
        this.escape();
        this.resize();
        this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', $.proxy(this.hide, this));
        this.$dialog.on("mousedown.dismiss.bs.modal", function() {
            that.$element.one("mouseup.dismiss.bs.modal", function(e) {
                if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true;
            });
        });
        this.backdrop(function() {
            var transition = $.support.transition && that.$element.hasClass("fade");
            if (!that.$element.parent().length) {
                that.$element.appendTo(that.$body);
            }
            that.$element.show().scrollTop(0);
            that.adjustDialog();
            if (transition) {
                that.$element[0].offsetWidth;
            }
            that.$element.addClass("in");
            that.enforceFocus();
            var e = $.Event("shown.bs.modal", {
                relatedTarget: _relatedTarget
            });
            transition ? that.$dialog.one("bsTransitionEnd", function() {
                that.$element.trigger("focus").trigger(e);
            }).emulateTransitionEnd(Modal.TRANSITION_DURATION) : that.$element.trigger("focus").trigger(e);
        });
    };
    Modal.prototype.hide = function(e) {
        if (e) e.preventDefault();
        e = $.Event("hide.bs.modal");
        this.$element.trigger(e);
        if (!this.isShown || e.isDefaultPrevented()) return;
        this.isShown = false;
        this.escape();
        this.resize();
        $(document).off("focusin.bs.modal");
        this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal");
        this.$dialog.off("mousedown.dismiss.bs.modal");
        $.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION) : this.hideModal();
    };
    Modal.prototype.enforceFocus = function() {
        $(document).off("focusin.bs.modal").on("focusin.bs.modal", $.proxy(function(e) {
            if (document !== e.target && this.$element[0] !== e.target && !this.$element.has(e.target).length) {
                this.$element.trigger("focus");
            }
        }, this));
    };
    Modal.prototype.escape = function() {
        if (this.isShown && this.options.keyboard) {
            this.$element.on("keydown.dismiss.bs.modal", $.proxy(function(e) {
                e.which == 27 && this.hide();
            }, this));
        } else if (!this.isShown) {
            this.$element.off("keydown.dismiss.bs.modal");
        }
    };
    Modal.prototype.resize = function() {
        if (this.isShown) {
            $(window).on("resize.bs.modal", $.proxy(this.handleUpdate, this));
        } else {
            $(window).off("resize.bs.modal");
        }
    };
    Modal.prototype.hideModal = function() {
        var that = this;
        this.$element.hide();
        this.backdrop(function() {
            that.$body.removeClass("modal-open");
            that.resetAdjustments();
            that.resetScrollbar();
            that.$element.trigger("hidden.bs.modal");
        });
    };
    Modal.prototype.removeBackdrop = function() {
        this.$backdrop && this.$backdrop.remove();
        this.$backdrop = null;
    };
    Modal.prototype.backdrop = function(callback) {
        var that = this;
        var animate = this.$element.hasClass("fade") ? "fade" : "";
        if (this.isShown && this.options.backdrop) {
            var doAnimate = $.support.transition && animate;
            this.$backdrop = $(document.createElement("div")).addClass("modal-backdrop " + animate).appendTo(this.$body);
            this.$element.on("click.dismiss.bs.modal", $.proxy(function(e) {
                if (this.ignoreBackdropClick) {
                    this.ignoreBackdropClick = false;
                    return;
                }
                if (e.target !== e.currentTarget) return;
                this.options.backdrop == "static" ? this.$element[0].focus() : this.hide();
            }, this));
            if (doAnimate) this.$backdrop[0].offsetWidth;
            this.$backdrop.addClass("in");
            if (!callback) return;
            doAnimate ? this.$backdrop.one("bsTransitionEnd", callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callback();
        } else if (!this.isShown && this.$backdrop) {
            this.$backdrop.removeClass("in");
            var callbackRemove = function() {
                that.removeBackdrop();
                callback && callback();
            };
            $.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callbackRemove();
        } else if (callback) {
            callback();
        }
    };
    Modal.prototype.handleUpdate = function() {
        this.adjustDialog();
    };
    Modal.prototype.adjustDialog = function() {
        var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;
        this.$element.css({
            paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : "",
            paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ""
        });
    };
    Modal.prototype.resetAdjustments = function() {
        this.$element.css({
            paddingLeft: "",
            paddingRight: ""
        });
    };
    Modal.prototype.checkScrollbar = function() {
        var fullWindowWidth = window.innerWidth;
        if (!fullWindowWidth) {
            var documentElementRect = document.documentElement.getBoundingClientRect();
            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
        }
        this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
        this.scrollbarWidth = this.measureScrollbar();
    };
    Modal.prototype.setScrollbar = function() {
        var bodyPad = parseInt(this.$body.css("padding-right") || 0, 10);
        this.originalBodyPad = document.body.style.paddingRight || "";
        if (this.bodyIsOverflowing) this.$body.css("padding-right", bodyPad + this.scrollbarWidth);
    };
    Modal.prototype.resetScrollbar = function() {
        this.$body.css("padding-right", this.originalBodyPad);
    };
    Modal.prototype.measureScrollbar = function() {
        var scrollDiv = document.createElement("div");
        scrollDiv.className = "modal-scrollbar-measure";
        this.$body.append(scrollDiv);
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        this.$body[0].removeChild(scrollDiv);
        return scrollbarWidth;
    };
    function Plugin(option, _relatedTarget) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.modal");
            var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == "object" && option);
            if (!data) $this.data("bs.modal", data = new Modal(this, options));
            if (typeof option == "string") data[option](_relatedTarget); else if (options.show) data.show(_relatedTarget);
        });
    }
    var old = $.fn.modal;
    $.fn.modal = Plugin;
    $.fn.modal.Constructor = Modal;
    $.fn.modal.noConflict = function() {
        $.fn.modal = old;
        return this;
    };
    $(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(e) {
        var $this = $(this);
        var href = $this.attr("href");
        var $target = $($this.attr("data-target") || href && href.replace(/.*(?=#[^\s]+$)/, ""));
        var option = $target.data("bs.modal") ? "toggle" : $.extend({
            remote: !/#/.test(href) && href
        }, $target.data(), $this.data());
        if ($this.is("a")) e.preventDefault();
        $target.one("show.bs.modal", function(showEvent) {
            if (showEvent.isDefaultPrevented()) return;
            $target.one("hidden.bs.modal", function() {
                $this.is(":visible") && $this.trigger("focus");
            });
        });
        Plugin.call($target, option, this);
    });
}(jQuery);

+function($) {
    "use strict";
    var Tooltip = function(element, options) {
        this.type = null;
        this.options = null;
        this.enabled = null;
        this.timeout = null;
        this.hoverState = null;
        this.$element = null;
        this.inState = null;
        this.init("tooltip", element, options);
    };
    Tooltip.VERSION = "3.3.7";
    Tooltip.TRANSITION_DURATION = 150;
    Tooltip.DEFAULTS = {
        animation: true,
        placement: "top",
        selector: false,
        template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
        trigger: "hover focus",
        title: "",
        delay: 0,
        html: false,
        container: false,
        viewport: {
            selector: "body",
            padding: 0
        }
    };
    Tooltip.prototype.init = function(type, element, options) {
        this.enabled = true;
        this.type = type;
        this.$element = $(element);
        this.options = this.getOptions(options);
        this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport);
        this.inState = {
            click: false,
            hover: false,
            focus: false
        };
        if (this.$element[0] instanceof document.constructor && !this.options.selector) {
            throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
        }
        var triggers = this.options.trigger.split(" ");
        for (var i = triggers.length; i--; ) {
            var trigger = triggers[i];
            if (trigger == "click") {
                this.$element.on("click." + this.type, this.options.selector, $.proxy(this.toggle, this));
            } else if (trigger != "manual") {
                var eventIn = trigger == "hover" ? "mouseenter" : "focusin";
                var eventOut = trigger == "hover" ? "mouseleave" : "focusout";
                this.$element.on(eventIn + "." + this.type, this.options.selector, $.proxy(this.enter, this));
                this.$element.on(eventOut + "." + this.type, this.options.selector, $.proxy(this.leave, this));
            }
        }
        this.options.selector ? this._options = $.extend({}, this.options, {
            trigger: "manual",
            selector: ""
        }) : this.fixTitle();
    };
    Tooltip.prototype.getDefaults = function() {
        return Tooltip.DEFAULTS;
    };
    Tooltip.prototype.getOptions = function(options) {
        options = $.extend({}, this.getDefaults(), this.$element.data(), options);
        if (options.delay && typeof options.delay == "number") {
            options.delay = {
                show: options.delay,
                hide: options.delay
            };
        }
        return options;
    };
    Tooltip.prototype.getDelegateOptions = function() {
        var options = {};
        var defaults = this.getDefaults();
        this._options && $.each(this._options, function(key, value) {
            if (defaults[key] != value) options[key] = value;
        });
        return options;
    };
    Tooltip.prototype.enter = function(obj) {
        var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data("bs." + this.type);
        if (!self) {
            self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
            $(obj.currentTarget).data("bs." + this.type, self);
        }
        if (obj instanceof $.Event) {
            self.inState[obj.type == "focusin" ? "focus" : "hover"] = true;
        }
        if (self.tip().hasClass("in") || self.hoverState == "in") {
            self.hoverState = "in";
            return;
        }
        clearTimeout(self.timeout);
        self.hoverState = "in";
        if (!self.options.delay || !self.options.delay.show) return self.show();
        self.timeout = setTimeout(function() {
            if (self.hoverState == "in") self.show();
        }, self.options.delay.show);
    };
    Tooltip.prototype.isInStateTrue = function() {
        for (var key in this.inState) {
            if (this.inState[key]) return true;
        }
        return false;
    };
    Tooltip.prototype.leave = function(obj) {
        var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data("bs." + this.type);
        if (!self) {
            self = new this.constructor(obj.currentTarget, this.getDelegateOptions());
            $(obj.currentTarget).data("bs." + this.type, self);
        }
        if (obj instanceof $.Event) {
            self.inState[obj.type == "focusout" ? "focus" : "hover"] = false;
        }
        if (self.isInStateTrue()) return;
        clearTimeout(self.timeout);
        self.hoverState = "out";
        if (!self.options.delay || !self.options.delay.hide) return self.hide();
        self.timeout = setTimeout(function() {
            if (self.hoverState == "out") self.hide();
        }, self.options.delay.hide);
    };
    Tooltip.prototype.show = function() {
        var e = $.Event("show.bs." + this.type);
        if (this.hasContent() && this.enabled) {
            this.$element.trigger(e);
            var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
            if (e.isDefaultPrevented() || !inDom) return;
            var that = this;
            var $tip = this.tip();
            var tipId = this.getUID(this.type);
            this.setContent();
            $tip.attr("id", tipId);
            this.$element.attr("aria-describedby", tipId);
            if (this.options.animation) $tip.addClass("fade");
            var placement = typeof this.options.placement == "function" ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;
            var autoToken = /\s?auto?\s?/i;
            var autoPlace = autoToken.test(placement);
            if (autoPlace) placement = placement.replace(autoToken, "") || "top";
            $tip.detach().css({
                top: 0,
                left: 0,
                display: "block"
            }).addClass(placement).data("bs." + this.type, this);
            this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);
            this.$element.trigger("inserted.bs." + this.type);
            var pos = this.getPosition();
            var actualWidth = $tip[0].offsetWidth;
            var actualHeight = $tip[0].offsetHeight;
            if (autoPlace) {
                var orgPlacement = placement;
                var viewportDim = this.getPosition(this.$viewport);
                placement = placement == "bottom" && pos.bottom + actualHeight > viewportDim.bottom ? "top" : placement == "top" && pos.top - actualHeight < viewportDim.top ? "bottom" : placement == "right" && pos.right + actualWidth > viewportDim.width ? "left" : placement == "left" && pos.left - actualWidth < viewportDim.left ? "right" : placement;
                $tip.removeClass(orgPlacement).addClass(placement);
            }
            var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);
            this.applyPlacement(calculatedOffset, placement);
            var complete = function() {
                var prevHoverState = that.hoverState;
                that.$element.trigger("shown.bs." + that.type);
                that.hoverState = null;
                if (prevHoverState == "out") that.leave(that);
            };
            $.support.transition && this.$tip.hasClass("fade") ? $tip.one("bsTransitionEnd", complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();
        }
    };
    Tooltip.prototype.applyPlacement = function(offset, placement) {
        var $tip = this.tip();
        var width = $tip[0].offsetWidth;
        var height = $tip[0].offsetHeight;
        var marginTop = parseInt($tip.css("margin-top"), 10);
        var marginLeft = parseInt($tip.css("margin-left"), 10);
        if (isNaN(marginTop)) marginTop = 0;
        if (isNaN(marginLeft)) marginLeft = 0;
        offset.top += marginTop;
        offset.left += marginLeft;
        $.offset.setOffset($tip[0], $.extend({
            using: function(props) {
                $tip.css({
                    top: Math.round(props.top),
                    left: Math.round(props.left)
                });
            }
        }, offset), 0);
        $tip.addClass("in");
        var actualWidth = $tip[0].offsetWidth;
        var actualHeight = $tip[0].offsetHeight;
        if (placement == "top" && actualHeight != height) {
            offset.top = offset.top + height - actualHeight;
        }
        var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);
        if (delta.left) offset.left += delta.left; else offset.top += delta.top;
        var isVertical = /top|bottom/.test(placement);
        var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;
        var arrowOffsetPosition = isVertical ? "offsetWidth" : "offsetHeight";
        $tip.offset(offset);
        this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);
    };
    Tooltip.prototype.replaceArrow = function(delta, dimension, isVertical) {
        this.arrow().css(isVertical ? "left" : "top", 50 * (1 - delta / dimension) + "%").css(isVertical ? "top" : "left", "");
    };
    Tooltip.prototype.setContent = function() {
        var $tip = this.tip();
        var title = this.getTitle();
        $tip.find(".tooltip-inner")[this.options.html ? "html" : "text"](title);
        $tip.removeClass("fade in top bottom left right");
    };
    Tooltip.prototype.hide = function(callback) {
        var that = this;
        var $tip = $(this.$tip);
        var e = $.Event("hide.bs." + this.type);
        function complete() {
            if (that.hoverState != "in") $tip.detach();
            if (that.$element) {
                that.$element.removeAttr("aria-describedby").trigger("hidden.bs." + that.type);
            }
            callback && callback();
        }
        this.$element.trigger(e);
        if (e.isDefaultPrevented()) return;
        $tip.removeClass("in");
        $.support.transition && $tip.hasClass("fade") ? $tip.one("bsTransitionEnd", complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();
        this.hoverState = null;
        return this;
    };
    Tooltip.prototype.fixTitle = function() {
        var $e = this.$element;
        if ($e.attr("title") || typeof $e.attr("data-original-title") != "string") {
            $e.attr("data-original-title", $e.attr("title") || "").attr("title", "");
        }
    };
    Tooltip.prototype.hasContent = function() {
        return this.getTitle();
    };
    Tooltip.prototype.getPosition = function($element) {
        $element = $element || this.$element;
        var el = $element[0];
        var isBody = el.tagName == "BODY";
        var elRect = el.getBoundingClientRect();
        if (elRect.width == null) {
            elRect = $.extend({}, elRect, {
                width: elRect.right - elRect.left,
                height: elRect.bottom - elRect.top
            });
        }
        var isSvg = window.SVGElement && el instanceof window.SVGElement;
        var elOffset = isBody ? {
            top: 0,
            left: 0
        } : isSvg ? null : $element.offset();
        var scroll = {
            scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop()
        };
        var outerDims = isBody ? {
            width: $(window).width(),
            height: $(window).height()
        } : null;
        return $.extend({}, elRect, scroll, outerDims, elOffset);
    };
    Tooltip.prototype.getCalculatedOffset = function(placement, pos, actualWidth, actualHeight) {
        return placement == "bottom" ? {
            top: pos.top + pos.height,
            left: pos.left + pos.width / 2 - actualWidth / 2
        } : placement == "top" ? {
            top: pos.top - actualHeight,
            left: pos.left + pos.width / 2 - actualWidth / 2
        } : placement == "left" ? {
            top: pos.top + pos.height / 2 - actualHeight / 2,
            left: pos.left - actualWidth
        } : {
            top: pos.top + pos.height / 2 - actualHeight / 2,
            left: pos.left + pos.width
        };
    };
    Tooltip.prototype.getViewportAdjustedDelta = function(placement, pos, actualWidth, actualHeight) {
        var delta = {
            top: 0,
            left: 0
        };
        if (!this.$viewport) return delta;
        var viewportPadding = this.options.viewport && this.options.viewport.padding || 0;
        var viewportDimensions = this.getPosition(this.$viewport);
        if (/right|left/.test(placement)) {
            var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;
            var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;
            if (topEdgeOffset < viewportDimensions.top) {
                delta.top = viewportDimensions.top - topEdgeOffset;
            } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) {
                delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;
            }
        } else {
            var leftEdgeOffset = pos.left - viewportPadding;
            var rightEdgeOffset = pos.left + viewportPadding + actualWidth;
            if (leftEdgeOffset < viewportDimensions.left) {
                delta.left = viewportDimensions.left - leftEdgeOffset;
            } else if (rightEdgeOffset > viewportDimensions.right) {
                delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;
            }
        }
        return delta;
    };
    Tooltip.prototype.getTitle = function() {
        var title;
        var $e = this.$element;
        var o = this.options;
        title = $e.attr("data-original-title") || (typeof o.title == "function" ? o.title.call($e[0]) : o.title);
        return title;
    };
    Tooltip.prototype.getUID = function(prefix) {
        do {
            prefix += ~~(Math.random() * 1e6);
        } while (document.getElementById(prefix));
        return prefix;
    };
    Tooltip.prototype.tip = function() {
        if (!this.$tip) {
            this.$tip = $(this.options.template);
            if (this.$tip.length != 1) {
                throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
            }
        }
        return this.$tip;
    };
    Tooltip.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow");
    };
    Tooltip.prototype.enable = function() {
        this.enabled = true;
    };
    Tooltip.prototype.disable = function() {
        this.enabled = false;
    };
    Tooltip.prototype.toggleEnabled = function() {
        this.enabled = !this.enabled;
    };
    Tooltip.prototype.toggle = function(e) {
        var self = this;
        if (e) {
            self = $(e.currentTarget).data("bs." + this.type);
            if (!self) {
                self = new this.constructor(e.currentTarget, this.getDelegateOptions());
                $(e.currentTarget).data("bs." + this.type, self);
            }
        }
        if (e) {
            self.inState.click = !self.inState.click;
            if (self.isInStateTrue()) self.enter(self); else self.leave(self);
        } else {
            self.tip().hasClass("in") ? self.leave(self) : self.enter(self);
        }
    };
    Tooltip.prototype.destroy = function() {
        var that = this;
        clearTimeout(this.timeout);
        this.hide(function() {
            that.$element.off("." + that.type).removeData("bs." + that.type);
            if (that.$tip) {
                that.$tip.detach();
            }
            that.$tip = null;
            that.$arrow = null;
            that.$viewport = null;
            that.$element = null;
        });
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.tooltip");
            var options = typeof option == "object" && option;
            if (!data && /destroy|hide/.test(option)) return;
            if (!data) $this.data("bs.tooltip", data = new Tooltip(this, options));
            if (typeof option == "string") data[option]();
        });
    }
    var old = $.fn.tooltip;
    $.fn.tooltip = Plugin;
    $.fn.tooltip.Constructor = Tooltip;
    $.fn.tooltip.noConflict = function() {
        $.fn.tooltip = old;
        return this;
    };
}(jQuery);

+function($) {
    "use strict";
    var Popover = function(element, options) {
        this.init("popover", element, options);
    };
    if (!$.fn.tooltip) throw new Error("Popover requires tooltip.js");
    Popover.VERSION = "3.3.7";
    Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
        placement: "right",
        trigger: "click",
        content: "",
        template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
    });
    Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype);
    Popover.prototype.constructor = Popover;
    Popover.prototype.getDefaults = function() {
        return Popover.DEFAULTS;
    };
    Popover.prototype.setContent = function() {
        var $tip = this.tip();
        var title = this.getTitle();
        var content = this.getContent();
        $tip.find(".popover-title")[this.options.html ? "html" : "text"](title);
        $tip.find(".popover-content").children().detach().end()[this.options.html ? typeof content == "string" ? "html" : "append" : "text"](content);
        $tip.removeClass("fade top bottom left right in");
        if (!$tip.find(".popover-title").html()) $tip.find(".popover-title").hide();
    };
    Popover.prototype.hasContent = function() {
        return this.getTitle() || this.getContent();
    };
    Popover.prototype.getContent = function() {
        var $e = this.$element;
        var o = this.options;
        return $e.attr("data-content") || (typeof o.content == "function" ? o.content.call($e[0]) : o.content);
    };
    Popover.prototype.arrow = function() {
        return this.$arrow = this.$arrow || this.tip().find(".arrow");
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.popover");
            var options = typeof option == "object" && option;
            if (!data && /destroy|hide/.test(option)) return;
            if (!data) $this.data("bs.popover", data = new Popover(this, options));
            if (typeof option == "string") data[option]();
        });
    }
    var old = $.fn.popover;
    $.fn.popover = Plugin;
    $.fn.popover.Constructor = Popover;
    $.fn.popover.noConflict = function() {
        $.fn.popover = old;
        return this;
    };
}(jQuery);

+function($) {
    "use strict";
    function ScrollSpy(element, options) {
        this.$body = $(document.body);
        this.$scrollElement = $(element).is(document.body) ? $(window) : $(element);
        this.options = $.extend({}, ScrollSpy.DEFAULTS, options);
        this.selector = (this.options.target || "") + " .nav li > a";
        this.offsets = [];
        this.targets = [];
        this.activeTarget = null;
        this.scrollHeight = 0;
        this.$scrollElement.on("scroll.bs.scrollspy", $.proxy(this.process, this));
        this.refresh();
        this.process();
    }
    ScrollSpy.VERSION = "3.3.7";
    ScrollSpy.DEFAULTS = {
        offset: 10
    };
    ScrollSpy.prototype.getScrollHeight = function() {
        return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
    };
    ScrollSpy.prototype.refresh = function() {
        var that = this;
        var offsetMethod = "offset";
        var offsetBase = 0;
        this.offsets = [];
        this.targets = [];
        this.scrollHeight = this.getScrollHeight();
        if (!$.isWindow(this.$scrollElement[0])) {
            offsetMethod = "position";
            offsetBase = this.$scrollElement.scrollTop();
        }
        this.$body.find(this.selector).map(function() {
            var $el = $(this);
            var href = $el.data("target") || $el.attr("href");
            var $href = /^#./.test(href) && $(href);
            return $href && $href.length && $href.is(":visible") && [ [ $href[offsetMethod]().top + offsetBase, href ] ] || null;
        }).sort(function(a, b) {
            return a[0] - b[0];
        }).each(function() {
            that.offsets.push(this[0]);
            that.targets.push(this[1]);
        });
    };
    ScrollSpy.prototype.process = function() {
        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset;
        var scrollHeight = this.getScrollHeight();
        var maxScroll = this.options.offset + scrollHeight - this.$scrollElement.height();
        var offsets = this.offsets;
        var targets = this.targets;
        var activeTarget = this.activeTarget;
        var i;
        if (this.scrollHeight != scrollHeight) {
            this.refresh();
        }
        if (scrollTop >= maxScroll) {
            return activeTarget != (i = targets[targets.length - 1]) && this.activate(i);
        }
        if (activeTarget && scrollTop < offsets[0]) {
            this.activeTarget = null;
            return this.clear();
        }
        for (i = offsets.length; i--; ) {
            activeTarget != targets[i] && scrollTop >= offsets[i] && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1]) && this.activate(targets[i]);
        }
    };
    ScrollSpy.prototype.activate = function(target) {
        this.activeTarget = target;
        this.clear();
        var selector = this.selector + '[data-target="' + target + '"],' + this.selector + '[href="' + target + '"]';
        var active = $(selector).parents("li").addClass("active");
        if (active.parent(".dropdown-menu").length) {
            active = active.closest("li.dropdown").addClass("active");
        }
        active.trigger("activate.bs.scrollspy");
    };
    ScrollSpy.prototype.clear = function() {
        $(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.scrollspy");
            var options = typeof option == "object" && option;
            if (!data) $this.data("bs.scrollspy", data = new ScrollSpy(this, options));
            if (typeof option == "string") data[option]();
        });
    }
    var old = $.fn.scrollspy;
    $.fn.scrollspy = Plugin;
    $.fn.scrollspy.Constructor = ScrollSpy;
    $.fn.scrollspy.noConflict = function() {
        $.fn.scrollspy = old;
        return this;
    };
    $(window).on("load.bs.scrollspy.data-api", function() {
        $('[data-spy="scroll"]').each(function() {
            var $spy = $(this);
            Plugin.call($spy, $spy.data());
        });
    });
}(jQuery);

+function($) {
    "use strict";
    var Tab = function(element) {
        this.element = $(element);
    };
    Tab.VERSION = "3.3.7";
    Tab.TRANSITION_DURATION = 150;
    Tab.prototype.show = function() {
        var $this = this.element;
        var $ul = $this.closest("ul:not(.dropdown-menu)");
        var selector = $this.data("target");
        if (!selector) {
            selector = $this.attr("href");
            selector = selector && selector.replace(/.*(?=#[^\s]*$)/, "");
        }
        if ($this.parent("li").hasClass("active")) return;
        var $previous = $ul.find(".active:last a");
        var hideEvent = $.Event("hide.bs.tab", {
            relatedTarget: $this[0]
        });
        var showEvent = $.Event("show.bs.tab", {
            relatedTarget: $previous[0]
        });
        $previous.trigger(hideEvent);
        $this.trigger(showEvent);
        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return;
        var $target = $(selector);
        this.activate($this.closest("li"), $ul);
        this.activate($target, $target.parent(), function() {
            $previous.trigger({
                type: "hidden.bs.tab",
                relatedTarget: $this[0]
            });
            $this.trigger({
                type: "shown.bs.tab",
                relatedTarget: $previous[0]
            });
        });
    };
    Tab.prototype.activate = function(element, container, callback) {
        var $active = container.find("> .active");
        var transition = callback && $.support.transition && ($active.length && $active.hasClass("fade") || !!container.find("> .fade").length);
        function next() {
            $active.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", false);
            element.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", true);
            if (transition) {
                element[0].offsetWidth;
                element.addClass("in");
            } else {
                element.removeClass("fade");
            }
            if (element.parent(".dropdown-menu").length) {
                element.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", true);
            }
            callback && callback();
        }
        $active.length && transition ? $active.one("bsTransitionEnd", next).emulateTransitionEnd(Tab.TRANSITION_DURATION) : next();
        $active.removeClass("in");
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.tab");
            if (!data) $this.data("bs.tab", data = new Tab(this));
            if (typeof option == "string") data[option]();
        });
    }
    var old = $.fn.tab;
    $.fn.tab = Plugin;
    $.fn.tab.Constructor = Tab;
    $.fn.tab.noConflict = function() {
        $.fn.tab = old;
        return this;
    };
    var clickHandler = function(e) {
        e.preventDefault();
        Plugin.call($(this), "show");
    };
    $(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', clickHandler).on("click.bs.tab.data-api", '[data-toggle="pill"]', clickHandler);
}(jQuery);

+function($) {
    "use strict";
    var Affix = function(element, options) {
        this.options = $.extend({}, Affix.DEFAULTS, options);
        this.$target = $(this.options.target).on("scroll.bs.affix.data-api", $.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", $.proxy(this.checkPositionWithEventLoop, this));
        this.$element = $(element);
        this.affixed = null;
        this.unpin = null;
        this.pinnedOffset = null;
        this.checkPosition();
    };
    Affix.VERSION = "3.3.7";
    Affix.RESET = "affix affix-top affix-bottom";
    Affix.DEFAULTS = {
        offset: 0,
        target: window
    };
    Affix.prototype.getState = function(scrollHeight, height, offsetTop, offsetBottom) {
        var scrollTop = this.$target.scrollTop();
        var position = this.$element.offset();
        var targetHeight = this.$target.height();
        if (offsetTop != null && this.affixed == "top") return scrollTop < offsetTop ? "top" : false;
        if (this.affixed == "bottom") {
            if (offsetTop != null) return scrollTop + this.unpin <= position.top ? false : "bottom";
            return scrollTop + targetHeight <= scrollHeight - offsetBottom ? false : "bottom";
        }
        var initializing = this.affixed == null;
        var colliderTop = initializing ? scrollTop : position.top;
        var colliderHeight = initializing ? targetHeight : height;
        if (offsetTop != null && scrollTop <= offsetTop) return "top";
        if (offsetBottom != null && colliderTop + colliderHeight >= scrollHeight - offsetBottom) return "bottom";
        return false;
    };
    Affix.prototype.getPinnedOffset = function() {
        if (this.pinnedOffset) return this.pinnedOffset;
        this.$element.removeClass(Affix.RESET).addClass("affix");
        var scrollTop = this.$target.scrollTop();
        var position = this.$element.offset();
        return this.pinnedOffset = position.top - scrollTop;
    };
    Affix.prototype.checkPositionWithEventLoop = function() {
        setTimeout($.proxy(this.checkPosition, this), 1);
    };
    Affix.prototype.checkPosition = function() {
        if (!this.$element.is(":visible")) return;
        var height = this.$element.height();
        var offset = this.options.offset;
        var offsetTop = offset.top;
        var offsetBottom = offset.bottom;
        var scrollHeight = Math.max($(document).height(), $(document.body).height());
        if (typeof offset != "object") offsetBottom = offsetTop = offset;
        if (typeof offsetTop == "function") offsetTop = offset.top(this.$element);
        if (typeof offsetBottom == "function") offsetBottom = offset.bottom(this.$element);
        var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);
        if (this.affixed != affix) {
            if (this.unpin != null) this.$element.css("top", "");
            var affixType = "affix" + (affix ? "-" + affix : "");
            var e = $.Event(affixType + ".bs.affix");
            this.$element.trigger(e);
            if (e.isDefaultPrevented()) return;
            this.affixed = affix;
            this.unpin = affix == "bottom" ? this.getPinnedOffset() : null;
            this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace("affix", "affixed") + ".bs.affix");
        }
        if (affix == "bottom") {
            this.$element.offset({
                top: scrollHeight - height - offsetBottom
            });
        }
    };
    function Plugin(option) {
        return this.each(function() {
            var $this = $(this);
            var data = $this.data("bs.affix");
            var options = typeof option == "object" && option;
            if (!data) $this.data("bs.affix", data = new Affix(this, options));
            if (typeof option == "string") data[option]();
        });
    }
    var old = $.fn.affix;
    $.fn.affix = Plugin;
    $.fn.affix.Constructor = Affix;
    $.fn.affix.noConflict = function() {
        $.fn.affix = old;
        return this;
    };
    $(window).on("load", function() {
        $('[data-spy="affix"]').each(function() {
            var $spy = $(this);
            var data = $spy.data();
            data.offset = data.offset || {};
            if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom;
            if (data.offsetTop != null) data.offset.top = data.offsetTop;
            Plugin.call($spy, data);
        });
    });
}(jQuery);

if (typeof jQuery === "undefined") {
    throw new Error("BootstrapValidator requires jQuery");
}

(function($) {
    var version = $.fn.jquery.split(" ")[0].split(".");
    if (+version[0] < 2 && +version[1] < 9 || +version[0] === 1 && +version[1] === 9 && +version[2] < 1) {
        throw new Error("BootstrapValidator requires jQuery version 1.9.1 or higher");
    }
})(window.jQuery);

(function($) {
    var BootstrapValidator = function(form, options) {
        this.$form = $(form);
        this.options = $.extend({}, $.fn.bootstrapValidator.DEFAULT_OPTIONS, options);
        this.$invalidFields = $([]);
        this.$submitButton = null;
        this.$hiddenButton = null;
        this.STATUS_NOT_VALIDATED = "NOT_VALIDATED";
        this.STATUS_VALIDATING = "VALIDATING";
        this.STATUS_INVALID = "INVALID";
        this.STATUS_VALID = "VALID";
        var ieVersion = function() {
            var v = 3, div = document.createElement("div"), a = div.all || [];
            while (div.innerHTML = "\x3c!--[if gt IE " + ++v + "]><br><![endif]--\x3e", a[0]) {}
            return v > 4 ? v : !v;
        }();
        var el = document.createElement("div");
        this._changeEvent = ieVersion === 9 || !("oninput" in el) ? "keyup" : "input";
        this._submitIfValid = null;
        this._cacheFields = {};
        this._init();
    };
    BootstrapValidator.prototype = {
        constructor: BootstrapValidator,
        _init: function() {
            var that = this, options = {
                autoFocus: this.$form.attr("data-bv-autofocus"),
                container: this.$form.attr("data-bv-container"),
                events: {
                    formInit: this.$form.attr("data-bv-events-form-init"),
                    formError: this.$form.attr("data-bv-events-form-error"),
                    formSuccess: this.$form.attr("data-bv-events-form-success"),
                    fieldAdded: this.$form.attr("data-bv-events-field-added"),
                    fieldRemoved: this.$form.attr("data-bv-events-field-removed"),
                    fieldInit: this.$form.attr("data-bv-events-field-init"),
                    fieldError: this.$form.attr("data-bv-events-field-error"),
                    fieldSuccess: this.$form.attr("data-bv-events-field-success"),
                    fieldStatus: this.$form.attr("data-bv-events-field-status"),
                    validatorError: this.$form.attr("data-bv-events-validator-error"),
                    validatorSuccess: this.$form.attr("data-bv-events-validator-success")
                },
                excluded: this.$form.attr("data-bv-excluded"),
                feedbackIcons: {
                    valid: this.$form.attr("data-bv-feedbackicons-valid"),
                    invalid: this.$form.attr("data-bv-feedbackicons-invalid"),
                    validating: this.$form.attr("data-bv-feedbackicons-validating")
                },
                group: this.$form.attr("data-bv-group"),
                live: this.$form.attr("data-bv-live"),
                message: this.$form.attr("data-bv-message"),
                onError: this.$form.attr("data-bv-onerror"),
                onSuccess: this.$form.attr("data-bv-onsuccess"),
                submitButtons: this.$form.attr("data-bv-submitbuttons"),
                threshold: this.$form.attr("data-bv-threshold"),
                trigger: this.$form.attr("data-bv-trigger"),
                verbose: this.$form.attr("data-bv-verbose"),
                fields: {}
            };
            this.$form.attr("novalidate", "novalidate").addClass(this.options.elementClass).on("submit.bv", function(e) {
                e.preventDefault();
                that.validate();
            }).on("click.bv", this.options.submitButtons, function() {
                that.$submitButton = $(this);
                that._submitIfValid = true;
            }).find("[name], [data-bv-field]").each(function() {
                var $field = $(this), field = $field.attr("name") || $field.attr("data-bv-field"), opts = that._parseOptions($field);
                if (opts) {
                    $field.attr("data-bv-field", field);
                    options.fields[field] = $.extend({}, opts, options.fields[field]);
                }
            });
            this.options = $.extend(true, this.options, options);
            this.$hiddenButton = $("<button/>").attr("type", "submit").prependTo(this.$form).addClass("bv-hidden-submit").css({
                display: "none",
                width: 0,
                height: 0
            });
            this.$form.on("click.bv", '[type="submit"]', function(e) {
                if (!e.isDefaultPrevented()) {
                    var $target = $(e.target), $button = $target.is('[type="submit"]') ? $target.eq(0) : $target.parent('[type="submit"]').eq(0);
                    if (that.options.submitButtons && !$button.is(that.options.submitButtons) && !$button.is(that.$hiddenButton)) {
                        that.$form.off("submit.bv").submit();
                    }
                }
            });
            for (var field in this.options.fields) {
                this._initField(field);
            }
            this.$form.trigger($.Event(this.options.events.formInit), {
                bv: this,
                options: this.options
            });
            if (this.options.onSuccess) {
                this.$form.on(this.options.events.formSuccess, function(e) {
                    $.fn.bootstrapValidator.helpers.call(that.options.onSuccess, [ e ]);
                });
            }
            if (this.options.onError) {
                this.$form.on(this.options.events.formError, function(e) {
                    $.fn.bootstrapValidator.helpers.call(that.options.onError, [ e ]);
                });
            }
        },
        _parseOptions: function($field) {
            var field = $field.attr("name") || $field.attr("data-bv-field"), validators = {}, validator, v, attrName, enabled, optionName, optionAttrName, optionValue, html5AttrName, html5AttrMap;
            for (v in $.fn.bootstrapValidator.validators) {
                validator = $.fn.bootstrapValidator.validators[v];
                attrName = "data-bv-" + v.toLowerCase(), enabled = $field.attr(attrName) + "";
                html5AttrMap = "function" === typeof validator.enableByHtml5 ? validator.enableByHtml5($field) : null;
                if (html5AttrMap && enabled !== "false" || html5AttrMap !== true && ("" === enabled || "true" === enabled || attrName === enabled.toLowerCase())) {
                    validator.html5Attributes = $.extend({}, {
                        message: "message",
                        onerror: "onError",
                        onsuccess: "onSuccess"
                    }, validator.html5Attributes);
                    validators[v] = $.extend({}, html5AttrMap === true ? {} : html5AttrMap, validators[v]);
                    for (html5AttrName in validator.html5Attributes) {
                        optionName = validator.html5Attributes[html5AttrName];
                        optionAttrName = "data-bv-" + v.toLowerCase() + "-" + html5AttrName, optionValue = $field.attr(optionAttrName);
                        if (optionValue) {
                            if ("true" === optionValue || optionAttrName === optionValue.toLowerCase()) {
                                optionValue = true;
                            } else if ("false" === optionValue) {
                                optionValue = false;
                            }
                            validators[v][optionName] = optionValue;
                        }
                    }
                }
            }
            var opts = {
                autoFocus: $field.attr("data-bv-autofocus"),
                container: $field.attr("data-bv-container"),
                excluded: $field.attr("data-bv-excluded"),
                feedbackIcons: $field.attr("data-bv-feedbackicons"),
                group: $field.attr("data-bv-group"),
                message: $field.attr("data-bv-message"),
                onError: $field.attr("data-bv-onerror"),
                onStatus: $field.attr("data-bv-onstatus"),
                onSuccess: $field.attr("data-bv-onsuccess"),
                selector: $field.attr("data-bv-selector"),
                threshold: $field.attr("data-bv-threshold"),
                trigger: $field.attr("data-bv-trigger"),
                verbose: $field.attr("data-bv-verbose"),
                validators: validators
            }, emptyOptions = $.isEmptyObject(opts), emptyValidators = $.isEmptyObject(validators);
            if (!emptyValidators || !emptyOptions && this.options.fields && this.options.fields[field]) {
                opts.validators = validators;
                return opts;
            } else {
                return null;
            }
        },
        _initField: function(field) {
            var fields = $([]);
            switch (typeof field) {
              case "object":
                fields = field;
                field = field.attr("data-bv-field");
                break;

              case "string":
                fields = this.getFieldElements(field);
                fields.attr("data-bv-field", field);
                break;

              default:
                break;
            }
            if (fields.length === 0) {
                return;
            }
            if (this.options.fields[field] === null || this.options.fields[field].validators === null) {
                return;
            }
            var validatorName;
            for (validatorName in this.options.fields[field].validators) {
                if (!$.fn.bootstrapValidator.validators[validatorName]) {
                    delete this.options.fields[field].validators[validatorName];
                }
            }
            if (this.options.fields[field].enabled === null) {
                this.options.fields[field].enabled = true;
            }
            var that = this, total = fields.length, type = fields.attr("type"), updateAll = total === 1 || "radio" === type || "checkbox" === type, event = "radio" === type || "checkbox" === type || "file" === type || "SELECT" === fields.eq(0).get(0).tagName ? "change" : this._changeEvent, trigger = (this.options.fields[field].trigger || this.options.trigger || event).split(" "), events = $.map(trigger, function(item) {
                return item + ".update.bv";
            }).join(" ");
            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i), group = this.options.fields[field].group || this.options.group, $parent = $field.parents(group), container = "function" === typeof (this.options.fields[field].container || this.options.container) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : this.options.fields[field].container || this.options.container, $message = container && container !== "tooltip" && container !== "popover" ? $(container) : this._getMessageContainer($field, group);
                if (container && container !== "tooltip" && container !== "popover") {
                    $message.addClass("has-error");
                }
                $message.find('.help-block[data-bv-validator][data-bv-for="' + field + '"]').remove();
                $parent.find('i[data-bv-icon-for="' + field + '"]').remove();
                $field.off(events).on(events, function() {
                    that.updateStatus($(this), that.STATUS_NOT_VALIDATED);
                });
                $field.data("bv.messages", $message);
                for (validatorName in this.options.fields[field].validators) {
                    $field.data("bv.result." + validatorName, this.STATUS_NOT_VALIDATED);
                    if (!updateAll || i === total - 1) {
                        $("<small/>").css("display", "none").addClass("help-block").attr("data-bv-validator", validatorName).attr("data-bv-for", field).attr("data-bv-result", this.STATUS_NOT_VALIDATED).html(this._getMessage(field, validatorName)).appendTo($message);
                    }
                    if ("function" === typeof $.fn.bootstrapValidator.validators[validatorName].init) {
                        $.fn.bootstrapValidator.validators[validatorName].init(this, $field, this.options.fields[field].validators[validatorName]);
                    }
                }
                if (this.options.fields[field].feedbackIcons !== false && this.options.fields[field].feedbackIcons !== "false" && this.options.feedbackIcons && this.options.feedbackIcons.validating && this.options.feedbackIcons.invalid && this.options.feedbackIcons.valid && (!updateAll || i === total - 1)) {
                    $parent.addClass("has-feedback");
                    var $icon = $("<i/>").css("display", "none").addClass("form-control-feedback").attr("data-bv-icon-for", field).insertAfter($field);
                    if ("checkbox" === type || "radio" === type) {
                        var $fieldParent = $field.parent();
                        if ($fieldParent.hasClass(type)) {
                            $icon.insertAfter($fieldParent);
                        } else if ($fieldParent.parent().hasClass(type)) {
                            $icon.insertAfter($fieldParent.parent());
                        }
                    }
                    if ($parent.find("label").length === 0) {
                        $icon.addClass("bv-no-label");
                    }
                    if ($parent.find(".input-group").length !== 0) {
                        $icon.addClass("bv-icon-input-group").insertAfter($parent.find(".input-group").eq(0));
                    }
                    if (!updateAll) {
                        $field.data("bv.icon", $icon);
                    } else if (i === total - 1) {
                        fields.data("bv.icon", $icon);
                    }
                    if (container) {
                        $field.off("focus.container.bv").on("focus.container.bv", function() {
                            switch (container) {
                              case "tooltip":
                                $(this).data("bv.icon").tooltip("show");
                                break;

                              case "popover":
                                $(this).data("bv.icon").popover("show");
                                break;

                              default:
                                break;
                            }
                        }).off("blur.container.bv").on("blur.container.bv", function() {
                            switch (container) {
                              case "tooltip":
                                $(this).data("bv.icon").tooltip("hide");
                                break;

                              case "popover":
                                $(this).data("bv.icon").popover("hide");
                                break;

                              default:
                                break;
                            }
                        });
                    }
                }
            }
            fields.on(this.options.events.fieldSuccess, function(e, data) {
                var onSuccess = that.getOptions(data.field, null, "onSuccess");
                if (onSuccess) {
                    $.fn.bootstrapValidator.helpers.call(onSuccess, [ e, data ]);
                }
            }).on(this.options.events.fieldError, function(e, data) {
                var onError = that.getOptions(data.field, null, "onError");
                if (onError) {
                    $.fn.bootstrapValidator.helpers.call(onError, [ e, data ]);
                }
            }).on(this.options.events.fieldStatus, function(e, data) {
                var onStatus = that.getOptions(data.field, null, "onStatus");
                if (onStatus) {
                    $.fn.bootstrapValidator.helpers.call(onStatus, [ e, data ]);
                }
            }).on(this.options.events.validatorError, function(e, data) {
                var onError = that.getOptions(data.field, data.validator, "onError");
                if (onError) {
                    $.fn.bootstrapValidator.helpers.call(onError, [ e, data ]);
                }
            }).on(this.options.events.validatorSuccess, function(e, data) {
                var onSuccess = that.getOptions(data.field, data.validator, "onSuccess");
                if (onSuccess) {
                    $.fn.bootstrapValidator.helpers.call(onSuccess, [ e, data ]);
                }
            });
            events = $.map(trigger, function(item) {
                return item + ".live.bv";
            }).join(" ");
            switch (this.options.live) {
              case "submitted":
                break;

              case "disabled":
                fields.off(events);
                break;

              case "enabled":
              default:
                fields.off(events).on(events, function() {
                    if (that._exceedThreshold($(this))) {
                        that.validateField($(this));
                    }
                });
                break;
            }
            fields.trigger($.Event(this.options.events.fieldInit), {
                bv: this,
                field: field,
                element: fields
            });
        },
        _getMessage: function(field, validatorName) {
            if (!this.options.fields[field] || !$.fn.bootstrapValidator.validators[validatorName] || !this.options.fields[field].validators || !this.options.fields[field].validators[validatorName]) {
                return "";
            }
            var options = this.options.fields[field].validators[validatorName];
            switch (true) {
              case !!options.message:
                return options.message;

              case !!this.options.fields[field].message:
                return this.options.fields[field].message;

              case !!$.fn.bootstrapValidator.i18n[validatorName]:
                return $.fn.bootstrapValidator.i18n[validatorName]["default"];

              default:
                return this.options.message;
            }
        },
        _getMessageContainer: function($field, group) {
            var $parent = $field.parent();
            if ($parent.is(group)) {
                return $parent;
            }
            var cssClasses = $parent.attr("class");
            if (!cssClasses) {
                return this._getMessageContainer($parent, group);
            }
            cssClasses = cssClasses.split(" ");
            var n = cssClasses.length;
            for (var i = 0; i < n; i++) {
                if (/^col-(xs|sm|md|lg)-\d+$/.test(cssClasses[i]) || /^col-(xs|sm|md|lg)-offset-\d+$/.test(cssClasses[i])) {
                    return $parent;
                }
            }
            return this._getMessageContainer($parent, group);
        },
        _submit: function() {
            var isValid = this.isValid(), eventType = isValid ? this.options.events.formSuccess : this.options.events.formError, e = $.Event(eventType);
            this.$form.trigger(e);
            if (this.$submitButton) {
                isValid ? this._onSuccess(e) : this._onError(e);
            }
        },
        _isExcluded: function($field) {
            var excludedAttr = $field.attr("data-bv-excluded"), field = $field.attr("data-bv-field") || $field.attr("name");
            switch (true) {
              case !!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === "true" || this.options.fields[field].excluded === true):
              case excludedAttr === "true":
              case excludedAttr === "":
                return true;

              case !!field && this.options.fields && this.options.fields[field] && (this.options.fields[field].excluded === "false" || this.options.fields[field].excluded === false):
              case excludedAttr === "false":
                return false;

              default:
                if (this.options.excluded) {
                    if ("string" === typeof this.options.excluded) {
                        this.options.excluded = $.map(this.options.excluded.split(","), function(item) {
                            return $.trim(item);
                        });
                    }
                    var length = this.options.excluded.length;
                    for (var i = 0; i < length; i++) {
                        if ("string" === typeof this.options.excluded[i] && $field.is(this.options.excluded[i]) || "function" === typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) === true) {
                            return true;
                        }
                    }
                }
                return false;
            }
        },
        _exceedThreshold: function($field) {
            var field = $field.attr("data-bv-field"), threshold = this.options.fields[field].threshold || this.options.threshold;
            if (!threshold) {
                return true;
            }
            var cannotType = $.inArray($field.attr("type"), [ "button", "checkbox", "file", "hidden", "image", "radio", "reset", "submit" ]) !== -1;
            return cannotType || $field.val().length >= threshold;
        },
        _onError: function(e) {
            if (e.isDefaultPrevented()) {
                return;
            }
            if ("submitted" === this.options.live) {
                this.options.live = "enabled";
                var that = this;
                for (var field in this.options.fields) {
                    (function(f) {
                        var fields = that.getFieldElements(f);
                        if (fields.length) {
                            var type = $(fields[0]).attr("type"), event = "radio" === type || "checkbox" === type || "file" === type || "SELECT" === $(fields[0]).get(0).tagName ? "change" : that._changeEvent, trigger = that.options.fields[field].trigger || that.options.trigger || event, events = $.map(trigger.split(" "), function(item) {
                                return item + ".live.bv";
                            }).join(" ");
                            fields.off(events).on(events, function() {
                                if (that._exceedThreshold($(this))) {
                                    that.validateField($(this));
                                }
                            });
                        }
                    })(field);
                }
            }
            for (var i = 0; i < this.$invalidFields.length; i++) {
                var $field = this.$invalidFields.eq(i), autoFocus = this._isOptionEnabled($field.attr("data-bv-field"), "autoFocus");
                if (autoFocus) {
                    var $tabPane = $field.parents(".tab-pane"), tabId;
                    if ($tabPane && (tabId = $tabPane.attr("id"))) {
                        $('a[href="#' + tabId + '"][data-toggle="tab"]').tab("show");
                    }
                    $field.focus();
                    break;
                }
            }
        },
        _onSuccess: function(e) {
            if (e.isDefaultPrevented()) {
                return;
            }
            this.disableSubmitButtons(true).defaultSubmit();
        },
        _onFieldValidated: function($field, validatorName) {
            var field = $field.attr("data-bv-field"), validators = this.options.fields[field].validators, counter = {}, numValidators = 0, data = {
                bv: this,
                field: field,
                element: $field,
                validator: validatorName,
                result: $field.data("bv.response." + validatorName)
            };
            if (validatorName) {
                switch ($field.data("bv.result." + validatorName)) {
                  case this.STATUS_INVALID:
                    $field.trigger($.Event(this.options.events.validatorError), data);
                    break;

                  case this.STATUS_VALID:
                    $field.trigger($.Event(this.options.events.validatorSuccess), data);
                    break;

                  default:
                    break;
                }
            }
            counter[this.STATUS_NOT_VALIDATED] = 0;
            counter[this.STATUS_VALIDATING] = 0;
            counter[this.STATUS_INVALID] = 0;
            counter[this.STATUS_VALID] = 0;
            for (var v in validators) {
                if (validators[v].enabled === false) {
                    continue;
                }
                numValidators++;
                var result = $field.data("bv.result." + v);
                if (result) {
                    counter[result]++;
                }
            }
            if (counter[this.STATUS_VALID] === numValidators) {
                this.$invalidFields = this.$invalidFields.not($field);
                $field.trigger($.Event(this.options.events.fieldSuccess), data);
            } else if ((counter[this.STATUS_NOT_VALIDATED] === 0 || !this._isOptionEnabled(field, "verbose")) && counter[this.STATUS_VALIDATING] === 0 && counter[this.STATUS_INVALID] > 0) {
                this.$invalidFields = this.$invalidFields.add($field);
                $field.trigger($.Event(this.options.events.fieldError), data);
            }
        },
        _isOptionEnabled: function(field, option) {
            if (this.options.fields[field] && (this.options.fields[field][option] === "true" || this.options.fields[field][option] === true)) {
                return true;
            }
            if (this.options.fields[field] && (this.options.fields[field][option] === "false" || this.options.fields[field][option] === false)) {
                return false;
            }
            return this.options[option] === "true" || this.options[option] === true;
        },
        getFieldElements: function(field) {
            if (!this._cacheFields[field]) {
                this._cacheFields[field] = this.options.fields[field] && this.options.fields[field].selector ? $(this.options.fields[field].selector) : this.$form.find('[name="' + field + '"]');
            }
            return this._cacheFields[field];
        },
        getOptions: function(field, validator, option) {
            if (!field) {
                return option ? this.options[option] : this.options;
            }
            if ("object" === typeof field) {
                field = field.attr("data-bv-field");
            }
            if (!this.options.fields[field]) {
                return null;
            }
            var options = this.options.fields[field];
            if (!validator) {
                return option ? options[option] : options;
            }
            if (!options.validators || !options.validators[validator]) {
                return null;
            }
            return option ? options.validators[validator][option] : options.validators[validator];
        },
        disableSubmitButtons: function(disabled) {
            if (!disabled) {
                this.$form.find(this.options.submitButtons).removeAttr("disabled");
            } else if (this.options.live !== "disabled") {
                this.$form.find(this.options.submitButtons).attr("disabled", "disabled");
            }
            return this;
        },
        validate: function() {
            if (!this.options.fields) {
                return this;
            }
            this.disableSubmitButtons(true);
            this._submitIfValid = false;
            for (var field in this.options.fields) {
                this.validateField(field);
            }
            this._submit();
            this._submitIfValid = true;
            return this;
        },
        validateField: function(field) {
            var fields = $([]);
            switch (typeof field) {
              case "object":
                fields = field;
                field = field.attr("data-bv-field");
                break;

              case "string":
                fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            if (fields.length === 0 || !this.options.fields[field] || this.options.fields[field].enabled === false) {
                return this;
            }
            var that = this, type = fields.attr("type"), total = "radio" === type || "checkbox" === type ? 1 : fields.length, updateAll = "radio" === type || "checkbox" === type, validators = this.options.fields[field].validators, verbose = this._isOptionEnabled(field, "verbose"), validatorName, validateResult;
            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);
                if (this._isExcluded($field)) {
                    continue;
                }
                var stop = false;
                for (validatorName in validators) {
                    if ($field.data("bv.dfs." + validatorName)) {
                        $field.data("bv.dfs." + validatorName).reject();
                    }
                    if (stop) {
                        break;
                    }
                    var result = $field.data("bv.result." + validatorName);
                    if (result === this.STATUS_VALID || result === this.STATUS_INVALID) {
                        this._onFieldValidated($field, validatorName);
                        continue;
                    } else if (validators[validatorName].enabled === false) {
                        this.updateStatus(updateAll ? field : $field, this.STATUS_VALID, validatorName);
                        continue;
                    }
                    $field.data("bv.result." + validatorName, this.STATUS_VALIDATING);
                    validateResult = $.fn.bootstrapValidator.validators[validatorName].validate(this, $field, validators[validatorName]);
                    if ("object" === typeof validateResult && validateResult.resolve) {
                        this.updateStatus(updateAll ? field : $field, this.STATUS_VALIDATING, validatorName);
                        $field.data("bv.dfs." + validatorName, validateResult);
                        validateResult.done(function($f, v, response) {
                            $f.removeData("bv.dfs." + v).data("bv.response." + v, response);
                            if (response.message) {
                                that.updateMessage($f, v, response.message);
                            }
                            that.updateStatus(updateAll ? $f.attr("data-bv-field") : $f, response.valid ? that.STATUS_VALID : that.STATUS_INVALID, v);
                            if (response.valid && that._submitIfValid === true) {
                                that._submit();
                            } else if (!response.valid && !verbose) {
                                stop = true;
                            }
                        });
                    } else if ("object" === typeof validateResult && validateResult.valid !== undefined && validateResult.message !== undefined) {
                        $field.data("bv.response." + validatorName, validateResult);
                        this.updateMessage(updateAll ? field : $field, validatorName, validateResult.message);
                        this.updateStatus(updateAll ? field : $field, validateResult.valid ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);
                        if (!validateResult.valid && !verbose) {
                            break;
                        }
                    } else if ("boolean" === typeof validateResult) {
                        $field.data("bv.response." + validatorName, validateResult);
                        this.updateStatus(updateAll ? field : $field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);
                        if (!validateResult && !verbose) {
                            break;
                        }
                    }
                }
            }
            return this;
        },
        updateMessage: function(field, validator, message) {
            var $fields = $([]);
            switch (typeof field) {
              case "object":
                $fields = field;
                field = field.attr("data-bv-field");
                break;

              case "string":
                $fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            $fields.each(function() {
                $(this).data("bv.messages").find('.help-block[data-bv-validator="' + validator + '"][data-bv-for="' + field + '"]').html(message);
            });
        },
        updateStatus: function(field, status, validatorName) {
            var fields = $([]);
            switch (typeof field) {
              case "object":
                fields = field;
                field = field.attr("data-bv-field");
                break;

              case "string":
                fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            if (status === this.STATUS_NOT_VALIDATED) {
                this._submitIfValid = false;
            }
            var that = this, type = fields.attr("type"), group = this.options.fields[field].group || this.options.group, total = "radio" === type || "checkbox" === type ? 1 : fields.length;
            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);
                if (this._isExcluded($field)) {
                    continue;
                }
                var $parent = $field.parents(group), $message = $field.data("bv.messages"), $allErrors = $message.find('.help-block[data-bv-validator][data-bv-for="' + field + '"]'), $errors = validatorName ? $allErrors.filter('[data-bv-validator="' + validatorName + '"]') : $allErrors, $icon = $field.data("bv.icon"), container = "function" === typeof (this.options.fields[field].container || this.options.container) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : this.options.fields[field].container || this.options.container, isValidField = null;
                if (validatorName) {
                    $field.data("bv.result." + validatorName, status);
                } else {
                    for (var v in this.options.fields[field].validators) {
                        $field.data("bv.result." + v, status);
                    }
                }
                $errors.attr("data-bv-result", status);
                var $tabPane = $field.parents(".tab-pane"), tabId, $tab;
                if ($tabPane && (tabId = $tabPane.attr("id"))) {
                    $tab = $('a[href="#' + tabId + '"][data-toggle="tab"]').parent();
                }
                switch (status) {
                  case this.STATUS_VALIDATING:
                    isValidField = null;
                    this.disableSubmitButtons(true);
                    $parent.removeClass("has-success").removeClass("has-error");
                    if ($icon) {
                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).addClass(this.options.feedbackIcons.validating).show();
                    }
                    if ($tab) {
                        $tab.removeClass("bv-tab-success").removeClass("bv-tab-error");
                    }
                    break;

                  case this.STATUS_INVALID:
                    isValidField = false;
                    this.disableSubmitButtons(true);
                    $parent.removeClass("has-success").addClass("has-error");
                    if ($icon) {
                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.validating).addClass(this.options.feedbackIcons.invalid).show();
                    }
                    if ($tab) {
                        $tab.removeClass("bv-tab-success").addClass("bv-tab-error");
                    }
                    break;

                  case this.STATUS_VALID:
                    isValidField = $allErrors.filter('[data-bv-result="' + this.STATUS_NOT_VALIDATED + '"]').length === 0 ? $allErrors.filter('[data-bv-result="' + this.STATUS_VALID + '"]').length === $allErrors.length : null;
                    if (isValidField !== null) {
                        this.disableSubmitButtons(this.$submitButton ? !this.isValid() : !isValidField);
                        if ($icon) {
                            $icon.removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).removeClass(this.options.feedbackIcons.valid).addClass(isValidField ? this.options.feedbackIcons.valid : this.options.feedbackIcons.invalid).show();
                        }
                    }
                    $parent.removeClass("has-error has-success").addClass(this.isValidContainer($parent) ? "has-success" : "has-error");
                    if ($tab) {
                        $tab.removeClass("bv-tab-success").removeClass("bv-tab-error").addClass(this.isValidContainer($tabPane) ? "bv-tab-success" : "bv-tab-error");
                    }
                    break;

                  case this.STATUS_NOT_VALIDATED:
                  default:
                    isValidField = null;
                    this.disableSubmitButtons(false);
                    $parent.removeClass("has-success").removeClass("has-error");
                    if ($icon) {
                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).hide();
                    }
                    if ($tab) {
                        $tab.removeClass("bv-tab-success").removeClass("bv-tab-error");
                    }
                    break;
                }
                switch (true) {
                  case $icon && "tooltip" === container:
                    isValidField === false ? $icon.css("cursor", "pointer").tooltip("destroy").tooltip({
                        container: "body",
                        html: true,
                        placement: "auto top",
                        title: $allErrors.filter('[data-bv-result="' + that.STATUS_INVALID + '"]').eq(0).html()
                    }) : $icon.css("cursor", "").tooltip("destroy");
                    break;

                  case $icon && "popover" === container:
                    isValidField === false ? $icon.css("cursor", "pointer").popover("destroy").popover({
                        container: "body",
                        content: $allErrors.filter('[data-bv-result="' + that.STATUS_INVALID + '"]').eq(0).html(),
                        html: true,
                        placement: "auto top",
                        trigger: "hover click"
                    }) : $icon.css("cursor", "").popover("destroy");
                    break;

                  default:
                    status === this.STATUS_INVALID ? $errors.show() : $errors.hide();
                    break;
                }
                $field.trigger($.Event(this.options.events.fieldStatus), {
                    bv: this,
                    field: field,
                    element: $field,
                    status: status
                });
                this._onFieldValidated($field, validatorName);
            }
            return this;
        },
        isValid: function() {
            for (var field in this.options.fields) {
                if (!this.isValidField(field)) {
                    return false;
                }
            }
            return true;
        },
        isValidField: function(field) {
            var fields = $([]);
            switch (typeof field) {
              case "object":
                fields = field;
                field = field.attr("data-bv-field");
                break;

              case "string":
                fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            if (fields.length === 0 || !this.options.fields[field] || this.options.fields[field].enabled === false) {
                return true;
            }
            var type = fields.attr("type"), total = "radio" === type || "checkbox" === type ? 1 : fields.length, $field, validatorName, status;
            for (var i = 0; i < total; i++) {
                $field = fields.eq(i);
                if (this._isExcluded($field)) {
                    continue;
                }
                for (validatorName in this.options.fields[field].validators) {
                    if (this.options.fields[field].validators[validatorName].enabled === false) {
                        continue;
                    }
                    status = $field.data("bv.result." + validatorName);
                    if (status !== this.STATUS_VALID) {
                        return false;
                    }
                }
            }
            return true;
        },
        isValidContainer: function(container) {
            var that = this, map = {}, $container = "string" === typeof container ? $(container) : container;
            if ($container.length === 0) {
                return true;
            }
            $container.find("[data-bv-field]").each(function() {
                var $field = $(this), field = $field.attr("data-bv-field");
                if (!that._isExcluded($field) && !map[field]) {
                    map[field] = $field;
                }
            });
            for (var field in map) {
                var $f = map[field];
                if ($f.data("bv.messages").find('.help-block[data-bv-validator][data-bv-for="' + field + '"]').filter('[data-bv-result="' + this.STATUS_INVALID + '"]').length > 0) {
                    return false;
                }
            }
            return true;
        },
        defaultSubmit: function() {
            if (this.$submitButton) {
                $("<input/>").attr("type", "hidden").attr("data-bv-submit-hidden", "").attr("name", this.$submitButton.attr("name")).val(this.$submitButton.val()).appendTo(this.$form);
            }
            this.$form.off("submit.bv").submit();
        },
        getInvalidFields: function() {
            return this.$invalidFields;
        },
        getSubmitButton: function() {
            return this.$submitButton;
        },
        getMessages: function(field, validator) {
            var that = this, messages = [], $fields = $([]);
            switch (true) {
              case field && "object" === typeof field:
                $fields = field;
                break;

              case field && "string" === typeof field:
                var f = this.getFieldElements(field);
                if (f.length > 0) {
                    var type = f.attr("type");
                    $fields = "radio" === type || "checkbox" === type ? f.eq(0) : f;
                }
                break;

              default:
                $fields = this.$invalidFields;
                break;
            }
            var filter = validator ? '[data-bv-validator="' + validator + '"]' : "";
            $fields.each(function() {
                messages = messages.concat($(this).data("bv.messages").find('.help-block[data-bv-for="' + $(this).attr("data-bv-field") + '"][data-bv-result="' + that.STATUS_INVALID + '"]' + filter).map(function() {
                    var v = $(this).attr("data-bv-validator"), f = $(this).attr("data-bv-for");
                    return that.options.fields[f].validators[v].enabled === false ? "" : $(this).html();
                }).get());
            });
            return messages;
        },
        updateOption: function(field, validator, option, value) {
            if ("object" === typeof field) {
                field = field.attr("data-bv-field");
            }
            if (this.options.fields[field] && this.options.fields[field].validators[validator]) {
                this.options.fields[field].validators[validator][option] = value;
                this.updateStatus(field, this.STATUS_NOT_VALIDATED, validator);
            }
            return this;
        },
        addField: function(field, options) {
            var fields = $([]);
            switch (typeof field) {
              case "object":
                fields = field;
                field = field.attr("data-bv-field") || field.attr("name");
                break;

              case "string":
                delete this._cacheFields[field];
                fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            fields.attr("data-bv-field", field);
            var type = fields.attr("type"), total = "radio" === type || "checkbox" === type ? 1 : fields.length;
            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);
                var opts = this._parseOptions($field);
                opts = opts === null ? options : $.extend(true, options, opts);
                this.options.fields[field] = $.extend(true, this.options.fields[field], opts);
                this._cacheFields[field] = this._cacheFields[field] ? this._cacheFields[field].add($field) : $field;
                this._initField("checkbox" === type || "radio" === type ? field : $field);
            }
            this.disableSubmitButtons(false);
            this.$form.trigger($.Event(this.options.events.fieldAdded), {
                field: field,
                element: fields,
                options: this.options.fields[field]
            });
            return this;
        },
        removeField: function(field) {
            var fields = $([]);
            switch (typeof field) {
              case "object":
                fields = field;
                field = field.attr("data-bv-field") || field.attr("name");
                fields.attr("data-bv-field", field);
                break;

              case "string":
                fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            if (fields.length === 0) {
                return this;
            }
            var type = fields.attr("type"), total = "radio" === type || "checkbox" === type ? 1 : fields.length;
            for (var i = 0; i < total; i++) {
                var $field = fields.eq(i);
                this.$invalidFields = this.$invalidFields.not($field);
                this._cacheFields[field] = this._cacheFields[field].not($field);
            }
            if (!this._cacheFields[field] || this._cacheFields[field].length === 0) {
                delete this.options.fields[field];
            }
            if ("checkbox" === type || "radio" === type) {
                this._initField(field);
            }
            this.disableSubmitButtons(false);
            this.$form.trigger($.Event(this.options.events.fieldRemoved), {
                field: field,
                element: fields
            });
            return this;
        },
        resetField: function(field, resetValue) {
            var $fields = $([]);
            switch (typeof field) {
              case "object":
                $fields = field;
                field = field.attr("data-bv-field");
                break;

              case "string":
                $fields = this.getFieldElements(field);
                break;

              default:
                break;
            }
            var total = $fields.length;
            if (this.options.fields[field]) {
                for (var i = 0; i < total; i++) {
                    for (var validator in this.options.fields[field].validators) {
                        $fields.eq(i).removeData("bv.dfs." + validator);
                    }
                }
            }
            this.updateStatus(field, this.STATUS_NOT_VALIDATED);
            if (resetValue) {
                var type = $fields.attr("type");
                "radio" === type || "checkbox" === type ? $fields.removeAttr("checked").removeAttr("selected") : $fields.val("");
            }
            return this;
        },
        resetForm: function(resetValue) {
            for (var field in this.options.fields) {
                this.resetField(field, resetValue);
            }
            this.$invalidFields = $([]);
            this.$submitButton = null;
            this.disableSubmitButtons(false);
            return this;
        },
        revalidateField: function(field) {
            this.updateStatus(field, this.STATUS_NOT_VALIDATED).validateField(field);
            return this;
        },
        enableFieldValidators: function(field, enabled, validatorName) {
            var validators = this.options.fields[field].validators;
            if (validatorName && validators && validators[validatorName] && validators[validatorName].enabled !== enabled) {
                this.options.fields[field].validators[validatorName].enabled = enabled;
                this.updateStatus(field, this.STATUS_NOT_VALIDATED, validatorName);
            } else if (!validatorName && this.options.fields[field].enabled !== enabled) {
                this.options.fields[field].enabled = enabled;
                for (var v in validators) {
                    this.enableFieldValidators(field, enabled, v);
                }
            }
            return this;
        },
        getDynamicOption: function(field, option) {
            var $field = "string" === typeof field ? this.getFieldElements(field) : field, value = $field.val();
            if ("function" === typeof option) {
                return $.fn.bootstrapValidator.helpers.call(option, [ value, this, $field ]);
            } else if ("string" === typeof option) {
                var $f = this.getFieldElements(option);
                if ($f.length) {
                    return $f.val();
                } else {
                    return $.fn.bootstrapValidator.helpers.call(option, [ value, this, $field ]) || option;
                }
            }
            return null;
        },
        destroy: function() {
            var field, fields, $field, validator, $icon, group;
            for (field in this.options.fields) {
                fields = this.getFieldElements(field);
                group = this.options.fields[field].group || this.options.group;
                for (var i = 0; i < fields.length; i++) {
                    $field = fields.eq(i);
                    $field.data("bv.messages").find('.help-block[data-bv-validator][data-bv-for="' + field + '"]').remove().end().end().removeData("bv.messages").parents(group).removeClass("has-feedback has-error has-success").end().off(".bv").removeAttr("data-bv-field");
                    $icon = $field.data("bv.icon");
                    if ($icon) {
                        var container = "function" === typeof (this.options.fields[field].container || this.options.container) ? (this.options.fields[field].container || this.options.container).call(this, $field, this) : this.options.fields[field].container || this.options.container;
                        switch (container) {
                          case "tooltip":
                            $icon.tooltip("destroy").remove();
                            break;

                          case "popover":
                            $icon.popover("destroy").remove();
                            break;

                          default:
                            $icon.remove();
                            break;
                        }
                    }
                    $field.removeData("bv.icon");
                    for (validator in this.options.fields[field].validators) {
                        if ($field.data("bv.dfs." + validator)) {
                            $field.data("bv.dfs." + validator).reject();
                        }
                        $field.removeData("bv.result." + validator).removeData("bv.response." + validator).removeData("bv.dfs." + validator);
                        if ("function" === typeof $.fn.bootstrapValidator.validators[validator].destroy) {
                            $.fn.bootstrapValidator.validators[validator].destroy(this, $field, this.options.fields[field].validators[validator]);
                        }
                    }
                }
            }
            this.disableSubmitButtons(false);
            this.$hiddenButton.remove();
            this.$form.removeClass(this.options.elementClass).off(".bv").removeData("bootstrapValidator").find("[data-bv-submit-hidden]").remove().end().find('[type="submit"]').off("click.bv");
        }
    };
    $.fn.bootstrapValidator = function(option) {
        var params = arguments;
        return this.each(function() {
            var $this = $(this), data = $this.data("bootstrapValidator"), options = "object" === typeof option && option;
            if (!data) {
                data = new BootstrapValidator(this, options);
                $this.data("bootstrapValidator", data);
            }
            if ("string" === typeof option) {
                data[option].apply(data, Array.prototype.slice.call(params, 1));
            }
        });
    };
    $.fn.bootstrapValidator.DEFAULT_OPTIONS = {
        autoFocus: true,
        container: null,
        elementClass: "bv-form",
        events: {
            formInit: "init.form.bv",
            formError: "error.form.bv",
            formSuccess: "success.form.bv",
            fieldAdded: "added.field.bv",
            fieldRemoved: "removed.field.bv",
            fieldInit: "init.field.bv",
            fieldError: "error.field.bv",
            fieldSuccess: "success.field.bv",
            fieldStatus: "status.field.bv",
            validatorError: "error.validator.bv",
            validatorSuccess: "success.validator.bv"
        },
        excluded: [ ":disabled", ":hidden", ":not(:visible)" ],
        feedbackIcons: {
            valid: null,
            invalid: null,
            validating: null
        },
        fields: null,
        group: ".form-group",
        live: "enabled",
        message: "This value is not valid",
        submitButtons: '[type="submit"]',
        threshold: null,
        verbose: true
    };
    $.fn.bootstrapValidator.validators = {};
    $.fn.bootstrapValidator.i18n = {};
    $.fn.bootstrapValidator.Constructor = BootstrapValidator;
    $.fn.bootstrapValidator.helpers = {
        call: function(functionName, args) {
            if ("function" === typeof functionName) {
                return functionName.apply(this, args);
            } else if ("string" === typeof functionName) {
                if ("()" === functionName.substring(functionName.length - 2)) {
                    functionName = functionName.substring(0, functionName.length - 2);
                }
                var ns = functionName.split("."), func = ns.pop(), context = window;
                for (var i = 0; i < ns.length; i++) {
                    context = context[ns[i]];
                }
                return typeof context[func] === "undefined" ? null : context[func].apply(this, args);
            }
        },
        format: function(message, parameters) {
            if (!$.isArray(parameters)) {
                parameters = [ parameters ];
            }
            for (var i in parameters) {
                message = message.replace("%s", parameters[i]);
            }
            return message;
        },
        date: function(year, month, day, notInFuture) {
            if (isNaN(year) || isNaN(month) || isNaN(day)) {
                return false;
            }
            if (day.length > 2 || month.length > 2 || year.length > 4) {
                return false;
            }
            day = parseInt(day, 10);
            month = parseInt(month, 10);
            year = parseInt(year, 10);
            if (year < 1e3 || year > 9999 || month <= 0 || month > 12) {
                return false;
            }
            var numDays = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
            if (year % 400 === 0 || year % 100 !== 0 && year % 4 === 0) {
                numDays[1] = 29;
            }
            if (day <= 0 || day > numDays[month - 1]) {
                return false;
            }
            if (notInFuture === true) {
                var currentDate = new Date(), currentYear = currentDate.getFullYear(), currentMonth = currentDate.getMonth(), currentDay = currentDate.getDate();
                return year < currentYear || year === currentYear && month - 1 < currentMonth || year === currentYear && month - 1 === currentMonth && day < currentDay;
            }
            return true;
        },
        luhn: function(value) {
            var length = value.length, mul = 0, prodArr = [ [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ], [ 0, 2, 4, 6, 8, 1, 3, 5, 7, 9 ] ], sum = 0;
            while (length--) {
                sum += prodArr[mul][parseInt(value.charAt(length), 10)];
                mul ^= 1;
            }
            return sum % 10 === 0 && sum > 0;
        },
        mod11And10: function(value) {
            var check = 5, length = value.length;
            for (var i = 0; i < length; i++) {
                check = ((check || 10) * 2 % 11 + parseInt(value.charAt(i), 10)) % 10;
            }
            return check === 1;
        },
        mod37And36: function(value, alphabet) {
            alphabet = alphabet || "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            var modulus = alphabet.length, length = value.length, check = Math.floor(modulus / 2);
            for (var i = 0; i < length; i++) {
                check = ((check || modulus) * 2 % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;
            }
            return check === 1;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.base64 = $.extend($.fn.bootstrapValidator.i18n.base64 || {}, {
        default: "Please enter a valid base 64 encoded"
    });
    $.fn.bootstrapValidator.validators.base64 = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.between = $.extend($.fn.bootstrapValidator.i18n.between || {}, {
        default: "Please enter a value between %s and %s",
        notInclusive: "Please enter a value between %s and %s strictly"
    });
    $.fn.bootstrapValidator.validators.between = {
        html5Attributes: {
            message: "message",
            min: "min",
            max: "max",
            inclusive: "inclusive"
        },
        enableByHtml5: function($field) {
            if ("range" === $field.attr("type")) {
                return {
                    min: $field.attr("min"),
                    max: $field.attr("max")
                };
            }
            return false;
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = this._format(value);
            if (!$.isNumeric(value)) {
                return false;
            }
            var min = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min), max = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max), minValue = this._format(min), maxValue = this._format(max);
            value = parseFloat(value);
            return options.inclusive === true || options.inclusive === undefined ? {
                valid: value >= minValue && value <= maxValue,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.between["default"], [ min, max ])
            } : {
                valid: value > minValue && value < maxValue,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.between.notInclusive, [ min, max ])
            };
        },
        _format: function(value) {
            return (value + "").replace(",", ".");
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.validators.blank = {
        validate: function(validator, $field, options) {
            return true;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.callback = $.extend($.fn.bootstrapValidator.i18n.callback || {}, {
        default: "Please enter a valid value"
    });
    $.fn.bootstrapValidator.validators.callback = {
        html5Attributes: {
            message: "message",
            callback: "callback"
        },
        validate: function(validator, $field, options) {
            var value = $field.val(), dfd = new $.Deferred(), result = {
                valid: true
            };
            if (options.callback) {
                var response = $.fn.bootstrapValidator.helpers.call(options.callback, [ value, validator, $field ]);
                result = "boolean" === typeof response ? {
                    valid: response
                } : response;
            }
            dfd.resolve($field, "callback", result);
            return dfd;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.choice = $.extend($.fn.bootstrapValidator.i18n.choice || {}, {
        default: "Please enter a valid value",
        less: "Please choose %s options at minimum",
        more: "Please choose %s options at maximum",
        between: "Please choose %s - %s options"
    });
    $.fn.bootstrapValidator.validators.choice = {
        html5Attributes: {
            message: "message",
            min: "min",
            max: "max"
        },
        validate: function(validator, $field, options) {
            var numChoices = $field.is("select") ? validator.getFieldElements($field.attr("data-bv-field")).find("option").filter(":selected").length : validator.getFieldElements($field.attr("data-bv-field")).filter(":checked").length, min = options.min ? $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min) : null, max = options.max ? $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max) : null, isValid = true, message = options.message || $.fn.bootstrapValidator.i18n.choice["default"];
            if (min && numChoices < parseInt(min, 10) || max && numChoices > parseInt(max, 10)) {
                isValid = false;
            }
            switch (true) {
              case !!min && !!max:
                message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.between, [ parseInt(min, 10), parseInt(max, 10) ]);
                break;

              case !!min:
                message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.less, parseInt(min, 10));
                break;

              case !!max:
                message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.choice.more, parseInt(max, 10));
                break;

              default:
                break;
            }
            return {
                valid: isValid,
                message: message
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.color = $.extend($.fn.bootstrapValidator.i18n.color || {}, {
        default: "Please enter a valid color"
    });
    $.fn.bootstrapValidator.validators.color = {
        SUPPORTED_TYPES: [ "hex", "rgb", "rgba", "hsl", "hsla", "keyword" ],
        KEYWORD_COLORS: [ "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "transparent", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen" ],
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var types = options.type || this.SUPPORTED_TYPES;
            if (!$.isArray(types)) {
                types = types.replace(/s/g, "").split(",");
            }
            var method, type, isValid = false;
            for (var i = 0; i < types.length; i++) {
                type = types[i];
                method = "_" + type.toLowerCase();
                isValid = isValid || this[method](value);
                if (isValid) {
                    return true;
                }
            }
            return false;
        },
        _hex: function(value) {
            return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);
        },
        _hsl: function(value) {
            return /^hsl\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/.test(value);
        },
        _hsla: function(value) {
            return /^hsla\((\s*(-?\d+)\s*,)(\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/.test(value);
        },
        _keyword: function(value) {
            return $.inArray(value, this.KEYWORD_COLORS) >= 0;
        },
        _rgb: function(value) {
            var regexInteger = /^rgb\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){2}(\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*)\)$/, regexPercent = /^rgb\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){2}(\s*(\b(0?\d{1,2}|100)\b%)\s*)\)$/;
            return regexInteger.test(value) || regexPercent.test(value);
        },
        _rgba: function(value) {
            var regexInteger = /^rgba\((\s*(\b([01]?\d{1,2}|2[0-4]\d|25[0-5])\b)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/, regexPercent = /^rgba\((\s*(\b(0?\d{1,2}|100)\b%)\s*,){3}(\s*(0?(\.\d+)?|1(\.0+)?)\s*)\)$/;
            return regexInteger.test(value) || regexPercent.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.creditCard = $.extend($.fn.bootstrapValidator.i18n.creditCard || {}, {
        default: "Please enter a valid credit card number"
    });
    $.fn.bootstrapValidator.validators.creditCard = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (/[^0-9-\s]+/.test(value)) {
                return false;
            }
            value = value.replace(/\D/g, "");
            if (!$.fn.bootstrapValidator.helpers.luhn(value)) {
                return false;
            }
            var cards = {
                AMERICAN_EXPRESS: {
                    length: [ 15 ],
                    prefix: [ "34", "37" ]
                },
                DINERS_CLUB: {
                    length: [ 14 ],
                    prefix: [ "300", "301", "302", "303", "304", "305", "36" ]
                },
                DINERS_CLUB_US: {
                    length: [ 16 ],
                    prefix: [ "54", "55" ]
                },
                DISCOVER: {
                    length: [ 16 ],
                    prefix: [ "6011", "622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925", "644", "645", "646", "647", "648", "649", "65" ]
                },
                JCB: {
                    length: [ 16 ],
                    prefix: [ "3528", "3529", "353", "354", "355", "356", "357", "358" ]
                },
                LASER: {
                    length: [ 16, 17, 18, 19 ],
                    prefix: [ "6304", "6706", "6771", "6709" ]
                },
                MAESTRO: {
                    length: [ 12, 13, 14, 15, 16, 17, 18, 19 ],
                    prefix: [ "5018", "5020", "5038", "6304", "6759", "6761", "6762", "6763", "6764", "6765", "6766" ]
                },
                MASTERCARD: {
                    length: [ 16 ],
                    prefix: [ "51", "52", "53", "54", "55" ]
                },
                SOLO: {
                    length: [ 16, 18, 19 ],
                    prefix: [ "6334", "6767" ]
                },
                UNIONPAY: {
                    length: [ 16, 17, 18, 19 ],
                    prefix: [ "622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925" ]
                },
                VISA: {
                    length: [ 16 ],
                    prefix: [ "4" ]
                }
            };
            var type, i;
            for (type in cards) {
                for (i in cards[type].prefix) {
                    if (value.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i] && $.inArray(value.length, cards[type].length) !== -1) {
                        return true;
                    }
                }
            }
            return false;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.cusip = $.extend($.fn.bootstrapValidator.i18n.cusip || {}, {
        default: "Please enter a valid CUSIP number"
    });
    $.fn.bootstrapValidator.validators.cusip = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = value.toUpperCase();
            if (!/^[0-9A-Z]{9}$/.test(value)) {
                return false;
            }
            var converted = $.map(value.split(""), function(item) {
                var code = item.charCodeAt(0);
                return code >= "A".charCodeAt(0) && code <= "Z".charCodeAt(0) ? code - "A".charCodeAt(0) + 10 : item;
            }), length = converted.length, sum = 0;
            for (var i = 0; i < length - 1; i++) {
                var num = parseInt(converted[i], 10);
                if (i % 2 !== 0) {
                    num *= 2;
                }
                if (num > 9) {
                    num -= 9;
                }
                sum += num;
            }
            sum = (10 - sum % 10) % 10;
            return sum === converted[length - 1];
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.cvv = $.extend($.fn.bootstrapValidator.i18n.cvv || {}, {
        default: "Please enter a valid CVV number"
    });
    $.fn.bootstrapValidator.validators.cvv = {
        html5Attributes: {
            message: "message",
            ccfield: "creditCardField"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^[0-9]{3,4}$/.test(value)) {
                return false;
            }
            if (!options.creditCardField) {
                return true;
            }
            var creditCard = validator.getFieldElements(options.creditCardField).val();
            if (creditCard === "") {
                return true;
            }
            creditCard = creditCard.replace(/\D/g, "");
            var cards = {
                AMERICAN_EXPRESS: {
                    length: [ 15 ],
                    prefix: [ "34", "37" ]
                },
                DINERS_CLUB: {
                    length: [ 14 ],
                    prefix: [ "300", "301", "302", "303", "304", "305", "36" ]
                },
                DINERS_CLUB_US: {
                    length: [ 16 ],
                    prefix: [ "54", "55" ]
                },
                DISCOVER: {
                    length: [ 16 ],
                    prefix: [ "6011", "622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925", "644", "645", "646", "647", "648", "649", "65" ]
                },
                JCB: {
                    length: [ 16 ],
                    prefix: [ "3528", "3529", "353", "354", "355", "356", "357", "358" ]
                },
                LASER: {
                    length: [ 16, 17, 18, 19 ],
                    prefix: [ "6304", "6706", "6771", "6709" ]
                },
                MAESTRO: {
                    length: [ 12, 13, 14, 15, 16, 17, 18, 19 ],
                    prefix: [ "5018", "5020", "5038", "6304", "6759", "6761", "6762", "6763", "6764", "6765", "6766" ]
                },
                MASTERCARD: {
                    length: [ 16 ],
                    prefix: [ "51", "52", "53", "54", "55" ]
                },
                SOLO: {
                    length: [ 16, 18, 19 ],
                    prefix: [ "6334", "6767" ]
                },
                UNIONPAY: {
                    length: [ 16, 17, 18, 19 ],
                    prefix: [ "622126", "622127", "622128", "622129", "62213", "62214", "62215", "62216", "62217", "62218", "62219", "6222", "6223", "6224", "6225", "6226", "6227", "6228", "62290", "62291", "622920", "622921", "622922", "622923", "622924", "622925" ]
                },
                VISA: {
                    length: [ 16 ],
                    prefix: [ "4" ]
                }
            };
            var type, i, creditCardType = null;
            for (type in cards) {
                for (i in cards[type].prefix) {
                    if (creditCard.substr(0, cards[type].prefix[i].length) === cards[type].prefix[i] && $.inArray(creditCard.length, cards[type].length) !== -1) {
                        creditCardType = type;
                        break;
                    }
                }
            }
            return creditCardType === null ? false : "AMERICAN_EXPRESS" === creditCardType ? value.length === 4 : value.length === 3;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.date = $.extend($.fn.bootstrapValidator.i18n.date || {}, {
        default: "Please enter a valid date",
        min: "Please enter a date after %s",
        max: "Please enter a date before %s",
        range: "Please enter a date in the range %s - %s"
    });
    $.fn.bootstrapValidator.validators.date = {
        html5Attributes: {
            message: "message",
            format: "format",
            min: "min",
            max: "max",
            separator: "separator"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            options.format = options.format || "MM/DD/YYYY";
            if ($field.attr("type") === "date") {
                options.format = "YYYY-MM-DD";
            }
            var formats = options.format.split(" "), dateFormat = formats[0], timeFormat = formats.length > 1 ? formats[1] : null, amOrPm = formats.length > 2 ? formats[2] : null, sections = value.split(" "), date = sections[0], time = sections.length > 1 ? sections[1] : null;
            if (formats.length !== sections.length) {
                return {
                    valid: false,
                    message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                };
            }
            var separator = options.separator;
            if (!separator) {
                separator = date.indexOf("/") !== -1 ? "/" : date.indexOf("-") !== -1 ? "-" : null;
            }
            if (separator === null || date.indexOf(separator) === -1) {
                return {
                    valid: false,
                    message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                };
            }
            date = date.split(separator);
            dateFormat = dateFormat.split(separator);
            if (date.length !== dateFormat.length) {
                return {
                    valid: false,
                    message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                };
            }
            var year = date[$.inArray("YYYY", dateFormat)], month = date[$.inArray("MM", dateFormat)], day = date[$.inArray("DD", dateFormat)];
            if (!year || !month || !day || year.length !== 4) {
                return {
                    valid: false,
                    message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                };
            }
            var minutes = null, hours = null, seconds = null;
            if (timeFormat) {
                timeFormat = timeFormat.split(":");
                time = time.split(":");
                if (timeFormat.length !== time.length) {
                    return {
                        valid: false,
                        message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                    };
                }
                hours = time.length > 0 ? time[0] : null;
                minutes = time.length > 1 ? time[1] : null;
                seconds = time.length > 2 ? time[2] : null;
                if (seconds) {
                    if (isNaN(seconds) || seconds.length > 2) {
                        return {
                            valid: false,
                            message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                        };
                    }
                    seconds = parseInt(seconds, 10);
                    if (seconds < 0 || seconds > 60) {
                        return {
                            valid: false,
                            message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                        };
                    }
                }
                if (hours) {
                    if (isNaN(hours) || hours.length > 2) {
                        return {
                            valid: false,
                            message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                        };
                    }
                    hours = parseInt(hours, 10);
                    if (hours < 0 || hours >= 24 || amOrPm && hours > 12) {
                        return {
                            valid: false,
                            message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                        };
                    }
                }
                if (minutes) {
                    if (isNaN(minutes) || minutes.length > 2) {
                        return {
                            valid: false,
                            message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                        };
                    }
                    minutes = parseInt(minutes, 10);
                    if (minutes < 0 || minutes > 59) {
                        return {
                            valid: false,
                            message: options.message || $.fn.bootstrapValidator.i18n.date["default"]
                        };
                    }
                }
            }
            var valid = $.fn.bootstrapValidator.helpers.date(year, month, day), message = options.message || $.fn.bootstrapValidator.i18n.date["default"];
            var min = null, max = null, minOption = options.min, maxOption = options.max;
            if (minOption) {
                if (isNaN(Date.parse(minOption))) {
                    minOption = validator.getDynamicOption($field, minOption);
                }
                min = this._parseDate(minOption, dateFormat, separator);
            }
            if (maxOption) {
                if (isNaN(Date.parse(maxOption))) {
                    maxOption = validator.getDynamicOption($field, maxOption);
                }
                max = this._parseDate(maxOption, dateFormat, separator);
            }
            date = new Date(year, month, day, hours, minutes, seconds);
            switch (true) {
              case minOption && !maxOption && valid:
                valid = date.getTime() >= min.getTime();
                message = options.message || $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.date.min, minOption);
                break;

              case maxOption && !minOption && valid:
                valid = date.getTime() <= max.getTime();
                message = options.message || $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.date.max, maxOption);
                break;

              case maxOption && minOption && valid:
                valid = date.getTime() <= max.getTime() && date.getTime() >= min.getTime();
                message = options.message || $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.date.range, [ minOption, maxOption ]);
                break;

              default:
                break;
            }
            return {
                valid: valid,
                message: message
            };
        },
        _parseDate: function(date, format, separator) {
            var minutes = 0, hours = 0, seconds = 0, sections = date.split(" "), dateSection = sections[0], timeSection = sections.length > 1 ? sections[1] : null;
            dateSection = dateSection.split(separator);
            var year = dateSection[$.inArray("YYYY", format)], month = dateSection[$.inArray("MM", format)], day = dateSection[$.inArray("DD", format)];
            if (timeSection) {
                timeSection = timeSection.split(":");
                hours = timeSection.length > 0 ? timeSection[0] : null;
                minutes = timeSection.length > 1 ? timeSection[1] : null;
                seconds = timeSection.length > 2 ? timeSection[2] : null;
            }
            return new Date(year, month, day, hours, minutes, seconds);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.different = $.extend($.fn.bootstrapValidator.i18n.different || {}, {
        default: "Please enter a different value"
    });
    $.fn.bootstrapValidator.validators.different = {
        html5Attributes: {
            message: "message",
            field: "field"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var fields = options.field.split(","), isValid = true;
            for (var i = 0; i < fields.length; i++) {
                var compareWith = validator.getFieldElements(fields[i]);
                if (compareWith == null || compareWith.length === 0) {
                    continue;
                }
                var compareValue = compareWith.val();
                if (value === compareValue) {
                    isValid = false;
                } else if (compareValue !== "") {
                    validator.updateStatus(compareWith, validator.STATUS_VALID, "different");
                }
            }
            return isValid;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.digits = $.extend($.fn.bootstrapValidator.i18n.digits || {}, {
        default: "Please enter only digits"
    });
    $.fn.bootstrapValidator.validators.digits = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            return /^\d+$/.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.ean = $.extend($.fn.bootstrapValidator.i18n.ean || {}, {
        default: "Please enter a valid EAN number"
    });
    $.fn.bootstrapValidator.validators.ean = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^(\d{8}|\d{12}|\d{13})$/.test(value)) {
                return false;
            }
            var length = value.length, sum = 0, weight = length === 8 ? [ 3, 1 ] : [ 1, 3 ];
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i % 2];
            }
            sum = (10 - sum % 10) % 10;
            return sum + "" === value.charAt(length - 1);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.emailAddress = $.extend($.fn.bootstrapValidator.i18n.emailAddress || {}, {
        default: "Please enter a valid email address"
    });
    $.fn.bootstrapValidator.validators.emailAddress = {
        html5Attributes: {
            message: "message",
            multiple: "multiple",
            separator: "separator"
        },
        enableByHtml5: function($field) {
            return "email" === $field.attr("type");
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var emailRegExp = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/, allowMultiple = options.multiple === true || options.multiple === "true";
            if (allowMultiple) {
                var separator = options.separator || /[,;]/, addresses = this._splitEmailAddresses(value, separator);
                for (var i = 0; i < addresses.length; i++) {
                    if (!emailRegExp.test(addresses[i])) {
                        return false;
                    }
                }
                return true;
            } else {
                return emailRegExp.test(value);
            }
        },
        _splitEmailAddresses: function(emailAddresses, separator) {
            var quotedFragments = emailAddresses.split(/"/), quotedFragmentCount = quotedFragments.length, emailAddressArray = [], nextEmailAddress = "";
            for (var i = 0; i < quotedFragmentCount; i++) {
                if (i % 2 === 0) {
                    var splitEmailAddressFragments = quotedFragments[i].split(separator), splitEmailAddressFragmentCount = splitEmailAddressFragments.length;
                    if (splitEmailAddressFragmentCount === 1) {
                        nextEmailAddress += splitEmailAddressFragments[0];
                    } else {
                        emailAddressArray.push(nextEmailAddress + splitEmailAddressFragments[0]);
                        for (var j = 1; j < splitEmailAddressFragmentCount - 1; j++) {
                            emailAddressArray.push(splitEmailAddressFragments[j]);
                        }
                        nextEmailAddress = splitEmailAddressFragments[splitEmailAddressFragmentCount - 1];
                    }
                } else {
                    nextEmailAddress += '"' + quotedFragments[i];
                    if (i < quotedFragmentCount - 1) {
                        nextEmailAddress += '"';
                    }
                }
            }
            emailAddressArray.push(nextEmailAddress);
            return emailAddressArray;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.file = $.extend($.fn.bootstrapValidator.i18n.file || {}, {
        default: "Please choose a valid file"
    });
    $.fn.bootstrapValidator.validators.file = {
        html5Attributes: {
            extension: "extension",
            maxfiles: "maxFiles",
            minfiles: "minFiles",
            maxsize: "maxSize",
            minsize: "minSize",
            maxtotalsize: "maxTotalSize",
            mintotalsize: "minTotalSize",
            message: "message",
            type: "type"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var ext, extensions = options.extension ? options.extension.toLowerCase().split(",") : null, types = options.type ? options.type.toLowerCase().split(",") : null, html5 = window.File && window.FileList && window.FileReader;
            if (html5) {
                var files = $field.get(0).files, total = files.length, totalSize = 0;
                if (options.maxFiles && total > parseInt(options.maxFiles, 10) || options.minFiles && total < parseInt(options.minFiles, 10)) {
                    return false;
                }
                for (var i = 0; i < total; i++) {
                    totalSize += files[i].size;
                    ext = files[i].name.substr(files[i].name.lastIndexOf(".") + 1);
                    if (options.minSize && files[i].size < parseInt(options.minSize, 10) || options.maxSize && files[i].size > parseInt(options.maxSize, 10) || extensions && $.inArray(ext.toLowerCase(), extensions) === -1 || files[i].type && types && $.inArray(files[i].type.toLowerCase(), types) === -1) {
                        return false;
                    }
                }
                if (options.maxTotalSize && totalSize > parseInt(options.maxTotalSize, 10) || options.minTotalSize && totalSize < parseInt(options.minTotalSize, 10)) {
                    return false;
                }
            } else {
                ext = value.substr(value.lastIndexOf(".") + 1);
                if (extensions && $.inArray(ext.toLowerCase(), extensions) === -1) {
                    return false;
                }
            }
            return true;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.greaterThan = $.extend($.fn.bootstrapValidator.i18n.greaterThan || {}, {
        default: "Please enter a value greater than or equal to %s",
        notInclusive: "Please enter a value greater than %s"
    });
    $.fn.bootstrapValidator.validators.greaterThan = {
        html5Attributes: {
            message: "message",
            value: "value",
            inclusive: "inclusive"
        },
        enableByHtml5: function($field) {
            var type = $field.attr("type"), min = $field.attr("min");
            if (min && type !== "date") {
                return {
                    value: min
                };
            }
            return false;
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = this._format(value);
            if (!$.isNumeric(value)) {
                return false;
            }
            var compareTo = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value), compareToValue = this._format(compareTo);
            value = parseFloat(value);
            return options.inclusive === true || options.inclusive === undefined ? {
                valid: value >= compareToValue,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.greaterThan["default"], compareTo)
            } : {
                valid: value > compareToValue,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.greaterThan.notInclusive, compareTo)
            };
        },
        _format: function(value) {
            return (value + "").replace(",", ".");
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.grid = $.extend($.fn.bootstrapValidator.i18n.grid || {}, {
        default: "Please enter a valid GRId number"
    });
    $.fn.bootstrapValidator.validators.grid = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = value.toUpperCase();
            if (!/^[GRID:]*([0-9A-Z]{2})[-\s]*([0-9A-Z]{5})[-\s]*([0-9A-Z]{10})[-\s]*([0-9A-Z]{1})$/g.test(value)) {
                return false;
            }
            value = value.replace(/\s/g, "").replace(/-/g, "");
            if ("GRID:" === value.substr(0, 5)) {
                value = value.substr(5);
            }
            return $.fn.bootstrapValidator.helpers.mod37And36(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.hex = $.extend($.fn.bootstrapValidator.i18n.hex || {}, {
        default: "Please enter a valid hexadecimal number"
    });
    $.fn.bootstrapValidator.validators.hex = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            return /^[0-9a-fA-F]+$/.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.hexColor = $.extend($.fn.bootstrapValidator.i18n.hexColor || {}, {
        default: "Please enter a valid hex color"
    });
    $.fn.bootstrapValidator.validators.hexColor = {
        enableByHtml5: function($field) {
            return "color" === $field.attr("type");
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            return "color" === $field.attr("type") ? /^#[0-9A-F]{6}$/i.test(value) : /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.iban = $.extend($.fn.bootstrapValidator.i18n.iban || {}, {
        default: "Please enter a valid IBAN number",
        countryNotSupported: "The country code %s is not supported",
        country: "Please enter a valid IBAN number in %s",
        countries: {
            AD: "Andorra",
            AE: "United Arab Emirates",
            AL: "Albania",
            AO: "Angola",
            AT: "Austria",
            AZ: "Azerbaijan",
            BA: "Bosnia and Herzegovina",
            BE: "Belgium",
            BF: "Burkina Faso",
            BG: "Bulgaria",
            BH: "Bahrain",
            BI: "Burundi",
            BJ: "Benin",
            BR: "Brazil",
            CH: "Switzerland",
            CI: "Ivory Coast",
            CM: "Cameroon",
            CR: "Costa Rica",
            CV: "Cape Verde",
            CY: "Cyprus",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            DO: "Dominican Republic",
            DZ: "Algeria",
            EE: "Estonia",
            ES: "Spain",
            FI: "Finland",
            FO: "Faroe Islands",
            FR: "France",
            GB: "United Kingdom",
            GE: "Georgia",
            GI: "Gibraltar",
            GL: "Greenland",
            GR: "Greece",
            GT: "Guatemala",
            HR: "Croatia",
            HU: "Hungary",
            IE: "Ireland",
            IL: "Israel",
            IR: "Iran",
            IS: "Iceland",
            IT: "Italy",
            JO: "Jordan",
            KW: "Kuwait",
            KZ: "Kazakhstan",
            LB: "Lebanon",
            LI: "Liechtenstein",
            LT: "Lithuania",
            LU: "Luxembourg",
            LV: "Latvia",
            MC: "Monaco",
            MD: "Moldova",
            ME: "Montenegro",
            MG: "Madagascar",
            MK: "Macedonia",
            ML: "Mali",
            MR: "Mauritania",
            MT: "Malta",
            MU: "Mauritius",
            MZ: "Mozambique",
            NL: "Netherlands",
            NO: "Norway",
            PK: "Pakistan",
            PL: "Poland",
            PS: "Palestine",
            PT: "Portugal",
            QA: "Qatar",
            RO: "Romania",
            RS: "Serbia",
            SA: "Saudi Arabia",
            SE: "Sweden",
            SI: "Slovenia",
            SK: "Slovakia",
            SM: "San Marino",
            SN: "Senegal",
            TN: "Tunisia",
            TR: "Turkey",
            VG: "Virgin Islands, British"
        }
    });
    $.fn.bootstrapValidator.validators.iban = {
        html5Attributes: {
            message: "message",
            country: "country"
        },
        REGEX: {
            AD: "AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}",
            AE: "AE[0-9]{2}[0-9]{3}[0-9]{16}",
            AL: "AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}",
            AO: "AO[0-9]{2}[0-9]{21}",
            AT: "AT[0-9]{2}[0-9]{5}[0-9]{11}",
            AZ: "AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}",
            BA: "BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}",
            BE: "BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}",
            BF: "BF[0-9]{2}[0-9]{23}",
            BG: "BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}",
            BH: "BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}",
            BI: "BI[0-9]{2}[0-9]{12}",
            BJ: "BJ[0-9]{2}[A-Z]{1}[0-9]{23}",
            BR: "BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]",
            CH: "CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}",
            CI: "CI[0-9]{2}[A-Z]{1}[0-9]{23}",
            CM: "CM[0-9]{2}[0-9]{23}",
            CR: "CR[0-9]{2}[0-9]{3}[0-9]{14}",
            CV: "CV[0-9]{2}[0-9]{21}",
            CY: "CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}",
            CZ: "CZ[0-9]{2}[0-9]{20}",
            DE: "DE[0-9]{2}[0-9]{8}[0-9]{10}",
            DK: "DK[0-9]{2}[0-9]{14}",
            DO: "DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}",
            DZ: "DZ[0-9]{2}[0-9]{20}",
            EE: "EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}",
            ES: "ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}",
            FI: "FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}",
            FO: "FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}",
            FR: "FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}",
            GB: "GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}",
            GE: "GE[0-9]{2}[A-Z]{2}[0-9]{16}",
            GI: "GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}",
            GL: "GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}",
            GR: "GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}",
            GT: "GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}",
            HR: "HR[0-9]{2}[0-9]{7}[0-9]{10}",
            HU: "HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}",
            IE: "IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}",
            IL: "IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}",
            IR: "IR[0-9]{2}[0-9]{22}",
            IS: "IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}",
            IT: "IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}",
            JO: "JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}",
            KW: "KW[0-9]{2}[A-Z]{4}[0-9]{22}",
            KZ: "KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}",
            LB: "LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}",
            LI: "LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}",
            LT: "LT[0-9]{2}[0-9]{5}[0-9]{11}",
            LU: "LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}",
            LV: "LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}",
            MC: "MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}",
            MD: "MD[0-9]{2}[A-Z0-9]{20}",
            ME: "ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}",
            MG: "MG[0-9]{2}[0-9]{23}",
            MK: "MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}",
            ML: "ML[0-9]{2}[A-Z]{1}[0-9]{23}",
            MR: "MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}",
            MT: "MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}",
            MU: "MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}",
            MZ: "MZ[0-9]{2}[0-9]{21}",
            NL: "NL[0-9]{2}[A-Z]{4}[0-9]{10}",
            NO: "NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}",
            PK: "PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}",
            PL: "PL[0-9]{2}[0-9]{8}[0-9]{16}",
            PS: "PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}",
            PT: "PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}",
            QA: "QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}",
            RO: "RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}",
            RS: "RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}",
            SA: "SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}",
            SE: "SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}",
            SI: "SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}",
            SK: "SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}",
            SM: "SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}",
            SN: "SN[0-9]{2}[A-Z]{1}[0-9]{23}",
            TN: "TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}",
            TR: "TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}",
            VG: "VG[0-9]{2}[A-Z]{4}[0-9]{16}"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = value.replace(/[^a-zA-Z0-9]/g, "").toUpperCase();
            var country = options.country;
            if (!country) {
                country = value.substr(0, 2);
            } else if (typeof country !== "string" || !this.REGEX[country]) {
                country = validator.getDynamicOption($field, country);
            }
            if (!this.REGEX[country]) {
                return {
                    valid: false,
                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.iban.countryNotSupported, country)
                };
            }
            if (!new RegExp("^" + this.REGEX[country] + "$").test(value)) {
                return {
                    valid: false,
                    message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.iban.country, $.fn.bootstrapValidator.i18n.iban.countries[country])
                };
            }
            value = value.substr(4) + value.substr(0, 4);
            value = $.map(value.split(""), function(n) {
                var code = n.charCodeAt(0);
                return code >= "A".charCodeAt(0) && code <= "Z".charCodeAt(0) ? code - "A".charCodeAt(0) + 10 : n;
            });
            value = value.join("");
            var temp = parseInt(value.substr(0, 1), 10), length = value.length;
            for (var i = 1; i < length; ++i) {
                temp = (temp * 10 + parseInt(value.substr(i, 1), 10)) % 97;
            }
            return {
                valid: temp === 1,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.iban.country, $.fn.bootstrapValidator.i18n.iban.countries[country])
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.id = $.extend($.fn.bootstrapValidator.i18n.id || {}, {
        default: "Please enter a valid identification number",
        countryNotSupported: "The country code %s is not supported",
        country: "Please enter a valid identification number in %s",
        countries: {
            BA: "Bosnia and Herzegovina",
            BG: "Bulgaria",
            BR: "Brazil",
            CH: "Switzerland",
            CL: "Chile",
            CN: "China",
            CZ: "Czech Republic",
            DK: "Denmark",
            EE: "Estonia",
            ES: "Spain",
            FI: "Finland",
            HR: "Croatia",
            IE: "Ireland",
            IS: "Iceland",
            LT: "Lithuania",
            LV: "Latvia",
            ME: "Montenegro",
            MK: "Macedonia",
            NL: "Netherlands",
            RO: "Romania",
            RS: "Serbia",
            SE: "Sweden",
            SI: "Slovenia",
            SK: "Slovakia",
            SM: "San Marino",
            TH: "Thailand",
            ZA: "South Africa"
        }
    });
    $.fn.bootstrapValidator.validators.id = {
        html5Attributes: {
            message: "message",
            country: "country"
        },
        COUNTRY_CODES: [ "BA", "BG", "BR", "CH", "CL", "CN", "CZ", "DK", "EE", "ES", "FI", "HR", "IE", "IS", "LT", "LV", "ME", "MK", "NL", "RO", "RS", "SE", "SI", "SK", "SM", "TH", "ZA" ],
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var country = options.country;
            if (!country) {
                country = value.substr(0, 2);
            } else if (typeof country !== "string" || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                country = validator.getDynamicOption($field, country);
            }
            if ($.inArray(country, this.COUNTRY_CODES) === -1) {
                return {
                    valid: false,
                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.id.countryNotSupported, country)
                };
            }
            var method = [ "_", country.toLowerCase() ].join("");
            return this[method](value) ? true : {
                valid: false,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.id.country, $.fn.bootstrapValidator.i18n.id.countries[country.toUpperCase()])
            };
        },
        _validateJMBG: function(value, countryCode) {
            if (!/^\d{13}$/.test(value)) {
                return false;
            }
            var day = parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10), year = parseInt(value.substr(4, 3), 10), rr = parseInt(value.substr(7, 2), 10), k = parseInt(value.substr(12, 1), 10);
            if (day > 31 || month > 12) {
                return false;
            }
            var sum = 0;
            for (var i = 0; i < 6; i++) {
                sum += (7 - i) * (parseInt(value.charAt(i), 10) + parseInt(value.charAt(i + 6), 10));
            }
            sum = 11 - sum % 11;
            if (sum === 10 || sum === 11) {
                sum = 0;
            }
            if (sum !== k) {
                return false;
            }
            switch (countryCode.toUpperCase()) {
              case "BA":
                return 10 <= rr && rr <= 19;

              case "MK":
                return 41 <= rr && rr <= 49;

              case "ME":
                return 20 <= rr && rr <= 29;

              case "RS":
                return 70 <= rr && rr <= 99;

              case "SI":
                return 50 <= rr && rr <= 59;

              default:
                return true;
            }
        },
        _ba: function(value) {
            return this._validateJMBG(value, "BA");
        },
        _mk: function(value) {
            return this._validateJMBG(value, "MK");
        },
        _me: function(value) {
            return this._validateJMBG(value, "ME");
        },
        _rs: function(value) {
            return this._validateJMBG(value, "RS");
        },
        _si: function(value) {
            return this._validateJMBG(value, "SI");
        },
        _bg: function(value) {
            if (!/^\d{10}$/.test(value) && !/^\d{6}\s\d{3}\s\d{1}$/.test(value)) {
                return false;
            }
            value = value.replace(/\s/g, "");
            var year = parseInt(value.substr(0, 2), 10) + 1900, month = parseInt(value.substr(2, 2), 10), day = parseInt(value.substr(4, 2), 10);
            if (month > 40) {
                year += 100;
                month -= 40;
            } else if (month > 20) {
                year -= 100;
                month -= 20;
            }
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                return false;
            }
            var sum = 0, weight = [ 2, 4, 8, 5, 10, 9, 7, 3, 6 ];
            for (var i = 0; i < 9; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11 % 10;
            return sum + "" === value.substr(9, 1);
        },
        _br: function(value) {
            if (/^1{11}|2{11}|3{11}|4{11}|5{11}|6{11}|7{11}|8{11}|9{11}|0{11}$/.test(value)) {
                return false;
            }
            if (!/^\d{11}$/.test(value) && !/^\d{3}\.\d{3}\.\d{3}-\d{2}$/.test(value)) {
                return false;
            }
            value = value.replace(/\./g, "").replace(/-/g, "");
            var d1 = 0;
            for (var i = 0; i < 9; i++) {
                d1 += (10 - i) * parseInt(value.charAt(i), 10);
            }
            d1 = 11 - d1 % 11;
            if (d1 === 10 || d1 === 11) {
                d1 = 0;
            }
            if (d1 + "" !== value.charAt(9)) {
                return false;
            }
            var d2 = 0;
            for (i = 0; i < 10; i++) {
                d2 += (11 - i) * parseInt(value.charAt(i), 10);
            }
            d2 = 11 - d2 % 11;
            if (d2 === 10 || d2 === 11) {
                d2 = 0;
            }
            return d2 + "" === value.charAt(10);
        },
        _ch: function(value) {
            if (!/^756[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{4}[\.]{0,1}[0-9]{2}$/.test(value)) {
                return false;
            }
            value = value.replace(/\D/g, "").substr(3);
            var length = value.length, sum = 0, weight = length === 8 ? [ 3, 1 ] : [ 1, 3 ];
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i % 2];
            }
            sum = 10 - sum % 10;
            return sum + "" === value.charAt(length - 1);
        },
        _cl: function(value) {
            if (!/^\d{7,8}[-]{0,1}[0-9K]$/i.test(value)) {
                return false;
            }
            value = value.replace(/\-/g, "");
            while (value.length < 9) {
                value = "0" + value;
            }
            var sum = 0, weight = [ 3, 2, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 11) {
                sum = 0;
            } else if (sum === 10) {
                sum = "K";
            }
            return sum + "" === value.charAt(8).toUpperCase();
        },
        _cn: function(value) {
            value = value.trim();
            if (!/^\d{15}$/.test(value) && !/^\d{17}[\dXx]{1}$/.test(value)) {
                return false;
            }
            var adminDivisionCodes = {
                11: {
                    0: [ 0 ],
                    1: [ [ 0, 9 ], [ 11, 17 ] ],
                    2: [ 0, 28, 29 ]
                },
                12: {
                    0: [ 0 ],
                    1: [ [ 0, 16 ] ],
                    2: [ 0, 21, 23, 25 ]
                },
                13: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], 7, 8, 21, [ 23, 33 ], [ 81, 85 ] ],
                    2: [ [ 0, 5 ], [ 7, 9 ], [ 23, 25 ], 27, 29, 30, 81, 83 ],
                    3: [ [ 0, 4 ], [ 21, 24 ] ],
                    4: [ [ 0, 4 ], 6, 21, [ 23, 35 ], 81 ],
                    5: [ [ 0, 3 ], [ 21, 35 ], 81, 82 ],
                    6: [ [ 0, 4 ], [ 21, 38 ], [ 81, 84 ] ],
                    7: [ [ 0, 3 ], 5, 6, [ 21, 33 ] ],
                    8: [ [ 0, 4 ], [ 21, 28 ] ],
                    9: [ [ 0, 3 ], [ 21, 30 ], [ 81, 84 ] ],
                    10: [ [ 0, 3 ], [ 22, 26 ], 28, 81, 82 ],
                    11: [ [ 0, 2 ], [ 21, 28 ], 81, 82 ]
                },
                14: {
                    0: [ 0 ],
                    1: [ 0, 1, [ 5, 10 ], [ 21, 23 ], 81 ],
                    2: [ [ 0, 3 ], 11, 12, [ 21, 27 ] ],
                    3: [ [ 0, 3 ], 11, 21, 22 ],
                    4: [ [ 0, 2 ], 11, 21, [ 23, 31 ], 81 ],
                    5: [ [ 0, 2 ], 21, 22, 24, 25, 81 ],
                    6: [ [ 0, 3 ], [ 21, 24 ] ],
                    7: [ [ 0, 2 ], [ 21, 29 ], 81 ],
                    8: [ [ 0, 2 ], [ 21, 30 ], 81, 82 ],
                    9: [ [ 0, 2 ], [ 21, 32 ], 81 ],
                    10: [ [ 0, 2 ], [ 21, 34 ], 81, 82 ],
                    11: [ [ 0, 2 ], [ 21, 30 ], 81, 82 ],
                    23: [ [ 0, 3 ], 22, 23, [ 25, 30 ], 32, 33 ]
                },
                15: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], [ 21, 25 ] ],
                    2: [ [ 0, 7 ], [ 21, 23 ] ],
                    3: [ [ 0, 4 ] ],
                    4: [ [ 0, 4 ], [ 21, 26 ], [ 28, 30 ] ],
                    5: [ [ 0, 2 ], [ 21, 26 ], 81 ],
                    6: [ [ 0, 2 ], [ 21, 27 ] ],
                    7: [ [ 0, 3 ], [ 21, 27 ], [ 81, 85 ] ],
                    8: [ [ 0, 2 ], [ 21, 26 ] ],
                    9: [ [ 0, 2 ], [ 21, 29 ], 81 ],
                    22: [ [ 0, 2 ], [ 21, 24 ] ],
                    25: [ [ 0, 2 ], [ 22, 31 ] ],
                    26: [ [ 0, 2 ], [ 24, 27 ], [ 29, 32 ], 34 ],
                    28: [ 0, 1, [ 22, 27 ] ],
                    29: [ 0, [ 21, 23 ] ]
                },
                21: {
                    0: [ 0 ],
                    1: [ [ 0, 6 ], [ 11, 14 ], [ 22, 24 ], 81 ],
                    2: [ [ 0, 4 ], [ 11, 13 ], 24, [ 81, 83 ] ],
                    3: [ [ 0, 4 ], 11, 21, 23, 81 ],
                    4: [ [ 0, 4 ], 11, [ 21, 23 ] ],
                    5: [ [ 0, 5 ], 21, 22 ],
                    6: [ [ 0, 4 ], 24, 81, 82 ],
                    7: [ [ 0, 3 ], 11, 26, 27, 81, 82 ],
                    8: [ [ 0, 4 ], 11, 81, 82 ],
                    9: [ [ 0, 5 ], 11, 21, 22 ],
                    10: [ [ 0, 5 ], 11, 21, 81 ],
                    11: [ [ 0, 3 ], 21, 22 ],
                    12: [ [ 0, 2 ], 4, 21, 23, 24, 81, 82 ],
                    13: [ [ 0, 3 ], 21, 22, 24, 81, 82 ],
                    14: [ [ 0, 4 ], 21, 22, 81 ]
                },
                22: {
                    0: [ 0 ],
                    1: [ [ 0, 6 ], 12, 22, [ 81, 83 ] ],
                    2: [ [ 0, 4 ], 11, 21, [ 81, 84 ] ],
                    3: [ [ 0, 3 ], 22, 23, 81, 82 ],
                    4: [ [ 0, 3 ], 21, 22 ],
                    5: [ [ 0, 3 ], 21, 23, 24, 81, 82 ],
                    6: [ [ 0, 2 ], 4, 5, [ 21, 23 ], 25, 81 ],
                    7: [ [ 0, 2 ], [ 21, 24 ], 81 ],
                    8: [ [ 0, 2 ], 21, 22, 81, 82 ],
                    24: [ [ 0, 6 ], 24, 26 ]
                },
                23: {
                    0: [ 0 ],
                    1: [ [ 0, 12 ], 21, [ 23, 29 ], [ 81, 84 ] ],
                    2: [ [ 0, 8 ], 21, [ 23, 25 ], 27, [ 29, 31 ], 81 ],
                    3: [ [ 0, 7 ], 21, 81, 82 ],
                    4: [ [ 0, 7 ], 21, 22 ],
                    5: [ [ 0, 3 ], 5, 6, [ 21, 24 ] ],
                    6: [ [ 0, 6 ], [ 21, 24 ] ],
                    7: [ [ 0, 16 ], 22, 81 ],
                    8: [ [ 0, 5 ], 11, 22, 26, 28, 33, 81, 82 ],
                    9: [ [ 0, 4 ], 21 ],
                    10: [ [ 0, 5 ], 24, 25, 81, [ 83, 85 ] ],
                    11: [ [ 0, 2 ], 21, 23, 24, 81, 82 ],
                    12: [ [ 0, 2 ], [ 21, 26 ], [ 81, 83 ] ],
                    27: [ [ 0, 4 ], [ 21, 23 ] ]
                },
                31: {
                    0: [ 0 ],
                    1: [ 0, 1, [ 3, 10 ], [ 12, 20 ] ],
                    2: [ 0, 30 ]
                },
                32: {
                    0: [ 0 ],
                    1: [ [ 0, 7 ], 11, [ 13, 18 ], 24, 25 ],
                    2: [ [ 0, 6 ], 11, 81, 82 ],
                    3: [ [ 0, 5 ], 11, 12, [ 21, 24 ], 81, 82 ],
                    4: [ [ 0, 2 ], 4, 5, 11, 12, 81, 82 ],
                    5: [ [ 0, 9 ], [ 81, 85 ] ],
                    6: [ [ 0, 2 ], 11, 12, 21, 23, [ 81, 84 ] ],
                    7: [ 0, 1, 3, 5, 6, [ 21, 24 ] ],
                    8: [ [ 0, 4 ], 11, 26, [ 29, 31 ] ],
                    9: [ [ 0, 3 ], [ 21, 25 ], 28, 81, 82 ],
                    10: [ [ 0, 3 ], 11, 12, 23, 81, 84, 88 ],
                    11: [ [ 0, 2 ], 11, 12, [ 81, 83 ] ],
                    12: [ [ 0, 4 ], [ 81, 84 ] ],
                    13: [ [ 0, 2 ], 11, [ 21, 24 ] ]
                },
                33: {
                    0: [ 0 ],
                    1: [ [ 0, 6 ], [ 8, 10 ], 22, 27, 82, 83, 85 ],
                    2: [ 0, 1, [ 3, 6 ], 11, 12, 25, 26, [ 81, 83 ] ],
                    3: [ [ 0, 4 ], 22, 24, [ 26, 29 ], 81, 82 ],
                    4: [ [ 0, 2 ], 11, 21, 24, [ 81, 83 ] ],
                    5: [ [ 0, 3 ], [ 21, 23 ] ],
                    6: [ [ 0, 2 ], 21, 24, [ 81, 83 ] ],
                    7: [ [ 0, 3 ], 23, 26, 27, [ 81, 84 ] ],
                    8: [ [ 0, 3 ], 22, 24, 25, 81 ],
                    9: [ [ 0, 3 ], 21, 22 ],
                    10: [ [ 0, 4 ], [ 21, 24 ], 81, 82 ],
                    11: [ [ 0, 2 ], [ 21, 27 ], 81 ]
                },
                34: {
                    0: [ 0 ],
                    1: [ [ 0, 4 ], 11, [ 21, 24 ], 81 ],
                    2: [ [ 0, 4 ], 7, 8, [ 21, 23 ], 25 ],
                    3: [ [ 0, 4 ], 11, [ 21, 23 ] ],
                    4: [ [ 0, 6 ], 21 ],
                    5: [ [ 0, 4 ], 6, [ 21, 23 ] ],
                    6: [ [ 0, 4 ], 21 ],
                    7: [ [ 0, 3 ], 11, 21 ],
                    8: [ [ 0, 3 ], 11, [ 22, 28 ], 81 ],
                    10: [ [ 0, 4 ], [ 21, 24 ] ],
                    11: [ [ 0, 3 ], 22, [ 24, 26 ], 81, 82 ],
                    12: [ [ 0, 4 ], 21, 22, 25, 26, 82 ],
                    13: [ [ 0, 2 ], [ 21, 24 ] ],
                    14: [ [ 0, 2 ], [ 21, 24 ] ],
                    15: [ [ 0, 3 ], [ 21, 25 ] ],
                    16: [ [ 0, 2 ], [ 21, 23 ] ],
                    17: [ [ 0, 2 ], [ 21, 23 ] ],
                    18: [ [ 0, 2 ], [ 21, 25 ], 81 ]
                },
                35: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], 11, [ 21, 25 ], 28, 81, 82 ],
                    2: [ [ 0, 6 ], [ 11, 13 ] ],
                    3: [ [ 0, 5 ], 22 ],
                    4: [ [ 0, 3 ], 21, [ 23, 30 ], 81 ],
                    5: [ [ 0, 5 ], 21, [ 24, 27 ], [ 81, 83 ] ],
                    6: [ [ 0, 3 ], [ 22, 29 ], 81 ],
                    7: [ [ 0, 2 ], [ 21, 25 ], [ 81, 84 ] ],
                    8: [ [ 0, 2 ], [ 21, 25 ], 81 ],
                    9: [ [ 0, 2 ], [ 21, 26 ], 81, 82 ]
                },
                36: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], 11, [ 21, 24 ] ],
                    2: [ [ 0, 3 ], 22, 81 ],
                    3: [ [ 0, 2 ], 13, [ 21, 23 ] ],
                    4: [ [ 0, 3 ], 21, [ 23, 30 ], 81, 82 ],
                    5: [ [ 0, 2 ], 21 ],
                    6: [ [ 0, 2 ], 22, 81 ],
                    7: [ [ 0, 2 ], [ 21, 35 ], 81, 82 ],
                    8: [ [ 0, 3 ], [ 21, 30 ], 81 ],
                    9: [ [ 0, 2 ], [ 21, 26 ], [ 81, 83 ] ],
                    10: [ [ 0, 2 ], [ 21, 30 ] ],
                    11: [ [ 0, 2 ], [ 21, 30 ], 81 ]
                },
                37: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], 12, 13, [ 24, 26 ], 81 ],
                    2: [ [ 0, 3 ], 5, [ 11, 14 ], [ 81, 85 ] ],
                    3: [ [ 0, 6 ], [ 21, 23 ] ],
                    4: [ [ 0, 6 ], 81 ],
                    5: [ [ 0, 3 ], [ 21, 23 ] ],
                    6: [ [ 0, 2 ], [ 11, 13 ], 34, [ 81, 87 ] ],
                    7: [ [ 0, 5 ], 24, 25, [ 81, 86 ] ],
                    8: [ [ 0, 2 ], 11, [ 26, 32 ], [ 81, 83 ] ],
                    9: [ [ 0, 3 ], 11, 21, 23, 82, 83 ],
                    10: [ [ 0, 2 ], [ 81, 83 ] ],
                    11: [ [ 0, 3 ], 21, 22 ],
                    12: [ [ 0, 3 ] ],
                    13: [ [ 0, 2 ], 11, 12, [ 21, 29 ] ],
                    14: [ [ 0, 2 ], [ 21, 28 ], 81, 82 ],
                    15: [ [ 0, 2 ], [ 21, 26 ], 81 ],
                    16: [ [ 0, 2 ], [ 21, 26 ] ],
                    17: [ [ 0, 2 ], [ 21, 28 ] ]
                },
                41: {
                    0: [ 0 ],
                    1: [ [ 0, 6 ], 8, 22, [ 81, 85 ] ],
                    2: [ [ 0, 5 ], 11, [ 21, 25 ] ],
                    3: [ [ 0, 7 ], 11, [ 22, 29 ], 81 ],
                    4: [ [ 0, 4 ], 11, [ 21, 23 ], 25, 81, 82 ],
                    5: [ [ 0, 3 ], 5, 6, 22, 23, 26, 27, 81 ],
                    6: [ [ 0, 3 ], 11, 21, 22 ],
                    7: [ [ 0, 4 ], 11, 21, [ 24, 28 ], 81, 82 ],
                    8: [ [ 0, 4 ], 11, [ 21, 23 ], 25, [ 81, 83 ] ],
                    9: [ [ 0, 2 ], 22, 23, [ 26, 28 ] ],
                    10: [ [ 0, 2 ], [ 23, 25 ], 81, 82 ],
                    11: [ [ 0, 4 ], [ 21, 23 ] ],
                    12: [ [ 0, 2 ], 21, 22, 24, 81, 82 ],
                    13: [ [ 0, 3 ], [ 21, 30 ], 81 ],
                    14: [ [ 0, 3 ], [ 21, 26 ], 81 ],
                    15: [ [ 0, 3 ], [ 21, 28 ] ],
                    16: [ [ 0, 2 ], [ 21, 28 ], 81 ],
                    17: [ [ 0, 2 ], [ 21, 29 ] ],
                    90: [ 0, 1 ]
                },
                42: {
                    0: [ 0 ],
                    1: [ [ 0, 7 ], [ 11, 17 ] ],
                    2: [ [ 0, 5 ], 22, 81 ],
                    3: [ [ 0, 3 ], [ 21, 25 ], 81 ],
                    5: [ [ 0, 6 ], [ 25, 29 ], [ 81, 83 ] ],
                    6: [ [ 0, 2 ], 6, 7, [ 24, 26 ], [ 82, 84 ] ],
                    7: [ [ 0, 4 ] ],
                    8: [ [ 0, 2 ], 4, 21, 22, 81 ],
                    9: [ [ 0, 2 ], [ 21, 23 ], 81, 82, 84 ],
                    10: [ [ 0, 3 ], [ 22, 24 ], 81, 83, 87 ],
                    11: [ [ 0, 2 ], [ 21, 27 ], 81, 82 ],
                    12: [ [ 0, 2 ], [ 21, 24 ], 81 ],
                    13: [ [ 0, 3 ], 21, 81 ],
                    28: [ [ 0, 2 ], 22, 23, [ 25, 28 ] ],
                    90: [ 0, [ 4, 6 ], 21 ]
                },
                43: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], 11, 12, 21, 22, 24, 81 ],
                    2: [ [ 0, 4 ], 11, 21, [ 23, 25 ], 81 ],
                    3: [ [ 0, 2 ], 4, 21, 81, 82 ],
                    4: [ 0, 1, [ 5, 8 ], 12, [ 21, 24 ], 26, 81, 82 ],
                    5: [ [ 0, 3 ], 11, [ 21, 25 ], [ 27, 29 ], 81 ],
                    6: [ [ 0, 3 ], 11, 21, 23, 24, 26, 81, 82 ],
                    7: [ [ 0, 3 ], [ 21, 26 ], 81 ],
                    8: [ [ 0, 2 ], 11, 21, 22 ],
                    9: [ [ 0, 3 ], [ 21, 23 ], 81 ],
                    10: [ [ 0, 3 ], [ 21, 28 ], 81 ],
                    11: [ [ 0, 3 ], [ 21, 29 ] ],
                    12: [ [ 0, 2 ], [ 21, 30 ], 81 ],
                    13: [ [ 0, 2 ], 21, 22, 81, 82 ],
                    31: [ 0, 1, [ 22, 27 ], 30 ]
                },
                44: {
                    0: [ 0 ],
                    1: [ [ 0, 7 ], [ 11, 16 ], 83, 84 ],
                    2: [ [ 0, 5 ], 21, 22, 24, 29, 32, 33, 81, 82 ],
                    3: [ 0, 1, [ 3, 8 ] ],
                    4: [ [ 0, 4 ] ],
                    5: [ 0, 1, [ 6, 15 ], 23, 82, 83 ],
                    6: [ 0, 1, [ 4, 8 ] ],
                    7: [ 0, 1, [ 3, 5 ], 81, [ 83, 85 ] ],
                    8: [ [ 0, 4 ], 11, 23, 25, [ 81, 83 ] ],
                    9: [ [ 0, 3 ], 23, [ 81, 83 ] ],
                    12: [ [ 0, 3 ], [ 23, 26 ], 83, 84 ],
                    13: [ [ 0, 3 ], [ 22, 24 ], 81 ],
                    14: [ [ 0, 2 ], [ 21, 24 ], 26, 27, 81 ],
                    15: [ [ 0, 2 ], 21, 23, 81 ],
                    16: [ [ 0, 2 ], [ 21, 25 ] ],
                    17: [ [ 0, 2 ], 21, 23, 81 ],
                    18: [ [ 0, 3 ], 21, 23, [ 25, 27 ], 81, 82 ],
                    19: [ 0 ],
                    20: [ 0 ],
                    51: [ [ 0, 3 ], 21, 22 ],
                    52: [ [ 0, 3 ], 21, 22, 24, 81 ],
                    53: [ [ 0, 2 ], [ 21, 23 ], 81 ]
                },
                45: {
                    0: [ 0 ],
                    1: [ [ 0, 9 ], [ 21, 27 ] ],
                    2: [ [ 0, 5 ], [ 21, 26 ] ],
                    3: [ [ 0, 5 ], 11, 12, [ 21, 32 ] ],
                    4: [ 0, 1, [ 3, 6 ], 11, [ 21, 23 ], 81 ],
                    5: [ [ 0, 3 ], 12, 21 ],
                    6: [ [ 0, 3 ], 21, 81 ],
                    7: [ [ 0, 3 ], 21, 22 ],
                    8: [ [ 0, 4 ], 21, 81 ],
                    9: [ [ 0, 3 ], [ 21, 24 ], 81 ],
                    10: [ [ 0, 2 ], [ 21, 31 ] ],
                    11: [ [ 0, 2 ], [ 21, 23 ] ],
                    12: [ [ 0, 2 ], [ 21, 29 ], 81 ],
                    13: [ [ 0, 2 ], [ 21, 24 ], 81 ],
                    14: [ [ 0, 2 ], [ 21, 25 ], 81 ]
                },
                46: {
                    0: [ 0 ],
                    1: [ 0, 1, [ 5, 8 ] ],
                    2: [ 0, 1 ],
                    3: [ 0, [ 21, 23 ] ],
                    90: [ [ 0, 3 ], [ 5, 7 ], [ 21, 39 ] ]
                },
                50: {
                    0: [ 0 ],
                    1: [ [ 0, 19 ] ],
                    2: [ 0, [ 22, 38 ], [ 40, 43 ] ],
                    3: [ 0, [ 81, 84 ] ]
                },
                51: {
                    0: [ 0 ],
                    1: [ 0, 1, [ 4, 8 ], [ 12, 15 ], [ 21, 24 ], 29, 31, 32, [ 81, 84 ] ],
                    3: [ [ 0, 4 ], 11, 21, 22 ],
                    4: [ [ 0, 3 ], 11, 21, 22 ],
                    5: [ [ 0, 4 ], 21, 22, 24, 25 ],
                    6: [ 0, 1, 3, 23, 26, [ 81, 83 ] ],
                    7: [ 0, 1, 3, 4, [ 22, 27 ], 81 ],
                    8: [ [ 0, 2 ], 11, 12, [ 21, 24 ] ],
                    9: [ [ 0, 4 ], [ 21, 23 ] ],
                    10: [ [ 0, 2 ], 11, 24, 25, 28 ],
                    11: [ [ 0, 2 ], [ 11, 13 ], 23, 24, 26, 29, 32, 33, 81 ],
                    13: [ [ 0, 4 ], [ 21, 25 ], 81 ],
                    14: [ [ 0, 2 ], [ 21, 25 ] ],
                    15: [ [ 0, 3 ], [ 21, 29 ] ],
                    16: [ [ 0, 3 ], [ 21, 23 ], 81 ],
                    17: [ [ 0, 3 ], [ 21, 25 ], 81 ],
                    18: [ [ 0, 3 ], [ 21, 27 ] ],
                    19: [ [ 0, 3 ], [ 21, 23 ] ],
                    20: [ [ 0, 2 ], 21, 22, 81 ],
                    32: [ 0, [ 21, 33 ] ],
                    33: [ 0, [ 21, 38 ] ],
                    34: [ 0, 1, [ 22, 37 ] ]
                },
                52: {
                    0: [ 0 ],
                    1: [ [ 0, 3 ], [ 11, 15 ], [ 21, 23 ], 81 ],
                    2: [ 0, 1, 3, 21, 22 ],
                    3: [ [ 0, 3 ], [ 21, 30 ], 81, 82 ],
                    4: [ [ 0, 2 ], [ 21, 25 ] ],
                    5: [ [ 0, 2 ], [ 21, 27 ] ],
                    6: [ [ 0, 3 ], [ 21, 28 ] ],
                    22: [ 0, 1, [ 22, 30 ] ],
                    23: [ 0, 1, [ 22, 28 ] ],
                    24: [ 0, 1, [ 22, 28 ] ],
                    26: [ 0, 1, [ 22, 36 ] ],
                    27: [ [ 0, 2 ], 22, 23, [ 25, 32 ] ]
                },
                53: {
                    0: [ 0 ],
                    1: [ [ 0, 3 ], [ 11, 14 ], 21, 22, [ 24, 29 ], 81 ],
                    3: [ [ 0, 2 ], [ 21, 26 ], 28, 81 ],
                    4: [ [ 0, 2 ], [ 21, 28 ] ],
                    5: [ [ 0, 2 ], [ 21, 24 ] ],
                    6: [ [ 0, 2 ], [ 21, 30 ] ],
                    7: [ [ 0, 2 ], [ 21, 24 ] ],
                    8: [ [ 0, 2 ], [ 21, 29 ] ],
                    9: [ [ 0, 2 ], [ 21, 27 ] ],
                    23: [ 0, 1, [ 22, 29 ], 31 ],
                    25: [ [ 0, 4 ], [ 22, 32 ] ],
                    26: [ 0, 1, [ 21, 28 ] ],
                    27: [ 0, 1, [ 22, 30 ] ],
                    28: [ 0, 1, 22, 23 ],
                    29: [ 0, 1, [ 22, 32 ] ],
                    31: [ 0, 2, 3, [ 22, 24 ] ],
                    34: [ 0, [ 21, 23 ] ],
                    33: [ 0, 21, [ 23, 25 ] ],
                    35: [ 0, [ 21, 28 ] ]
                },
                54: {
                    0: [ 0 ],
                    1: [ [ 0, 2 ], [ 21, 27 ] ],
                    21: [ 0, [ 21, 29 ], 32, 33 ],
                    22: [ 0, [ 21, 29 ], [ 31, 33 ] ],
                    23: [ 0, 1, [ 22, 38 ] ],
                    24: [ 0, [ 21, 31 ] ],
                    25: [ 0, [ 21, 27 ] ],
                    26: [ 0, [ 21, 27 ] ]
                },
                61: {
                    0: [ 0 ],
                    1: [ [ 0, 4 ], [ 11, 16 ], 22, [ 24, 26 ] ],
                    2: [ [ 0, 4 ], 22 ],
                    3: [ [ 0, 4 ], [ 21, 24 ], [ 26, 31 ] ],
                    4: [ [ 0, 4 ], [ 22, 31 ], 81 ],
                    5: [ [ 0, 2 ], [ 21, 28 ], 81, 82 ],
                    6: [ [ 0, 2 ], [ 21, 32 ] ],
                    7: [ [ 0, 2 ], [ 21, 30 ] ],
                    8: [ [ 0, 2 ], [ 21, 31 ] ],
                    9: [ [ 0, 2 ], [ 21, 29 ] ],
                    10: [ [ 0, 2 ], [ 21, 26 ] ]
                },
                62: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], 11, [ 21, 23 ] ],
                    2: [ 0, 1 ],
                    3: [ [ 0, 2 ], 21 ],
                    4: [ [ 0, 3 ], [ 21, 23 ] ],
                    5: [ [ 0, 3 ], [ 21, 25 ] ],
                    6: [ [ 0, 2 ], [ 21, 23 ] ],
                    7: [ [ 0, 2 ], [ 21, 25 ] ],
                    8: [ [ 0, 2 ], [ 21, 26 ] ],
                    9: [ [ 0, 2 ], [ 21, 24 ], 81, 82 ],
                    10: [ [ 0, 2 ], [ 21, 27 ] ],
                    11: [ [ 0, 2 ], [ 21, 26 ] ],
                    12: [ [ 0, 2 ], [ 21, 28 ] ],
                    24: [ 0, 21, [ 24, 29 ] ],
                    26: [ 0, 21, [ 23, 30 ] ],
                    29: [ 0, 1, [ 21, 27 ] ],
                    30: [ 0, 1, [ 21, 27 ] ]
                },
                63: {
                    0: [ 0 ],
                    1: [ [ 0, 5 ], [ 21, 23 ] ],
                    2: [ 0, 2, [ 21, 25 ] ],
                    21: [ 0, [ 21, 23 ], [ 26, 28 ] ],
                    22: [ 0, [ 21, 24 ] ],
                    23: [ 0, [ 21, 24 ] ],
                    25: [ 0, [ 21, 25 ] ],
                    26: [ 0, [ 21, 26 ] ],
                    27: [ 0, 1, [ 21, 26 ] ],
                    28: [ [ 0, 2 ], [ 21, 23 ] ]
                },
                64: {
                    0: [ 0 ],
                    1: [ 0, 1, [ 4, 6 ], 21, 22, 81 ],
                    2: [ [ 0, 3 ], 5, [ 21, 23 ] ],
                    3: [ [ 0, 3 ], [ 21, 24 ], 81 ],
                    4: [ [ 0, 2 ], [ 21, 25 ] ],
                    5: [ [ 0, 2 ], 21, 22 ]
                },
                65: {
                    0: [ 0 ],
                    1: [ [ 0, 9 ], 21 ],
                    2: [ [ 0, 5 ] ],
                    21: [ 0, 1, 22, 23 ],
                    22: [ 0, 1, 22, 23 ],
                    23: [ [ 0, 3 ], [ 23, 25 ], 27, 28 ],
                    28: [ 0, 1, [ 22, 29 ] ],
                    29: [ 0, 1, [ 22, 29 ] ],
                    30: [ 0, 1, [ 22, 24 ] ],
                    31: [ 0, 1, [ 21, 31 ] ],
                    32: [ 0, 1, [ 21, 27 ] ],
                    40: [ 0, 2, 3, [ 21, 28 ] ],
                    42: [ [ 0, 2 ], 21, [ 23, 26 ] ],
                    43: [ 0, 1, [ 21, 26 ] ],
                    90: [ [ 0, 4 ] ],
                    27: [ [ 0, 2 ], 22, 23 ]
                },
                71: {
                    0: [ 0 ]
                },
                81: {
                    0: [ 0 ]
                },
                82: {
                    0: [ 0 ]
                }
            };
            var provincial = parseInt(value.substr(0, 2), 10), prefectural = parseInt(value.substr(2, 2), 10), county = parseInt(value.substr(4, 2), 10);
            if (!adminDivisionCodes[provincial] || !adminDivisionCodes[provincial][prefectural]) {
                return false;
            }
            var inRange = false, rangeDef = adminDivisionCodes[provincial][prefectural];
            for (var i = 0; i < rangeDef.length; i++) {
                if ($.isArray(rangeDef[i]) && rangeDef[i][0] <= county && county <= rangeDef[i][1] || !$.isArray(rangeDef[i]) && county === rangeDef[i]) {
                    inRange = true;
                    break;
                }
            }
            if (!inRange) {
                return false;
            }
            var dob;
            if (value.length === 18) {
                dob = value.substr(6, 8);
            } else {
                dob = "19" + value.substr(6, 6);
            }
            var year = parseInt(dob.substr(0, 4), 10), month = parseInt(dob.substr(4, 2), 10), day = parseInt(dob.substr(6, 2), 10);
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                return false;
            }
            if (value.length === 18) {
                var sum = 0, weight = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 ];
                for (i = 0; i < 17; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = (12 - sum % 11) % 11;
                var checksum = value.charAt(17).toUpperCase() !== "X" ? parseInt(value.charAt(17), 10) : 10;
                return checksum === sum;
            }
            return true;
        },
        _cz: function(value) {
            if (!/^\d{9,10}$/.test(value)) {
                return false;
            }
            var year = 1900 + parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10) % 50 % 20, day = parseInt(value.substr(4, 2), 10);
            if (value.length === 9) {
                if (year >= 1980) {
                    year -= 100;
                }
                if (year > 1953) {
                    return false;
                }
            } else if (year < 1954) {
                year += 100;
            }
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                return false;
            }
            if (value.length === 10) {
                var check = parseInt(value.substr(0, 9), 10) % 11;
                if (year < 1985) {
                    check = check % 10;
                }
                return check + "" === value.substr(9, 1);
            }
            return true;
        },
        _dk: function(value) {
            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {
                return false;
            }
            value = value.replace(/-/g, "");
            var day = parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10), year = parseInt(value.substr(4, 2), 10);
            switch (true) {
              case "5678".indexOf(value.charAt(6)) !== -1 && year >= 58:
                year += 1800;
                break;

              case "0123".indexOf(value.charAt(6)) !== -1:
              case "49".indexOf(value.charAt(6)) !== -1 && year >= 37:
                year += 1900;
                break;

              default:
                year += 2e3;
                break;
            }
            return $.fn.bootstrapValidator.helpers.date(year, month, day);
        },
        _ee: function(value) {
            return this._lt(value);
        },
        _es: function(value) {
            if (!/^[0-9A-Z]{8}[-]{0,1}[0-9A-Z]$/.test(value) && !/^[XYZ][-]{0,1}[0-9]{7}[-]{0,1}[0-9A-Z]$/.test(value)) {
                return false;
            }
            value = value.replace(/-/g, "");
            var index = "XYZ".indexOf(value.charAt(0));
            if (index !== -1) {
                value = index + value.substr(1) + "";
            }
            var check = parseInt(value.substr(0, 8), 10);
            check = "TRWAGMYFPDXBNJZSQVHLCKE"[check % 23];
            return check === value.substr(8, 1);
        },
        _fi: function(value) {
            if (!/^[0-9]{6}[-+A][0-9]{3}[0-9ABCDEFHJKLMNPRSTUVWXY]$/.test(value)) {
                return false;
            }
            var day = parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10), year = parseInt(value.substr(4, 2), 10), centuries = {
                "+": 1800,
                "-": 1900,
                A: 2e3
            };
            year = centuries[value.charAt(6)] + year;
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                return false;
            }
            var individual = parseInt(value.substr(7, 3), 10);
            if (individual < 2) {
                return false;
            }
            var n = value.substr(0, 6) + value.substr(7, 3) + "";
            n = parseInt(n, 10);
            return "0123456789ABCDEFHJKLMNPRSTUVWXY".charAt(n % 31) === value.charAt(10);
        },
        _hr: function(value) {
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.mod11And10(value);
        },
        _ie: function(value) {
            if (!/^\d{7}[A-W][AHWTX]?$/.test(value)) {
                return false;
            }
            var getCheckDigit = function(value) {
                while (value.length < 7) {
                    value = "0" + value;
                }
                var alphabet = "WABCDEFGHIJKLMNOPQRSTUV", sum = 0;
                for (var i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i), 10) * (8 - i);
                }
                sum += 9 * alphabet.indexOf(value.substr(7));
                return alphabet[sum % 23];
            };
            if (value.length === 9 && ("A" === value.charAt(8) || "H" === value.charAt(8))) {
                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + "");
            } else {
                return value.charAt(7) === getCheckDigit(value.substr(0, 7));
            }
        },
        _is: function(value) {
            if (!/^[0-9]{6}[-]{0,1}[0-9]{4}$/.test(value)) {
                return false;
            }
            value = value.replace(/-/g, "");
            var day = parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10), year = parseInt(value.substr(4, 2), 10), century = parseInt(value.charAt(9), 10);
            year = century === 9 ? 1900 + year : (20 + century) * 100 + year;
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {
                return false;
            }
            var sum = 0, weight = [ 3, 2, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            return sum + "" === value.charAt(8);
        },
        _lt: function(value) {
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            var gender = parseInt(value.charAt(0), 10), year = parseInt(value.substr(1, 2), 10), month = parseInt(value.substr(3, 2), 10), day = parseInt(value.substr(5, 2), 10), century = gender % 2 === 0 ? 17 + gender / 2 : 17 + (gender + 1) / 2;
            year = century * 100 + year;
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {
                return false;
            }
            var sum = 0, weight = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 1 ];
            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum !== 10) {
                return sum + "" === value.charAt(10);
            }
            sum = 0;
            weight = [ 3, 4, 5, 6, 7, 8, 9, 1, 2, 3 ];
            for (i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum === 10) {
                sum = 0;
            }
            return sum + "" === value.charAt(10);
        },
        _lv: function(value) {
            if (!/^[0-9]{6}[-]{0,1}[0-9]{5}$/.test(value)) {
                return false;
            }
            value = value.replace(/\D/g, "");
            var day = parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10), year = parseInt(value.substr(4, 2), 10);
            year = year + 1800 + parseInt(value.charAt(6), 10) * 100;
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day, true)) {
                return false;
            }
            var sum = 0, weight = [ 10, 5, 8, 4, 2, 1, 6, 3, 7, 9 ];
            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = (sum + 1) % 11 % 10;
            return sum + "" === value.charAt(10);
        },
        _nl: function(value) {
            while (value.length < 9) {
                value = "0" + value;
            }
            if (!/^[0-9]{4}[.]{0,1}[0-9]{2}[.]{0,1}[0-9]{3}$/.test(value)) {
                return false;
            }
            value = value.replace(/\./g, "");
            if (parseInt(value, 10) === 0) {
                return false;
            }
            var sum = 0, length = value.length;
            for (var i = 0; i < length - 1; i++) {
                sum += (9 - i) * parseInt(value.charAt(i), 10);
            }
            sum = sum % 11;
            if (sum === 10) {
                sum = 0;
            }
            return sum + "" === value.charAt(length - 1);
        },
        _ro: function(value) {
            if (!/^[0-9]{13}$/.test(value)) {
                return false;
            }
            var gender = parseInt(value.charAt(0), 10);
            if (gender === 0 || gender === 7 || gender === 8) {
                return false;
            }
            var year = parseInt(value.substr(1, 2), 10), month = parseInt(value.substr(3, 2), 10), day = parseInt(value.substr(5, 2), 10), centuries = {
                "1": 1900,
                "2": 1900,
                "3": 1800,
                "4": 1800,
                "5": 2e3,
                "6": 2e3
            };
            if (day > 31 && month > 12) {
                return false;
            }
            if (gender !== 9) {
                year = centuries[gender + ""] + year;
                if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                    return false;
                }
            }
            var sum = 0, weight = [ 2, 7, 9, 1, 4, 6, 3, 5, 8, 2, 7, 9 ], length = value.length;
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum === 10) {
                sum = 1;
            }
            return sum + "" === value.charAt(length - 1);
        },
        _se: function(value) {
            if (!/^[0-9]{10}$/.test(value) && !/^[0-9]{6}[-|+][0-9]{4}$/.test(value)) {
                return false;
            }
            value = value.replace(/[^0-9]/g, "");
            var year = parseInt(value.substr(0, 2), 10) + 1900, month = parseInt(value.substr(2, 2), 10), day = parseInt(value.substr(4, 2), 10);
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.luhn(value);
        },
        _sk: function(value) {
            return this._cz(value);
        },
        _sm: function(value) {
            return /^\d{5}$/.test(value);
        },
        _th: function(value) {
            if (value.length !== 13) {
                return false;
            }
            var sum = 0;
            for (var i = 0; i < 12; i++) {
                sum += parseInt(value.charAt(i), 10) * (13 - i);
            }
            return (11 - sum % 11) % 10 === parseInt(value.charAt(12), 10);
        },
        _za: function(value) {
            if (!/^[0-9]{10}[0|1][8|9][0-9]$/.test(value)) {
                return false;
            }
            var year = parseInt(value.substr(0, 2), 10), currentYear = new Date().getFullYear() % 100, month = parseInt(value.substr(2, 2), 10), day = parseInt(value.substr(4, 2), 10);
            year = year >= currentYear ? year + 1900 : year + 2e3;
            if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.luhn(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.identical = $.extend($.fn.bootstrapValidator.i18n.identical || {}, {
        default: "Please enter the same value"
    });
    $.fn.bootstrapValidator.validators.identical = {
        html5Attributes: {
            message: "message",
            field: "field"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var compareWith = validator.getFieldElements(options.field);
            if (compareWith === null || compareWith.length === 0) {
                return true;
            }
            if (value === compareWith.val()) {
                validator.updateStatus(options.field, validator.STATUS_VALID, "identical");
                return true;
            } else {
                return false;
            }
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.imei = $.extend($.fn.bootstrapValidator.i18n.imei || {}, {
        default: "Please enter a valid IMEI number"
    });
    $.fn.bootstrapValidator.validators.imei = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            switch (true) {
              case /^\d{15}$/.test(value):
              case /^\d{2}-\d{6}-\d{6}-\d{1}$/.test(value):
              case /^\d{2}\s\d{6}\s\d{6}\s\d{1}$/.test(value):
                value = value.replace(/[^0-9]/g, "");
                return $.fn.bootstrapValidator.helpers.luhn(value);

              case /^\d{14}$/.test(value):
              case /^\d{16}$/.test(value):
              case /^\d{2}-\d{6}-\d{6}(|-\d{2})$/.test(value):
              case /^\d{2}\s\d{6}\s\d{6}(|\s\d{2})$/.test(value):
                return true;

              default:
                return false;
            }
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.imo = $.extend($.fn.bootstrapValidator.i18n.imo || {}, {
        default: "Please enter a valid IMO number"
    });
    $.fn.bootstrapValidator.validators.imo = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^IMO \d{7}$/i.test(value)) {
                return false;
            }
            var sum = 0, digits = value.replace(/^.*(\d{7})$/, "$1");
            for (var i = 6; i >= 1; i--) {
                sum += digits.slice(6 - i, -i) * (i + 1);
            }
            return sum % 10 === parseInt(digits.charAt(6), 10);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.integer = $.extend($.fn.bootstrapValidator.i18n.integer || {}, {
        default: "Please enter a valid number"
    });
    $.fn.bootstrapValidator.validators.integer = {
        enableByHtml5: function($field) {
            return "number" === $field.attr("type") && ($field.attr("step") === undefined || $field.attr("step") % 1 === 0);
        },
        validate: function(validator, $field, options) {
            if (this.enableByHtml5($field) && $field.get(0).validity && $field.get(0).validity.badInput === true) {
                return false;
            }
            var value = $field.val();
            if (value === "") {
                return true;
            }
            return /^(?:-?(?:0|[1-9][0-9]*))$/.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.ip = $.extend($.fn.bootstrapValidator.i18n.ip || {}, {
        default: "Please enter a valid IP address",
        ipv4: "Please enter a valid IPv4 address",
        ipv6: "Please enter a valid IPv6 address"
    });
    $.fn.bootstrapValidator.validators.ip = {
        html5Attributes: {
            message: "message",
            ipv4: "ipv4",
            ipv6: "ipv6"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            options = $.extend({}, {
                ipv4: true,
                ipv6: true
            }, options);
            var ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/, ipv6Regex = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, valid = false, message;
            switch (true) {
              case options.ipv4 && !options.ipv6:
                valid = ipv4Regex.test(value);
                message = options.message || $.fn.bootstrapValidator.i18n.ip.ipv4;
                break;

              case !options.ipv4 && options.ipv6:
                valid = ipv6Regex.test(value);
                message = options.message || $.fn.bootstrapValidator.i18n.ip.ipv6;
                break;

              case options.ipv4 && options.ipv6:
              default:
                valid = ipv4Regex.test(value) || ipv6Regex.test(value);
                message = options.message || $.fn.bootstrapValidator.i18n.ip["default"];
                break;
            }
            return {
                valid: valid,
                message: message
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.isbn = $.extend($.fn.bootstrapValidator.i18n.isbn || {}, {
        default: "Please enter a valid ISBN number"
    });
    $.fn.bootstrapValidator.validators.isbn = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var type;
            switch (true) {
              case /^\d{9}[\dX]$/.test(value):
              case value.length === 13 && /^(\d+)-(\d+)-(\d+)-([\dX])$/.test(value):
              case value.length === 13 && /^(\d+)\s(\d+)\s(\d+)\s([\dX])$/.test(value):
                type = "ISBN10";
                break;

              case /^(978|979)\d{9}[\dX]$/.test(value):
              case value.length === 17 && /^(978|979)-(\d+)-(\d+)-(\d+)-([\dX])$/.test(value):
              case value.length === 17 && /^(978|979)\s(\d+)\s(\d+)\s(\d+)\s([\dX])$/.test(value):
                type = "ISBN13";
                break;

              default:
                return false;
            }
            value = value.replace(/[^0-9X]/gi, "");
            var chars = value.split(""), length = chars.length, sum = 0, i, checksum;
            switch (type) {
              case "ISBN10":
                sum = 0;
                for (i = 0; i < length - 1; i++) {
                    sum += parseInt(chars[i], 10) * (10 - i);
                }
                checksum = 11 - sum % 11;
                if (checksum === 11) {
                    checksum = 0;
                } else if (checksum === 10) {
                    checksum = "X";
                }
                return checksum + "" === chars[length - 1];

              case "ISBN13":
                sum = 0;
                for (i = 0; i < length - 1; i++) {
                    sum += i % 2 === 0 ? parseInt(chars[i], 10) : parseInt(chars[i], 10) * 3;
                }
                checksum = 10 - sum % 10;
                if (checksum === 10) {
                    checksum = "0";
                }
                return checksum + "" === chars[length - 1];

              default:
                return false;
            }
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.isin = $.extend($.fn.bootstrapValidator.i18n.isin || {}, {
        default: "Please enter a valid ISIN number"
    });
    $.fn.bootstrapValidator.validators.isin = {
        COUNTRY_CODES: "AF|AX|AL|DZ|AS|AD|AO|AI|AQ|AG|AR|AM|AW|AU|AT|AZ|BS|BH|BD|BB|BY|BE|BZ|BJ|BM|BT|BO|BQ|BA|BW|BV|BR|IO|BN|BG|BF|BI|KH|CM|CA|CV|KY|CF|TD|CL|CN|CX|CC|CO|KM|CG|CD|CK|CR|CI|HR|CU|CW|CY|CZ|DK|DJ|DM|DO|EC|EG|SV|GQ|ER|EE|ET|FK|FO|FJ|FI|FR|GF|PF|TF|GA|GM|GE|DE|GH|GI|GR|GL|GD|GP|GU|GT|GG|GN|GW|GY|HT|HM|VA|HN|HK|HU|IS|IN|ID|IR|IQ|IE|IM|IL|IT|JM|JP|JE|JO|KZ|KE|KI|KP|KR|KW|KG|LA|LV|LB|LS|LR|LY|LI|LT|LU|MO|MK|MG|MW|MY|MV|ML|MT|MH|MQ|MR|MU|YT|MX|FM|MD|MC|MN|ME|MS|MA|MZ|MM|NA|NR|NP|NL|NC|NZ|NI|NE|NG|NU|NF|MP|NO|OM|PK|PW|PS|PA|PG|PY|PE|PH|PN|PL|PT|PR|QA|RE|RO|RU|RW|BL|SH|KN|LC|MF|PM|VC|WS|SM|ST|SA|SN|RS|SC|SL|SG|SX|SK|SI|SB|SO|ZA|GS|SS|ES|LK|SD|SR|SJ|SZ|SE|CH|SY|TW|TJ|TZ|TH|TL|TG|TK|TO|TT|TN|TR|TM|TC|TV|UG|UA|AE|GB|US|UM|UY|UZ|VU|VE|VN|VG|VI|WF|EH|YE|ZM|ZW",
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = value.toUpperCase();
            var regex = new RegExp("^(" + this.COUNTRY_CODES + ")[0-9A-Z]{10}$");
            if (!regex.test(value)) {
                return false;
            }
            var converted = "", length = value.length;
            for (var i = 0; i < length - 1; i++) {
                var c = value.charCodeAt(i);
                converted += c > 57 ? (c - 55).toString() : value.charAt(i);
            }
            var digits = "", n = converted.length, group = n % 2 !== 0 ? 0 : 1;
            for (i = 0; i < n; i++) {
                digits += parseInt(converted[i], 10) * (i % 2 === group ? 2 : 1) + "";
            }
            var sum = 0;
            for (i = 0; i < digits.length; i++) {
                sum += parseInt(digits.charAt(i), 10);
            }
            sum = (10 - sum % 10) % 10;
            return sum + "" === value.charAt(length - 1);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.ismn = $.extend($.fn.bootstrapValidator.i18n.ismn || {}, {
        default: "Please enter a valid ISMN number"
    });
    $.fn.bootstrapValidator.validators.ismn = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var type;
            switch (true) {
              case /^M\d{9}$/.test(value):
              case /^M-\d{4}-\d{4}-\d{1}$/.test(value):
              case /^M\s\d{4}\s\d{4}\s\d{1}$/.test(value):
                type = "ISMN10";
                break;

              case /^9790\d{9}$/.test(value):
              case /^979-0-\d{4}-\d{4}-\d{1}$/.test(value):
              case /^979\s0\s\d{4}\s\d{4}\s\d{1}$/.test(value):
                type = "ISMN13";
                break;

              default:
                return false;
            }
            if ("ISMN10" === type) {
                value = "9790" + value.substr(1);
            }
            value = value.replace(/[^0-9]/gi, "");
            var length = value.length, sum = 0, weight = [ 1, 3 ];
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i % 2];
            }
            sum = 10 - sum % 10;
            return sum + "" === value.charAt(length - 1);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.issn = $.extend($.fn.bootstrapValidator.i18n.issn || {}, {
        default: "Please enter a valid ISSN number"
    });
    $.fn.bootstrapValidator.validators.issn = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^\d{4}\-\d{3}[\dX]$/.test(value)) {
                return false;
            }
            value = value.replace(/[^0-9X]/gi, "");
            var chars = value.split(""), length = chars.length, sum = 0;
            if (chars[7] === "X") {
                chars[7] = 10;
            }
            for (var i = 0; i < length; i++) {
                sum += parseInt(chars[i], 10) * (8 - i);
            }
            return sum % 11 === 0;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.lessThan = $.extend($.fn.bootstrapValidator.i18n.lessThan || {}, {
        default: "Please enter a value less than or equal to %s",
        notInclusive: "Please enter a value less than %s"
    });
    $.fn.bootstrapValidator.validators.lessThan = {
        html5Attributes: {
            message: "message",
            value: "value",
            inclusive: "inclusive"
        },
        enableByHtml5: function($field) {
            var type = $field.attr("type"), max = $field.attr("max");
            if (max && type !== "date") {
                return {
                    value: max
                };
            }
            return false;
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = this._format(value);
            if (!$.isNumeric(value)) {
                return false;
            }
            var compareTo = $.isNumeric(options.value) ? options.value : validator.getDynamicOption($field, options.value), compareToValue = this._format(compareTo);
            value = parseFloat(value);
            return options.inclusive === true || options.inclusive === undefined ? {
                valid: value <= compareToValue,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.lessThan["default"], compareTo)
            } : {
                valid: value < compareToValue,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.lessThan.notInclusive, compareTo)
            };
        },
        _format: function(value) {
            return (value + "").replace(",", ".");
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.mac = $.extend($.fn.bootstrapValidator.i18n.mac || {}, {
        default: "Please enter a valid MAC address"
    });
    $.fn.bootstrapValidator.validators.mac = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            return /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.meid = $.extend($.fn.bootstrapValidator.i18n.meid || {}, {
        default: "Please enter a valid MEID number"
    });
    $.fn.bootstrapValidator.validators.meid = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            switch (true) {
              case /^[0-9A-F]{15}$/i.test(value):
              case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}[- ][0-9A-F]$/i.test(value):
              case /^\d{19}$/.test(value):
              case /^\d{5}[- ]\d{5}[- ]\d{4}[- ]\d{4}[- ]\d$/.test(value):
                var cd = value.charAt(value.length - 1);
                value = value.replace(/[- ]/g, "");
                if (value.match(/^\d*$/i)) {
                    return $.fn.bootstrapValidator.helpers.luhn(value);
                }
                value = value.slice(0, -1);
                var cdCalc = "";
                for (var i = 1; i <= 13; i += 2) {
                    cdCalc += (parseInt(value.charAt(i), 16) * 2).toString(16);
                }
                var sum = 0;
                for (i = 0; i < cdCalc.length; i++) {
                    sum += parseInt(cdCalc.charAt(i), 16);
                }
                return sum % 10 === 0 ? cd === "0" : cd === ((Math.floor((sum + 10) / 10) * 10 - sum) * 2).toString(16);

              case /^[0-9A-F]{14}$/i.test(value):
              case /^[0-9A-F]{2}[- ][0-9A-F]{6}[- ][0-9A-F]{6}$/i.test(value):
              case /^\d{18}$/.test(value):
              case /^\d{5}[- ]\d{5}[- ]\d{4}[- ]\d{4}$/.test(value):
                return true;

              default:
                return false;
            }
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.notEmpty = $.extend($.fn.bootstrapValidator.i18n.notEmpty || {}, {
        default: "Please enter a value"
    });
    $.fn.bootstrapValidator.validators.notEmpty = {
        enableByHtml5: function($field) {
            var required = $field.attr("required") + "";
            return "required" === required || "true" === required;
        },
        validate: function(validator, $field, options) {
            var type = $field.attr("type");
            if ("radio" === type || "checkbox" === type) {
                return validator.getFieldElements($field.attr("data-bv-field")).filter(":checked").length > 0;
            }
            if ("number" === type && $field.get(0).validity && $field.get(0).validity.badInput === true) {
                return true;
            }
            return $.trim($field.val()) !== "";
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.numeric = $.extend($.fn.bootstrapValidator.i18n.numeric || {}, {
        default: "Please enter a valid float number"
    });
    $.fn.bootstrapValidator.validators.numeric = {
        html5Attributes: {
            message: "message",
            separator: "separator"
        },
        enableByHtml5: function($field) {
            return "number" === $field.attr("type") && $field.attr("step") !== undefined && $field.attr("step") % 1 !== 0;
        },
        validate: function(validator, $field, options) {
            if (this.enableByHtml5($field) && $field.get(0).validity && $field.get(0).validity.badInput === true) {
                return false;
            }
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var separator = options.separator || ".";
            if (separator !== ".") {
                value = value.replace(separator, ".");
            }
            return !isNaN(parseFloat(value)) && isFinite(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.phone = $.extend($.fn.bootstrapValidator.i18n.phone || {}, {
        default: "Please enter a valid phone number",
        countryNotSupported: "The country code %s is not supported",
        country: "Please enter a valid phone number in %s",
        countries: {
            BR: "Brazil",
            CN: "China",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            ES: "Spain",
            FR: "France",
            GB: "United Kingdom",
            MA: "Morocco",
            PK: "Pakistan",
            RO: "Romania",
            RU: "Russia",
            SK: "Slovakia",
            TH: "Thailand",
            US: "USA",
            VE: "Venezuela"
        }
    });
    $.fn.bootstrapValidator.validators.phone = {
        html5Attributes: {
            message: "message",
            country: "country"
        },
        COUNTRY_CODES: [ "BR", "CN", "CZ", "DE", "DK", "ES", "FR", "GB", "MA", "PK", "RO", "RU", "SK", "TH", "US", "VE" ],
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var country = options.country;
            if (typeof country !== "string" || $.inArray(country, this.COUNTRY_CODES) === -1) {
                country = validator.getDynamicOption($field, country);
            }
            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                return {
                    valid: false,
                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.phone.countryNotSupported, country)
                };
            }
            var isValid = true;
            switch (country.toUpperCase()) {
              case "BR":
                value = $.trim(value);
                isValid = /^(([\d]{4}[-.\s]{1}[\d]{2,3}[-.\s]{1}[\d]{2}[-.\s]{1}[\d]{2})|([\d]{4}[-.\s]{1}[\d]{3}[-.\s]{1}[\d]{4})|((\(?\+?[0-9]{2}\)?\s?)?(\(?\d{2}\)?\s?)?\d{4,5}[-.\s]?\d{4}))$/.test(value);
                break;

              case "CN":
                value = $.trim(value);
                isValid = /^((00|\+)?(86(?:-| )))?((\d{11})|(\d{3}[- ]{1}\d{4}[- ]{1}\d{4})|((\d{2,4}[- ]){1}(\d{7,8}|(\d{3,4}[- ]{1}\d{4}))([- ]{1}\d{1,4})?))$/.test(value);
                break;

              case "CZ":
                isValid = /^(((00)([- ]?)|\+)(420)([- ]?))?((\d{3})([- ]?)){2}(\d{3})$/.test(value);
                break;

              case "DE":
                value = $.trim(value);
                isValid = /^(((((((00|\+)49[ \-/]?)|0)[1-9][0-9]{1,4})[ \-/]?)|((((00|\+)49\()|\(0)[1-9][0-9]{1,4}\)[ \-/]?))[0-9]{1,7}([ \-/]?[0-9]{1,5})?)$/.test(value);
                break;

              case "DK":
                value = $.trim(value);
                isValid = /^(\+45|0045|\(45\))?\s?[2-9](\s?\d){7}$/.test(value);
                break;

              case "ES":
                value = $.trim(value);
                isValid = /^(?:(?:(?:\+|00)34\D?))?(?:9|6)(?:\d\D?){8}$/.test(value);
                break;

              case "FR":
                value = $.trim(value);
                isValid = /^(?:(?:(?:\+|00)33[ ]?(?:\(0\)[ ]?)?)|0){1}[1-9]{1}([ .-]?)(?:\d{2}\1?){3}\d{2}$/.test(value);
                break;

              case "GB":
                value = $.trim(value);
                isValid = /^\(?(?:(?:0(?:0|11)\)?[\s-]?\(?|\+)44\)?[\s-]?\(?(?:0\)?[\s-]?\(?)?|0)(?:\d{2}\)?[\s-]?\d{4}[\s-]?\d{4}|\d{3}\)?[\s-]?\d{3}[\s-]?\d{3,4}|\d{4}\)?[\s-]?(?:\d{5}|\d{3}[\s-]?\d{3})|\d{5}\)?[\s-]?\d{4,5}|8(?:00[\s-]?11[\s-]?11|45[\s-]?46[\s-]?4\d))(?:(?:[\s-]?(?:x|ext\.?\s?|\#)\d+)?)$/.test(value);
                break;

              case "MA":
                value = $.trim(value);
                isValid = /^(?:(?:(?:\+|00)212[\s]?(?:[\s]?\(0\)[\s]?)?)|0){1}(?:5[\s.-]?[2-3]|6[\s.-]?[13-9]){1}[0-9]{1}(?:[\s.-]?\d{2}){3}$/.test(value);
                break;

              case "PK":
                value = $.trim(value);
                isValid = /^0?3[0-9]{2}[0-9]{7}$/.test(value);
                break;

              case "RO":
                isValid = /^(\+4|)?(07[0-8]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}?(\s|\.|\-)?([0-9]{3}(\s|\.|\-|)){2}$/g.test(value);
                break;

              case "RU":
                isValid = /^((8|\+7|007)[\-\.\/ ]?)?([\(\/\.]?\d{3}[\)\/\.]?[\-\.\/ ]?)?[\d\-\.\/ ]{7,10}$/g.test(value);
                break;

              case "SK":
                isValid = /^(((00)([- ]?)|\+)(420)([- ]?))?((\d{3})([- ]?)){2}(\d{3})$/.test(value);
                break;

              case "TH":
                isValid = /^0\(?([6|8-9]{2})*-([0-9]{3})*-([0-9]{4})$/.test(value);
                break;

              case "VE":
                value = $.trim(value);
                isValid = /^0(?:2(?:12|4[0-9]|5[1-9]|6[0-9]|7[0-8]|8[1-35-8]|9[1-5]|3[45789])|4(?:1[246]|2[46]))\d{7}$/.test(value);
                break;

              case "US":
              default:
                value = value.replace(/\D/g, "");
                isValid = /^(?:(1\-?)|(\+1 ?))?\(?(\d{3})[\)\-\.]?(\d{3})[\-\.]?(\d{4})$/.test(value) && value.length === 10;
                break;
            }
            return {
                valid: isValid,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.phone.country, $.fn.bootstrapValidator.i18n.phone.countries[country])
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.regexp = $.extend($.fn.bootstrapValidator.i18n.regexp || {}, {
        default: "Please enter a value matching the pattern"
    });
    $.fn.bootstrapValidator.validators.regexp = {
        html5Attributes: {
            message: "message",
            regexp: "regexp"
        },
        enableByHtml5: function($field) {
            var pattern = $field.attr("pattern");
            if (pattern) {
                return {
                    regexp: pattern
                };
            }
            return false;
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var regexp = "string" === typeof options.regexp ? new RegExp(options.regexp) : options.regexp;
            return regexp.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.remote = $.extend($.fn.bootstrapValidator.i18n.remote || {}, {
        default: "Please enter a valid value"
    });
    $.fn.bootstrapValidator.validators.remote = {
        html5Attributes: {
            message: "message",
            name: "name",
            type: "type",
            url: "url",
            data: "data",
            delay: "delay"
        },
        destroy: function(validator, $field, options) {
            if ($field.data("bv.remote.timer")) {
                clearTimeout($field.data("bv.remote.timer"));
                $field.removeData("bv.remote.timer");
            }
        },
        validate: function(validator, $field, options) {
            var value = $field.val(), dfd = new $.Deferred();
            if (value === "") {
                dfd.resolve($field, "remote", {
                    valid: true
                });
                return dfd;
            }
            var name = $field.attr("data-bv-field"), data = options.data || {}, url = options.url, type = options.type || "GET", headers = options.headers || {};
            if ("function" === typeof data) {
                data = data.call(this, validator);
            }
            if ("string" === typeof data) {
                data = JSON.parse(data);
            }
            if ("function" === typeof url) {
                url = url.call(this, validator);
            }
            data[options.name || name] = value;
            function runCallback() {
                var xhr = $.ajax({
                    type: type,
                    headers: headers,
                    url: url,
                    dataType: "json",
                    data: data
                });
                xhr.then(function(response) {
                    response.valid = response.valid === true || response.valid === "true";
                    dfd.resolve($field, "remote", response);
                });
                dfd.fail(function() {
                    xhr.abort();
                });
                return dfd;
            }
            if (options.delay) {
                if ($field.data("bv.remote.timer")) {
                    clearTimeout($field.data("bv.remote.timer"));
                }
                $field.data("bv.remote.timer", setTimeout(runCallback, options.delay));
                return dfd;
            } else {
                return runCallback();
            }
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.rtn = $.extend($.fn.bootstrapValidator.i18n.rtn || {}, {
        default: "Please enter a valid RTN number"
    });
    $.fn.bootstrapValidator.validators.rtn = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^\d{9}$/.test(value)) {
                return false;
            }
            var sum = 0;
            for (var i = 0; i < value.length; i += 3) {
                sum += parseInt(value.charAt(i), 10) * 3 + parseInt(value.charAt(i + 1), 10) * 7 + parseInt(value.charAt(i + 2), 10);
            }
            return sum !== 0 && sum % 10 === 0;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.sedol = $.extend($.fn.bootstrapValidator.i18n.sedol || {}, {
        default: "Please enter a valid SEDOL number"
    });
    $.fn.bootstrapValidator.validators.sedol = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            value = value.toUpperCase();
            if (!/^[0-9A-Z]{7}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 1, 3, 1, 7, 3, 9, 1 ], length = value.length;
            for (var i = 0; i < length - 1; i++) {
                sum += weight[i] * parseInt(value.charAt(i), 36);
            }
            sum = (10 - sum % 10) % 10;
            return sum + "" === value.charAt(length - 1);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.siren = $.extend($.fn.bootstrapValidator.i18n.siren || {}, {
        default: "Please enter a valid SIREN number"
    });
    $.fn.bootstrapValidator.validators.siren = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^\d{9}$/.test(value)) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.luhn(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.siret = $.extend($.fn.bootstrapValidator.i18n.siret || {}, {
        default: "Please enter a valid SIRET number"
    });
    $.fn.bootstrapValidator.validators.siret = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var sum = 0, length = value.length, tmp;
            for (var i = 0; i < length; i++) {
                tmp = parseInt(value.charAt(i), 10);
                if (i % 2 === 0) {
                    tmp = tmp * 2;
                    if (tmp > 9) {
                        tmp -= 9;
                    }
                }
                sum += tmp;
            }
            return sum % 10 === 0;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.step = $.extend($.fn.bootstrapValidator.i18n.step || {}, {
        default: "Please enter a valid step of %s"
    });
    $.fn.bootstrapValidator.validators.step = {
        html5Attributes: {
            message: "message",
            base: "baseValue",
            step: "step"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            options = $.extend({}, {
                baseValue: 0,
                step: 1
            }, options);
            value = parseFloat(value);
            if (!$.isNumeric(value)) {
                return false;
            }
            var round = function(x, precision) {
                var m = Math.pow(10, precision);
                x = x * m;
                var sign = x > 0 | -(x < 0), isHalf = x % 1 === .5 * sign;
                if (isHalf) {
                    return (Math.floor(x) + (sign > 0)) / m;
                } else {
                    return Math.round(x) / m;
                }
            }, floatMod = function(x, y) {
                if (y === 0) {
                    return 1;
                }
                var dotX = (x + "").split("."), dotY = (y + "").split("."), precision = (dotX.length === 1 ? 0 : dotX[1].length) + (dotY.length === 1 ? 0 : dotY[1].length);
                return round(x - y * Math.floor(x / y), precision);
            };
            var mod = floatMod(value - options.baseValue, options.step);
            return {
                valid: mod === 0 || mod === options.step,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.step["default"], [ options.step ])
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.stringCase = $.extend($.fn.bootstrapValidator.i18n.stringCase || {}, {
        default: "Please enter only lowercase characters",
        upper: "Please enter only uppercase characters"
    });
    $.fn.bootstrapValidator.validators.stringCase = {
        html5Attributes: {
            message: "message",
            case: "case"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var stringCase = (options["case"] || "lower").toLowerCase();
            return {
                valid: "upper" === stringCase ? value === value.toUpperCase() : value === value.toLowerCase(),
                message: options.message || ("upper" === stringCase ? $.fn.bootstrapValidator.i18n.stringCase.upper : $.fn.bootstrapValidator.i18n.stringCase["default"])
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.stringLength = $.extend($.fn.bootstrapValidator.i18n.stringLength || {}, {
        default: "Please enter a value with valid length",
        less: "Please enter less than %s characters",
        more: "Please enter more than %s characters",
        between: "Please enter value between %s and %s characters long"
    });
    $.fn.bootstrapValidator.validators.stringLength = {
        html5Attributes: {
            message: "message",
            min: "min",
            max: "max",
            trim: "trim",
            utf8bytes: "utf8Bytes"
        },
        enableByHtml5: function($field) {
            var options = {}, maxLength = $field.attr("maxlength"), minLength = $field.attr("minlength");
            if (maxLength) {
                options.max = parseInt(maxLength, 10);
            }
            if (minLength) {
                options.min = parseInt(minLength, 10);
            }
            return $.isEmptyObject(options) ? false : options;
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (options.trim === true || options.trim === "true") {
                value = $.trim(value);
            }
            if (value === "") {
                return true;
            }
            var min = $.isNumeric(options.min) ? options.min : validator.getDynamicOption($field, options.min), max = $.isNumeric(options.max) ? options.max : validator.getDynamicOption($field, options.max), utf8Length = function(str) {
                var s = str.length;
                for (var i = str.length - 1; i >= 0; i--) {
                    var code = str.charCodeAt(i);
                    if (code > 127 && code <= 2047) {
                        s++;
                    } else if (code > 2047 && code <= 65535) {
                        s += 2;
                    }
                    if (code >= 56320 && code <= 57343) {
                        i--;
                    }
                }
                return s;
            }, length = options.utf8Bytes ? utf8Length(value) : value.length, isValid = true, message = options.message || $.fn.bootstrapValidator.i18n.stringLength["default"];
            if (min && length < parseInt(min, 10) || max && length > parseInt(max, 10)) {
                isValid = false;
            }
            switch (true) {
              case !!min && !!max:
                message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.between, [ parseInt(min, 10), parseInt(max, 10) ]);
                break;

              case !!min:
                message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.more, parseInt(min, 10));
                break;

              case !!max:
                message = $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.stringLength.less, parseInt(max, 10));
                break;

              default:
                break;
            }
            return {
                valid: isValid,
                message: message
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.uri = $.extend($.fn.bootstrapValidator.i18n.uri || {}, {
        default: "Please enter a valid URI"
    });
    $.fn.bootstrapValidator.validators.uri = {
        html5Attributes: {
            message: "message",
            allowlocal: "allowLocal",
            protocol: "protocol"
        },
        enableByHtml5: function($field) {
            return "url" === $field.attr("type");
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var allowLocal = options.allowLocal === true || options.allowLocal === "true", protocol = (options.protocol || "http, https, ftp").split(",").join("|").replace(/\s/g, ""), urlExp = new RegExp("^" + "(?:(?:" + protocol + ")://)" + "(?:\\S+(?::\\S*)?@)?" + "(?:" + (allowLocal ? "" : "(?!(?:10|127)(?:\\.\\d{1,3}){3})" + "(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})" + "(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})") + "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" + "(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" + "(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" + "|" + "(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)" + "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*" + "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))" + (allowLocal ? "?" : "") + ")" + "(?::\\d{2,5})?" + "(?:/[^\\s]*)?" + "$", "i");
            return urlExp.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.uuid = $.extend($.fn.bootstrapValidator.i18n.uuid || {}, {
        default: "Please enter a valid UUID number",
        version: "Please enter a valid UUID version %s number"
    });
    $.fn.bootstrapValidator.validators.uuid = {
        html5Attributes: {
            message: "message",
            version: "version"
        },
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var patterns = {
                "3": /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,
                "4": /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
                "5": /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,
                all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
            }, version = options.version ? options.version + "" : "all";
            return {
                valid: null === patterns[version] ? true : patterns[version].test(value),
                message: options.version ? $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.uuid.version, options.version) : options.message || $.fn.bootstrapValidator.i18n.uuid["default"]
            };
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.vat = $.extend($.fn.bootstrapValidator.i18n.vat || {}, {
        default: "Please enter a valid VAT number",
        countryNotSupported: "The country code %s is not supported",
        country: "Please enter a valid VAT number in %s",
        countries: {
            AT: "Austria",
            BE: "Belgium",
            BG: "Bulgaria",
            BR: "Brazil",
            CH: "Switzerland",
            CY: "Cyprus",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            EE: "Estonia",
            ES: "Spain",
            FI: "Finland",
            FR: "France",
            GB: "United Kingdom",
            GR: "Greek",
            EL: "Greek",
            HU: "Hungary",
            HR: "Croatia",
            IE: "Ireland",
            IS: "Iceland",
            IT: "Italy",
            LT: "Lithuania",
            LU: "Luxembourg",
            LV: "Latvia",
            MT: "Malta",
            NL: "Netherlands",
            NO: "Norway",
            PL: "Poland",
            PT: "Portugal",
            RO: "Romania",
            RU: "Russia",
            RS: "Serbia",
            SE: "Sweden",
            SI: "Slovenia",
            SK: "Slovakia",
            VE: "Venezuela",
            ZA: "South Africa"
        }
    });
    $.fn.bootstrapValidator.validators.vat = {
        html5Attributes: {
            message: "message",
            country: "country"
        },
        COUNTRY_CODES: [ "AT", "BE", "BG", "BR", "CH", "CY", "CZ", "DE", "DK", "EE", "EL", "ES", "FI", "FR", "GB", "GR", "HR", "HU", "IE", "IS", "IT", "LT", "LU", "LV", "MT", "NL", "NO", "PL", "PT", "RO", "RU", "RS", "SE", "SK", "SI", "VE", "ZA" ],
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            var country = options.country;
            if (!country) {
                country = value.substr(0, 2);
            } else if (typeof country !== "string" || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                country = validator.getDynamicOption($field, country);
            }
            if ($.inArray(country, this.COUNTRY_CODES) === -1) {
                return {
                    valid: false,
                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.vat.countryNotSupported, country)
                };
            }
            var method = [ "_", country.toLowerCase() ].join("");
            return this[method](value) ? true : {
                valid: false,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.vat.country, $.fn.bootstrapValidator.i18n.vat.countries[country.toUpperCase()])
            };
        },
        _at: function(value) {
            if (/^ATU[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^U[0-9]{8}$/.test(value)) {
                return false;
            }
            value = value.substr(1);
            var sum = 0, weight = [ 1, 2, 1, 2, 1, 2, 1 ], temp = 0;
            for (var i = 0; i < 7; i++) {
                temp = parseInt(value.charAt(i), 10) * weight[i];
                if (temp > 9) {
                    temp = Math.floor(temp / 10) + temp % 10;
                }
                sum += temp;
            }
            sum = 10 - (sum + 4) % 10;
            if (sum === 10) {
                sum = 0;
            }
            return sum + "" === value.substr(7, 1);
        },
        _be: function(value) {
            if (/^BE[0]{0,1}[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0]{0,1}[0-9]{9}$/.test(value)) {
                return false;
            }
            if (value.length === 9) {
                value = "0" + value;
            }
            if (value.substr(1, 1) === "0") {
                return false;
            }
            var sum = parseInt(value.substr(0, 8), 10) + parseInt(value.substr(8, 2), 10);
            return sum % 97 === 0;
        },
        _bg: function(value) {
            if (/^BG[0-9]{9,10}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9,10}$/.test(value)) {
                return false;
            }
            var sum = 0, i = 0;
            if (value.length === 9) {
                for (i = 0; i < 8; i++) {
                    sum += parseInt(value.charAt(i), 10) * (i + 1);
                }
                sum = sum % 11;
                if (sum === 10) {
                    sum = 0;
                    for (i = 0; i < 8; i++) {
                        sum += parseInt(value.charAt(i), 10) * (i + 3);
                    }
                }
                sum = sum % 10;
                return sum + "" === value.substr(8);
            } else if (value.length === 10) {
                var egn = function(value) {
                    var year = parseInt(value.substr(0, 2), 10) + 1900, month = parseInt(value.substr(2, 2), 10), day = parseInt(value.substr(4, 2), 10);
                    if (month > 40) {
                        year += 100;
                        month -= 40;
                    } else if (month > 20) {
                        year -= 100;
                        month -= 20;
                    }
                    if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                        return false;
                    }
                    var sum = 0, weight = [ 2, 4, 8, 5, 10, 9, 7, 3, 6 ];
                    for (var i = 0; i < 9; i++) {
                        sum += parseInt(value.charAt(i), 10) * weight[i];
                    }
                    sum = sum % 11 % 10;
                    return sum + "" === value.substr(9, 1);
                }, pnf = function(value) {
                    var sum = 0, weight = [ 21, 19, 17, 13, 11, 9, 7, 3, 1 ];
                    for (var i = 0; i < 9; i++) {
                        sum += parseInt(value.charAt(i), 10) * weight[i];
                    }
                    sum = sum % 10;
                    return sum + "" === value.substr(9, 1);
                }, vat = function(value) {
                    var sum = 0, weight = [ 4, 3, 2, 7, 6, 5, 4, 3, 2 ];
                    for (var i = 0; i < 9; i++) {
                        sum += parseInt(value.charAt(i), 10) * weight[i];
                    }
                    sum = 11 - sum % 11;
                    if (sum === 10) {
                        return false;
                    }
                    if (sum === 11) {
                        sum = 0;
                    }
                    return sum + "" === value.substr(9, 1);
                };
                return egn(value) || pnf(value) || vat(value);
            }
            return false;
        },
        _br: function(value) {
            if (value === "") {
                return true;
            }
            var cnpj = value.replace(/[^\d]+/g, "");
            if (cnpj === "" || cnpj.length !== 14) {
                return false;
            }
            if (cnpj === "00000000000000" || cnpj === "11111111111111" || cnpj === "22222222222222" || cnpj === "33333333333333" || cnpj === "44444444444444" || cnpj === "55555555555555" || cnpj === "66666666666666" || cnpj === "77777777777777" || cnpj === "88888888888888" || cnpj === "99999999999999") {
                return false;
            }
            var length = cnpj.length - 2, numbers = cnpj.substring(0, length), digits = cnpj.substring(length), sum = 0, pos = length - 7;
            for (var i = length; i >= 1; i--) {
                sum += parseInt(numbers.charAt(length - i), 10) * pos--;
                if (pos < 2) {
                    pos = 9;
                }
            }
            var result = sum % 11 < 2 ? 0 : 11 - sum % 11;
            if (result !== parseInt(digits.charAt(0), 10)) {
                return false;
            }
            length = length + 1;
            numbers = cnpj.substring(0, length);
            sum = 0;
            pos = length - 7;
            for (i = length; i >= 1; i--) {
                sum += parseInt(numbers.charAt(length - i), 10) * pos--;
                if (pos < 2) {
                    pos = 9;
                }
            }
            result = sum % 11 < 2 ? 0 : 11 - sum % 11;
            return result === parseInt(digits.charAt(1), 10);
        },
        _ch: function(value) {
            if (/^CHE[0-9]{9}(MWST)?$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^E[0-9]{9}(MWST)?$/.test(value)) {
                return false;
            }
            value = value.substr(1);
            var sum = 0, weight = [ 5, 4, 3, 2, 7, 6, 5, 4 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 10) {
                return false;
            }
            if (sum === 11) {
                sum = 0;
            }
            return sum + "" === value.substr(8, 1);
        },
        _cy: function(value) {
            if (/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {
                return false;
            }
            if (value.substr(0, 2) === "12") {
                return false;
            }
            var sum = 0, translation = {
                "0": 1,
                "1": 0,
                "2": 5,
                "3": 7,
                "4": 9,
                "5": 13,
                "6": 15,
                "7": 17,
                "8": 19,
                "9": 21
            };
            for (var i = 0; i < 8; i++) {
                var temp = parseInt(value.charAt(i), 10);
                if (i % 2 === 0) {
                    temp = translation[temp + ""];
                }
                sum += temp;
            }
            sum = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[sum % 26];
            return sum + "" === value.substr(8, 1);
        },
        _cz: function(value) {
            if (/^CZ[0-9]{8,10}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8,10}$/.test(value)) {
                return false;
            }
            var sum = 0, i = 0;
            if (value.length === 8) {
                if (value.charAt(0) + "" === "9") {
                    return false;
                }
                sum = 0;
                for (i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i), 10) * (8 - i);
                }
                sum = 11 - sum % 11;
                if (sum === 10) {
                    sum = 0;
                }
                if (sum === 11) {
                    sum = 1;
                }
                return sum + "" === value.substr(7, 1);
            } else if (value.length === 9 && value.charAt(0) + "" === "6") {
                sum = 0;
                for (i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i + 1), 10) * (8 - i);
                }
                sum = 11 - sum % 11;
                if (sum === 10) {
                    sum = 0;
                }
                if (sum === 11) {
                    sum = 1;
                }
                sum = [ 8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10 ][sum - 1];
                return sum + "" === value.substr(8, 1);
            } else if (value.length === 9 || value.length === 10) {
                var year = 1900 + parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10) % 50 % 20, day = parseInt(value.substr(4, 2), 10);
                if (value.length === 9) {
                    if (year >= 1980) {
                        year -= 100;
                    }
                    if (year > 1953) {
                        return false;
                    }
                } else if (year < 1954) {
                    year += 100;
                }
                if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                    return false;
                }
                if (value.length === 10) {
                    var check = parseInt(value.substr(0, 9), 10) % 11;
                    if (year < 1985) {
                        check = check % 10;
                    }
                    return check + "" === value.substr(9, 1);
                }
                return true;
            }
            return false;
        },
        _de: function(value) {
            if (/^DE[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.mod11And10(value);
        },
        _dk: function(value) {
            if (/^DK[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 2, 7, 6, 5, 4, 3, 2, 1 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            return sum % 11 === 0;
        },
        _ee: function(value) {
            if (/^EE[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 3, 7, 1, 3, 7, 1, 3, 7, 1 ];
            for (var i = 0; i < 9; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            return sum % 10 === 0;
        },
        _es: function(value) {
            if (/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {
                return false;
            }
            var dni = function(value) {
                var check = parseInt(value.substr(0, 8), 10);
                check = "TRWAGMYFPDXBNJZSQVHLCKE"[check % 23];
                return check + "" === value.substr(8, 1);
            }, nie = function(value) {
                var check = [ "XYZ".indexOf(value.charAt(0)), value.substr(1) ].join("");
                check = parseInt(check, 10);
                check = "TRWAGMYFPDXBNJZSQVHLCKE"[check % 23];
                return check + "" === value.substr(8, 1);
            }, cif = function(value) {
                var first = value.charAt(0), check;
                if ("KLM".indexOf(first) !== -1) {
                    check = parseInt(value.substr(1, 8), 10);
                    check = "TRWAGMYFPDXBNJZSQVHLCKE"[check % 23];
                    return check + "" === value.substr(8, 1);
                } else if ("ABCDEFGHJNPQRSUVW".indexOf(first) !== -1) {
                    var sum = 0, weight = [ 2, 1, 2, 1, 2, 1, 2 ], temp = 0;
                    for (var i = 0; i < 7; i++) {
                        temp = parseInt(value.charAt(i + 1), 10) * weight[i];
                        if (temp > 9) {
                            temp = Math.floor(temp / 10) + temp % 10;
                        }
                        sum += temp;
                    }
                    sum = 10 - sum % 10;
                    return sum + "" === value.substr(8, 1) || "JABCDEFGHI"[sum] === value.substr(8, 1);
                }
                return false;
            };
            var first = value.charAt(0);
            if (/^[0-9]$/.test(first)) {
                return dni(value);
            } else if (/^[XYZ]$/.test(first)) {
                return nie(value);
            } else {
                return cif(value);
            }
        },
        _fi: function(value) {
            if (/^FI[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 7, 9, 10, 5, 8, 4, 2, 1 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            return sum % 11 === 0;
        },
        _fr: function(value) {
            if (/^FR[0-9A-Z]{2}[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9A-Z]{2}[0-9]{9}$/.test(value)) {
                return false;
            }
            if (!$.fn.bootstrapValidator.helpers.luhn(value.substr(2))) {
                return false;
            }
            if (/^[0-9]{2}$/.test(value.substr(0, 2))) {
                return value.substr(0, 2) === parseInt(value.substr(2) + "12", 10) % 97 + "";
            } else {
                var alphabet = "0123456789ABCDEFGHJKLMNPQRSTUVWXYZ", check;
                if (/^[0-9]{1}$/.test(value.charAt(0))) {
                    check = alphabet.indexOf(value.charAt(0)) * 24 + alphabet.indexOf(value.charAt(1)) - 10;
                } else {
                    check = alphabet.indexOf(value.charAt(0)) * 34 + alphabet.indexOf(value.charAt(1)) - 100;
                }
                return (parseInt(value.substr(2), 10) + 1 + Math.floor(check / 11)) % 11 === check % 11;
            }
        },
        _gb: function(value) {
            if (/^GB[0-9]{9}$/.test(value) || /^GB[0-9]{12}$/.test(value) || /^GBGD[0-9]{3}$/.test(value) || /^GBHA[0-9]{3}$/.test(value) || /^GB(GD|HA)8888[0-9]{5}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value) && !/^[0-9]{12}$/.test(value) && !/^GD[0-9]{3}$/.test(value) && !/^HA[0-9]{3}$/.test(value) && !/^(GD|HA)8888[0-9]{5}$/.test(value)) {
                return false;
            }
            var length = value.length;
            if (length === 5) {
                var firstTwo = value.substr(0, 2), lastThree = parseInt(value.substr(2), 10);
                return "GD" === firstTwo && lastThree < 500 || "HA" === firstTwo && lastThree >= 500;
            } else if (length === 11 && ("GD8888" === value.substr(0, 6) || "HA8888" === value.substr(0, 6))) {
                if ("GD" === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) >= 500 || "HA" === value.substr(0, 2) && parseInt(value.substr(6, 3), 10) < 500) {
                    return false;
                }
                return parseInt(value.substr(6, 3), 10) % 97 === parseInt(value.substr(9, 2), 10);
            } else if (length === 9 || length === 12) {
                var sum = 0, weight = [ 8, 7, 6, 5, 4, 3, 2, 10, 1 ];
                for (var i = 0; i < 9; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = sum % 97;
                if (parseInt(value.substr(0, 3), 10) >= 100) {
                    return sum === 0 || sum === 42 || sum === 55;
                } else {
                    return sum === 0;
                }
            }
            return true;
        },
        _gr: function(value) {
            if (/^(GR|EL)[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }
            if (value.length === 8) {
                value = "0" + value;
            }
            var sum = 0, weight = [ 256, 128, 64, 32, 16, 8, 4, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11 % 10;
            return sum + "" === value.substr(8, 1);
        },
        _el: function(value) {
            return this._gr(value);
        },
        _hu: function(value) {
            if (/^HU[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 9, 7, 3, 1, 9, 7, 3, 1 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            return sum % 10 === 0;
        },
        _hr: function(value) {
            if (/^HR[0-9]{11}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.mod11And10(value);
        },
        _ie: function(value) {
            if (/^IE[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{1}[0-9A-Z\*\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {
                return false;
            }
            var getCheckDigit = function(value) {
                while (value.length < 7) {
                    value = "0" + value;
                }
                var alphabet = "WABCDEFGHIJKLMNOPQRSTUV", sum = 0;
                for (var i = 0; i < 7; i++) {
                    sum += parseInt(value.charAt(i), 10) * (8 - i);
                }
                sum += 9 * alphabet.indexOf(value.substr(7));
                return alphabet[sum % 23];
            };
            if (/^[0-9]+$/.test(value.substr(0, 7))) {
                return value.charAt(7) === getCheckDigit(value.substr(0, 7) + value.substr(8) + "");
            } else if ("ABCDEFGHIJKLMNOPQRSTUVWXYZ+*".indexOf(value.charAt(1)) !== -1) {
                return value.charAt(7) === getCheckDigit(value.substr(2, 5) + value.substr(0, 1) + "");
            }
            return true;
        },
        _is: function(value) {
            if (/^IS[0-9]{5,6}$/.test(value)) {
                value = value.substr(2);
            }
            return /^[0-9]{5,6}$/.test(value);
        },
        _it: function(value) {
            if (/^IT[0-9]{11}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            if (parseInt(value.substr(0, 7), 10) === 0) {
                return false;
            }
            var lastThree = parseInt(value.substr(7, 3), 10);
            if (lastThree < 1 || lastThree > 201 && lastThree !== 999 && lastThree !== 888) {
                return false;
            }
            return $.fn.bootstrapValidator.helpers.luhn(value);
        },
        _lt: function(value) {
            if (/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {
                return false;
            }
            var length = value.length, sum = 0, i;
            for (i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * (1 + i % 9);
            }
            var check = sum % 11;
            if (check === 10) {
                sum = 0;
                for (i = 0; i < length - 1; i++) {
                    sum += parseInt(value.charAt(i), 10) * (1 + (i + 2) % 9);
                }
            }
            check = check % 11 % 10;
            return check + "" === value.charAt(length - 1);
        },
        _lu: function(value) {
            if (/^LU[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }
            return parseInt(value.substr(0, 6), 10) % 89 + "" === value.substr(6, 2);
        },
        _lv: function(value) {
            if (/^LV[0-9]{11}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{11}$/.test(value)) {
                return false;
            }
            var first = parseInt(value.charAt(0), 10), sum = 0, weight = [], i, length = value.length;
            if (first > 3) {
                sum = 0;
                weight = [ 9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1 ];
                for (i = 0; i < length; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = sum % 11;
                return sum === 3;
            } else {
                var day = parseInt(value.substr(0, 2), 10), month = parseInt(value.substr(2, 2), 10), year = parseInt(value.substr(4, 2), 10);
                year = year + 1800 + parseInt(value.charAt(6), 10) * 100;
                if (!$.fn.bootstrapValidator.helpers.date(year, month, day)) {
                    return false;
                }
                sum = 0;
                weight = [ 10, 5, 8, 4, 2, 1, 6, 3, 7, 9 ];
                for (i = 0; i < length - 1; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = (sum + 1) % 11 % 10;
                return sum + "" === value.charAt(length - 1);
            }
        },
        _mt: function(value) {
            if (/^MT[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 3, 4, 6, 7, 8, 9, 10, 1 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            return sum % 37 === 0;
        },
        _nl: function(value) {
            if (/^NL[0-9]{9}B[0-9]{2}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}B[0-9]{2}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 9, 8, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = sum % 11;
            if (sum > 9) {
                sum = 0;
            }
            return sum + "" === value.substr(8, 1);
        },
        _no: function(value) {
            if (/^NO[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 3, 2, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 11) {
                sum = 0;
            }
            return sum + "" === value.substr(8, 1);
        },
        _pl: function(value) {
            if (/^PL[0-9]{10}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{10}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 6, 5, 7, 2, 3, 4, 5, 6, 7, -1 ];
            for (var i = 0; i < 10; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            return sum % 11 === 0;
        },
        _pt: function(value) {
            if (/^PT[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 9, 8, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum > 9) {
                sum = 0;
            }
            return sum + "" === value.substr(8, 1);
        },
        _ro: function(value) {
            if (/^RO[1-9][0-9]{1,9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[1-9][0-9]{1,9}$/.test(value)) {
                return false;
            }
            var length = value.length, weight = [ 7, 5, 3, 2, 1, 7, 5, 3, 2 ].slice(10 - length), sum = 0;
            for (var i = 0; i < length - 1; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 10 * sum % 11 % 10;
            return sum + "" === value.substr(length - 1, 1);
        },
        _ru: function(value) {
            if (/^RU([0-9]{10}|[0-9]{12})$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^([0-9]{10}|[0-9]{12})$/.test(value)) {
                return false;
            }
            var i = 0;
            if (value.length === 10) {
                var sum = 0, weight = [ 2, 4, 10, 3, 5, 9, 4, 6, 8, 0 ];
                for (i = 0; i < 10; i++) {
                    sum += parseInt(value.charAt(i), 10) * weight[i];
                }
                sum = sum % 11;
                if (sum > 9) {
                    sum = sum % 10;
                }
                return sum + "" === value.substr(9, 1);
            } else if (value.length === 12) {
                var sum1 = 0, weight1 = [ 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0 ], sum2 = 0, weight2 = [ 3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0 ];
                for (i = 0; i < 11; i++) {
                    sum1 += parseInt(value.charAt(i), 10) * weight1[i];
                    sum2 += parseInt(value.charAt(i), 10) * weight2[i];
                }
                sum1 = sum1 % 11;
                if (sum1 > 9) {
                    sum1 = sum1 % 10;
                }
                sum2 = sum2 % 11;
                if (sum2 > 9) {
                    sum2 = sum2 % 10;
                }
                return sum1 + "" === value.substr(10, 1) && sum2 + "" === value.substr(11, 1);
            }
            return false;
        },
        _rs: function(value) {
            if (/^RS[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{9}$/.test(value)) {
                return false;
            }
            var sum = 10, temp = 0;
            for (var i = 0; i < 8; i++) {
                temp = (parseInt(value.charAt(i), 10) + sum) % 10;
                if (temp === 0) {
                    temp = 10;
                }
                sum = 2 * temp % 11;
            }
            return (sum + parseInt(value.substr(8, 1), 10)) % 10 === 1;
        },
        _se: function(value) {
            if (/^SE[0-9]{10}01$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{10}01$/.test(value)) {
                return false;
            }
            value = value.substr(0, 10);
            return $.fn.bootstrapValidator.helpers.luhn(value);
        },
        _si: function(value) {
            if (/^SI[0-9]{8}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[0-9]{8}$/.test(value)) {
                return false;
            }
            var sum = 0, weight = [ 8, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 7; i++) {
                sum += parseInt(value.charAt(i), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 10) {
                sum = 0;
            }
            return sum + "" === value.substr(7, 1);
        },
        _sk: function(value) {
            if (/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {
                return false;
            }
            return parseInt(value, 10) % 11 === 0;
        },
        _ve: function(value) {
            if (/^VE[VEJPG][0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            if (!/^[VEJPG][0-9]{9}$/.test(value)) {
                return false;
            }
            var types = {
                V: 4,
                E: 8,
                J: 12,
                P: 16,
                G: 20
            }, sum = types[value.charAt(0)], weight = [ 3, 2, 7, 6, 5, 4, 3, 2 ];
            for (var i = 0; i < 8; i++) {
                sum += parseInt(value.charAt(i + 1), 10) * weight[i];
            }
            sum = 11 - sum % 11;
            if (sum === 11 || sum === 10) {
                sum = 0;
            }
            return sum + "" === value.substr(9, 1);
        },
        _za: function(value) {
            if (/^ZA4[0-9]{9}$/.test(value)) {
                value = value.substr(2);
            }
            return /^4[0-9]{9}$/.test(value);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.vin = $.extend($.fn.bootstrapValidator.i18n.vin || {}, {
        default: "Please enter a valid VIN number"
    });
    $.fn.bootstrapValidator.validators.vin = {
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "") {
                return true;
            }
            if (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(value)) {
                return false;
            }
            value = value.toUpperCase();
            var chars = {
                A: 1,
                B: 2,
                C: 3,
                D: 4,
                E: 5,
                F: 6,
                G: 7,
                H: 8,
                J: 1,
                K: 2,
                L: 3,
                M: 4,
                N: 5,
                P: 7,
                R: 9,
                S: 2,
                T: 3,
                U: 4,
                V: 5,
                W: 6,
                X: 7,
                Y: 8,
                Z: 9,
                "1": 1,
                "2": 2,
                "3": 3,
                "4": 4,
                "5": 5,
                "6": 6,
                "7": 7,
                "8": 8,
                "9": 9,
                "0": 0
            }, weights = [ 8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2 ], sum = 0, length = value.length;
            for (var i = 0; i < length; i++) {
                sum += chars[value.charAt(i) + ""] * weights[i];
            }
            var reminder = sum % 11;
            if (reminder === 10) {
                reminder = "X";
            }
            return reminder + "" === value.charAt(8);
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n.zipCode = $.extend($.fn.bootstrapValidator.i18n.zipCode || {}, {
        default: "Please enter a valid postal code",
        countryNotSupported: "The country code %s is not supported",
        country: "Please enter a valid postal code in %s",
        countries: {
            AT: "Austria",
            BR: "Brazil",
            CA: "Canada",
            CH: "Switzerland",
            CZ: "Czech Republic",
            DE: "Germany",
            DK: "Denmark",
            FR: "France",
            GB: "United Kingdom",
            IE: "Ireland",
            IT: "Italy",
            MA: "Morocco",
            NL: "Netherlands",
            PT: "Portugal",
            RO: "Romania",
            RU: "Russia",
            SE: "Sweden",
            SG: "Singapore",
            SK: "Slovakia",
            US: "USA"
        }
    });
    $.fn.bootstrapValidator.validators.zipCode = {
        html5Attributes: {
            message: "message",
            country: "country"
        },
        COUNTRY_CODES: [ "AT", "BR", "CA", "CH", "CZ", "DE", "DK", "FR", "GB", "IE", "IT", "MA", "NL", "PT", "RO", "RU", "SE", "SG", "SK", "US" ],
        validate: function(validator, $field, options) {
            var value = $field.val();
            if (value === "" || !options.country) {
                return true;
            }
            var country = options.country;
            if (typeof country !== "string" || $.inArray(country, this.COUNTRY_CODES) === -1) {
                country = validator.getDynamicOption($field, country);
            }
            if (!country || $.inArray(country.toUpperCase(), this.COUNTRY_CODES) === -1) {
                return {
                    valid: false,
                    message: $.fn.bootstrapValidator.helpers.format($.fn.bootstrapValidator.i18n.zipCode.countryNotSupported, country)
                };
            }
            var isValid = false;
            country = country.toUpperCase();
            switch (country) {
              case "AT":
                isValid = /^([1-9]{1})(\d{3})$/.test(value);
                break;

              case "BR":
                isValid = /^(\d{2})([\.]?)(\d{3})([\-]?)(\d{3})$/.test(value);
                break;

              case "CA":
                isValid = /^(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}\s?[0-9]{1}(?:A|B|C|E|G|H|J|K|L|M|N|P|R|S|T|V|W|X|Y|Z){1}[0-9]{1}$/i.test(value);
                break;

              case "CH":
                isValid = /^([1-9]{1})(\d{3})$/.test(value);
                break;

              case "CZ":
                isValid = /^(\d{3})([ ]?)(\d{2})$/.test(value);
                break;

              case "DE":
                isValid = /^(?!01000|99999)(0[1-9]\d{3}|[1-9]\d{4})$/.test(value);
                break;

              case "DK":
                isValid = /^(DK(-|\s)?)?\d{4}$/i.test(value);
                break;

              case "FR":
                isValid = /^[0-9]{5}$/i.test(value);
                break;

              case "GB":
                isValid = this._gb(value);
                break;

              case "IE":
                isValid = /^(D6W|[ACDEFHKNPRTVWXY]\d{2})\s[0-9ACDEFHKNPRTVWXY]{4}$/.test(value);
                break;

              case "IT":
                isValid = /^(I-|IT-)?\d{5}$/i.test(value);
                break;

              case "MA":
                isValid = /^[1-9][0-9]{4}$/i.test(value);
                break;

              case "NL":
                isValid = /^[1-9][0-9]{3} ?(?!sa|sd|ss)[a-z]{2}$/i.test(value);
                break;

              case "PT":
                isValid = /^[1-9]\d{3}-\d{3}$/.test(value);
                break;

              case "RO":
                isValid = /^(0[1-8]{1}|[1-9]{1}[0-5]{1})?[0-9]{4}$/i.test(value);
                break;

              case "RU":
                isValid = /^[0-9]{6}$/i.test(value);
                break;

              case "SE":
                isValid = /^(S-)?\d{3}\s?\d{2}$/i.test(value);
                break;

              case "SG":
                isValid = /^([0][1-9]|[1-6][0-9]|[7]([0-3]|[5-9])|[8][0-2])(\d{4})$/i.test(value);
                break;

              case "SK":
                isValid = /^(\d{3})([ ]?)(\d{2})$/.test(value);
                break;

              case "US":
              default:
                isValid = /^\d{4,5}([\-]?\d{4})?$/.test(value);
                break;
            }
            return {
                valid: isValid,
                message: $.fn.bootstrapValidator.helpers.format(options.message || $.fn.bootstrapValidator.i18n.zipCode.country, $.fn.bootstrapValidator.i18n.zipCode.countries[country])
            };
        },
        _gb: function(value) {
            var firstChar = "[ABCDEFGHIJKLMNOPRSTUWYZ]", secondChar = "[ABCDEFGHKLMNOPQRSTUVWXY]", thirdChar = "[ABCDEFGHJKPMNRSTUVWXY]", fourthChar = "[ABEHMNPRVWXY]", fifthChar = "[ABDEFGHJLNPQRSTUWXYZ]", regexps = [ new RegExp("^(" + firstChar + "{1}" + secondChar + "?[0-9]{1,2})(\\s*)([0-9]{1}" + fifthChar + "{2})$", "i"), new RegExp("^(" + firstChar + "{1}[0-9]{1}" + thirdChar + "{1})(\\s*)([0-9]{1}" + fifthChar + "{2})$", "i"), new RegExp("^(" + firstChar + "{1}" + secondChar + "{1}?[0-9]{1}" + fourthChar + "{1})(\\s*)([0-9]{1}" + fifthChar + "{2})$", "i"), new RegExp("^(BF1)(\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$", "i"), /^(GIR)(\s*)(0AA)$/i, /^(BFPO)(\s*)([0-9]{1,4})$/i, /^(BFPO)(\s*)(c\/o\s*[0-9]{1,3})$/i, /^([A-Z]{4})(\s*)(1ZZ)$/i, /^(AI-2640)$/i ];
            for (var i = 0; i < regexps.length; i++) {
                if (regexps[i].test(value)) {
                    return true;
                }
            }
            return false;
        }
    };
})(window.jQuery);

(function($) {
    $.fn.bootstrapValidator.i18n = $.extend(true, $.fn.bootstrapValidator.i18n, {
        base64: {
            default: "Bitte eine Base64 Kodierung eingeben"
        },
        between: {
            default: "Bitte einen Wert zwischen %s und %s eingeben",
            notInclusive: "Bitte einen Wert zwischen %s und %s (strictly) eingeben"
        },
        callback: {
            default: "Bitte einen gÃ¼ltigen Wert eingeben"
        },
        choice: {
            default: "Bitte einen gÃ¼ltigen Wert eingeben",
            less: "Bitte mindestens %s Werte eingeben",
            more: "Bitte maximal %s Werte eingeben",
            between: "Zwischen %s - %s Werten wÃ¤hlen"
        },
        color: {
            default: "Bitte gÃ¼ltige Farbe eingeben"
        },
        creditCard: {
            default: "Bitte gÃ¼ltige Kreditkartennr. eingeben"
        },
        cusip: {
            default: "Bitte gÃ¼ltige CUSIP Nummer eingeben"
        },
        cvv: {
            default: "Bitte gÃ¼ltige CVV Nummer eingeben"
        },
        date: {
            default: "Bitte gÃ¼ltiges Datum eingeben",
            min: "Bitte gÃ¼ltiges Datum nach %s",
            max: "Bitte gÃ¼ltiges Datum vor %s",
            range: "Bitte gÃ¼ltiges Datum im zwischen %s - %s"
        },
        different: {
            default: "Bitte anderen Wert eingeben"
        },
        digits: {
            default: "Bitte Zahlen eingeben"
        },
        ean: {
            default: "Bitte gÃ¼ltige EAN Nummer eingeben"
        },
        emailAddress: {
            default: "Bitte gÃ¼ltige Emailadresse eingeben"
        },
        file: {
            default: "Bitte gÃ¼ltiges File eingeben"
        },
        greaterThan: {
            default: "Bitte Wert grÃ¶Ãer gleich %s eingeben",
            notInclusive: "Bitte Wert grÃ¶Ãer als %s eingeben"
        },
        grid: {
            default: "Bitte gÃ¼ltige GRId Nummer eingeben"
        },
        hex: {
            default: "Bitte gÃ¼ltigen Hexadezimalwert eingeben"
        },
        hexColor: {
            default: "Bitte gÃ¼ltige Hex-Farbe eingeben"
        },
        iban: {
            default: "Bitte eine gÃ¼ltige IBAN Nummer eingeben",
            countryNotSupported: "Der LÃ¤ndercode %s wird nicht unterstÃ¼tzt",
            country: "Bitte eine gÃ¼ltige IBAN Nummer fÃ¼r %s eingeben",
            countries: {
                AD: "Andorra",
                AE: "Vereinigte Arabische Emirate",
                AL: "Albanien",
                AO: "Angola",
                AT: "Ãsterreich",
                AZ: "Aserbaidschan",
                BA: "Bosnien und Herzegowina",
                BE: "Belgien",
                BF: "Burkina Faso",
                BG: "Bulgarien",
                BH: "Bahrein",
                BI: "Burundi",
                BJ: "Benin",
                BR: "Brasilien",
                CH: "Schweiz",
                CI: "ElfenbeinkÃ¼ste",
                CM: "Kamerun",
                CR: "Costa Rica",
                CV: "Kap Verde",
                CY: "Zypern",
                CZ: "Tschechische",
                DE: "Deutschland",
                DK: "DÃ¤nemark",
                DO: "Dominikanische Republik",
                DZ: "Algerien",
                EE: "Estland",
                ES: "Spanien",
                FI: "Finnland",
                FO: "FÃ¤rÃ¶er-Inseln",
                FR: "Frankreich",
                GB: "Vereinigtes KÃ¶nigreich",
                GE: "Georgien",
                GI: "Gibraltar",
                GL: "GrÃ¶nland",
                GR: "Griechenland",
                GT: "Guatemala",
                HR: "Croatia",
                HU: "Ungarn",
                IE: "Irland",
                IL: "Israel",
                IR: "Iran",
                IS: "Island",
                IT: "Italien",
                JO: "Jordanien",
                KW: "Kuwait",
                KZ: "Kasachstan",
                LB: "Libanon",
                LI: "Liechtenstein",
                LT: "Litauen",
                LU: "Luxemburg",
                LV: "Lettland",
                MC: "Monaco",
                MD: "Moldawien",
                ME: "Montenegro",
                MG: "Madagaskar",
                MK: "Mazedonien",
                ML: "Mali",
                MR: "Mauretanien",
                MT: "Malta",
                MU: "Mauritius",
                MZ: "Mosambik",
                NL: "Niederlande",
                NO: "Norwegen",
                PK: "Pakistan",
                PL: "Polen",
                PS: "PalÃ¤stina",
                PT: "Portugal",
                QA: "Katar",
                RO: "RumÃ¤nien",
                RS: "Serbien",
                SA: "Saudi-Arabien",
                SE: "Schweden",
                SI: "Slowenien",
                SK: "Slowakei",
                SM: "San Marino",
                SN: "Senegal",
                TN: "Tunesien",
                TR: "TÃ¼rkei",
                VG: "Jungferninseln"
            }
        },
        id: {
            default: "Bitte gÃ¼ltige Identifikationsnnummer eingeben",
            countryNotSupported: "Der LÃ¤ndercode %s wird nicht unterstÃ¼tzt",
            country: "Bitte gÃ¼ltige Identifikationsnummer fÃ¼r %s eingeben",
            countries: {
                BA: "Bosnien und Herzegowina",
                BG: "Bulgarien",
                BR: "Brasilien",
                CH: "Schweiz",
                CL: "Chile",
                CN: "China",
                CZ: "Tschechische",
                DK: "DÃ¤nemark",
                EE: "Estland",
                ES: "Spanien",
                FI: "Finnland",
                HR: "Kroatien",
                IE: "Irland",
                IS: "Island",
                LT: "Litauen",
                LV: "Lettland",
                ME: "Montenegro",
                MK: "Mazedonien",
                NL: "Niederlande",
                RO: "RumÃ¤nien",
                RS: "Serbien",
                SE: "Schweden",
                SI: "Slowenien",
                SK: "Slowakei",
                SM: "San Marino",
                TH: "Thailand",
                ZA: "SÃ¼dafrika"
            }
        },
        identical: {
            default: "Bitte gleichen Wert eingeben"
        },
        imei: {
            default: "Bitte gÃ¼ltige IMEI Nummer eingeben"
        },
        imo: {
            default: "Bitte gÃ¼ltige IMO Nummer eingeben"
        },
        integer: {
            default: "Bitte Zahl eingeben"
        },
        ip: {
            default: "Bitte  gÃ¼ltige IP-Adresse eingeben",
            ipv4: "Bitte  gÃ¼ltige IPv4 Adresse eingeben",
            ipv6: "Bitte  gÃ¼ltige IPv6 Adresse eingeben"
        },
        isbn: {
            default: "Bitte gÃ¼ltige ISBN Nummer eingeben"
        },
        isin: {
            default: "Bitte gÃ¼ltige ISIN Nummer eingeben"
        },
        ismn: {
            default: "Bitte gÃ¼ltige ISMN Nummer eingeben"
        },
        issn: {
            default: "Bitte gÃ¼ltige ISSN Nummer eingeben"
        },
        lessThan: {
            default: "Bitte Wert kleiner gleich %s eingeben",
            notInclusive: "Bitte Wert kleiner als %s eingeben"
        },
        mac: {
            default: "Bitte gÃ¼ltige MAC Adresse eingeben"
        },
        meid: {
            default: "Bitte gÃ¼ltige MEID Nummer eingeben"
        },
        notEmpty: {
            default: "Bitte Wert eingeben"
        },
        numeric: {
            default: "Bitte Nummer eingeben"
        },
        phone: {
            default: "Bitte gÃ¼ltige Telefonnummer eingeben",
            countryNotSupported: "Der LÃ¤ndercode %s wird nicht unterstÃ¼tzt",
            country: "Bitte valide Telefonnummer fÃ¼r %s eingeben",
            countries: {
                BR: "Brasilien",
                CN: "China",
                CZ: "Tschechische",
                DE: "Deutschland",
                DK: "DÃ¤nemark",
                ES: "Spanien",
                FR: "Frankreich",
                GB: "Vereinigtes KÃ¶nigreich",
                MA: "Marokko",
                PK: "Pakistan",
                RO: "RumÃ¤nien",
                RU: "Russland",
                SK: "Slowakei",
                TH: "Thailand",
                US: "Vereinigte Staaten von Amerika",
                VE: "Venezuela"
            }
        },
        regexp: {
            default: "Bitte Wert eingeben, der der Maske entspricht"
        },
        remote: {
            default: "Bitte einen gÃ¼ltigen Wert eingeben"
        },
        rtn: {
            default: "Bitte gÃ¼ltige RTN Nummer eingeben"
        },
        sedol: {
            default: "Bitte gÃ¼ltige SEDOL Nummer eingeben"
        },
        siren: {
            default: "Bitte gÃ¼ltige SIREN Nummer eingeben"
        },
        siret: {
            default: "Bitte gÃ¼ltige SIRET Nummer eingeben"
        },
        step: {
            default: "Bitte einen gÃ¼ltigen Schritt von %s eingeben"
        },
        stringCase: {
            default: "Bitte nur Kleinbuchstaben eingeben",
            upper: "Bitte nur GroÃbuchstaben eingeben"
        },
        stringLength: {
            default: "Bitte Wert mit gÃ¼ltiger LÃ¤nge eingeben",
            less: "Bitte weniger als %s Zeichen eingeben",
            more: "Bitte mehr als %s Zeichen eingeben",
            between: "Bitte Wert zwischen %s und %s Zeichen eingeben"
        },
        uri: {
            default: "Bitte gÃ¼ltige URI eingeben"
        },
        uuid: {
            default: "Bitte gÃ¼ltige UUID Nummer eingeben",
            version: "Bitte gÃ¼ltige UUID Version %s eingeben"
        },
        vat: {
            default: "Bitte gÃ¼ltige VAT Nummer eingeben",
            countryNotSupported: "Der LÃ¤ndercode %s wird nicht unterstÃ¼tzt",
            country: "Bitte gÃ¼ltige VAT Nummer fÃ¼r %s eingeben",
            countries: {
                AT: "Ãsterreich",
                BE: "Belgien",
                BG: "Bulgarien",
                BR: "Brasilien",
                CH: "Schweiz",
                CY: "Zypern",
                CZ: "Tschechische",
                DE: "Deutschland",
                DK: "DÃ¤nemark",
                EE: "Estland",
                ES: "Spanisch",
                FI: "Finnland",
                FR: "Frankreich",
                GB: "Vereinigtes KÃ¶nigreich",
                GR: "Griechenland",
                EL: "Griechenland",
                HU: "Ungarn",
                HR: "Kroatien",
                IE: "Irland",
                IS: "Island",
                IT: "Italien",
                LT: "Litauen",
                LU: "Luxemburg",
                LV: "Lettland",
                MT: "Malta",
                NL: "Niederlande",
                NO: "Norwegen",
                PL: "Polen",
                PT: "Portugal",
                RO: "RumÃ¤nien",
                RU: "Russland",
                RS: "Serbien",
                SE: "Schweden",
                SI: "Slowenien",
                SK: "Slowakei",
                VE: "Venezuela",
                ZA: "SÃ¼dafrika"
            }
        },
        vin: {
            default: "Bitte gÃ¼ltige VIN Nummer eingeben"
        },
        zipCode: {
            default: "Bitte gÃ¼ltige PLZ eingeben",
            countryNotSupported: "Der LÃ¤ndercode %s wird nicht unterstÃ¼tzt",
            country: "Bitte gÃ¼ltigen Postleitzahl fÃ¼r %s eingeben",
            countries: {
                AT: "Ãsterreich",
                BR: "Brasilien",
                CA: "Kanada",
                CH: "Schweiz",
                CZ: "Tschechische",
                DE: "Deutschland",
                DK: "DÃ¤nemark",
                FR: "Frankreich",
                GB: "Vereinigtes KÃ¶nigreich",
                IE: "Irland",
                IT: "Italien",
                MA: "Marokko",
                NL: "Niederlande",
                PT: "Portugal",
                RO: "RumÃ¤nien",
                RU: "Russland",
                SE: "Schweden",
                SG: "Singapur",
                SK: "Slowakei",
                US: "Vereinigte Staaten von Amerika"
            }
        }
    });
})(window.jQuery);

(function(factory) {
    if (typeof define === "function" && define.amd) {
        define([ "jquery" ], factory);
    } else if (typeof exports === "object") {
        module.exports = factory;
    } else {
        factory(jQuery);
    }
})(function($) {
    var toFix = [ "wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll" ], toBind = "onwheel" in document || document.documentMode >= 9 ? [ "wheel" ] : [ "mousewheel", "DomMouseScroll", "MozMousePixelScroll" ], slice = Array.prototype.slice, nullLowestDeltaTimeout, lowestDelta;
    if ($.event.fixHooks) {
        for (var i = toFix.length; i; ) {
            $.event.fixHooks[toFix[--i]] = $.event.mouseHooks;
        }
    }
    var special = $.event.special.mousewheel = {
        version: "3.1.12",
        setup: function() {
            if (this.addEventListener) {
                for (var i = toBind.length; i; ) {
                    this.addEventListener(toBind[--i], handler, false);
                }
            } else {
                this.onmousewheel = handler;
            }
            $.data(this, "mousewheel-line-height", special.getLineHeight(this));
            $.data(this, "mousewheel-page-height", special.getPageHeight(this));
        },
        teardown: function() {
            if (this.removeEventListener) {
                for (var i = toBind.length; i; ) {
                    this.removeEventListener(toBind[--i], handler, false);
                }
            } else {
                this.onmousewheel = null;
            }
            $.removeData(this, "mousewheel-line-height");
            $.removeData(this, "mousewheel-page-height");
        },
        getLineHeight: function(elem) {
            var $elem = $(elem), $parent = $elem["offsetParent" in $.fn ? "offsetParent" : "parent"]();
            if (!$parent.length) {
                $parent = $("body");
            }
            return parseInt($parent.css("fontSize"), 10) || parseInt($elem.css("fontSize"), 10) || 16;
        },
        getPageHeight: function(elem) {
            return $(elem).height();
        },
        settings: {
            adjustOldDeltas: true,
            normalizeOffset: true
        }
    };
    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind("mousewheel", fn) : this.trigger("mousewheel");
        },
        unmousewheel: function(fn) {
            return this.unbind("mousewheel", fn);
        }
    });
    function handler(event) {
        var orgEvent = event || window.event, args = slice.call(arguments, 1), delta = 0, deltaX = 0, deltaY = 0, absDelta = 0, offsetX = 0, offsetY = 0;
        event = $.event.fix(orgEvent);
        event.type = "mousewheel";
        if ("detail" in orgEvent) {
            deltaY = orgEvent.detail * -1;
        }
        if ("wheelDelta" in orgEvent) {
            deltaY = orgEvent.wheelDelta;
        }
        if ("wheelDeltaY" in orgEvent) {
            deltaY = orgEvent.wheelDeltaY;
        }
        if ("wheelDeltaX" in orgEvent) {
            deltaX = orgEvent.wheelDeltaX * -1;
        }
        if ("axis" in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }
        delta = deltaY === 0 ? deltaX : deltaY;
        if ("deltaY" in orgEvent) {
            deltaY = orgEvent.deltaY * -1;
            delta = deltaY;
        }
        if ("deltaX" in orgEvent) {
            deltaX = orgEvent.deltaX;
            if (deltaY === 0) {
                delta = deltaX * -1;
            }
        }
        if (deltaY === 0 && deltaX === 0) {
            return;
        }
        if (orgEvent.deltaMode === 1) {
            var lineHeight = $.data(this, "mousewheel-line-height");
            delta *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if (orgEvent.deltaMode === 2) {
            var pageHeight = $.data(this, "mousewheel-page-height");
            delta *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }
        absDelta = Math.max(Math.abs(deltaY), Math.abs(deltaX));
        if (!lowestDelta || absDelta < lowestDelta) {
            lowestDelta = absDelta;
            if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
                lowestDelta /= 40;
            }
        }
        if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
            delta /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }
        delta = Math[delta >= 1 ? "floor" : "ceil"](delta / lowestDelta);
        deltaX = Math[deltaX >= 1 ? "floor" : "ceil"](deltaX / lowestDelta);
        deltaY = Math[deltaY >= 1 ? "floor" : "ceil"](deltaY / lowestDelta);
        if (special.settings.normalizeOffset && this.getBoundingClientRect) {
            var boundingRect = this.getBoundingClientRect();
            offsetX = event.clientX - boundingRect.left;
            offsetY = event.clientY - boundingRect.top;
        }
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        event.deltaMode = 0;
        args.unshift(event, delta, deltaX, deltaY);
        if (nullLowestDeltaTimeout) {
            clearTimeout(nullLowestDeltaTimeout);
        }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);
        return ($.event.dispatch || $.event.handle).apply(this, args);
    }
    function nullLowestDelta() {
        lowestDelta = null;
    }
    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        return special.settings.adjustOldDeltas && orgEvent.type === "mousewheel" && absDelta % 120 === 0;
    }
});

(function($) {
    $.fn.unveil = function(threshold, callback) {
        var $w = $(window), th = threshold || 0, retina = window.devicePixelRatio > 1, attrib = retina ? "data-src-retina" : "data-src", images = this, loaded;
        this.one("unveil", function() {
            var source = this.getAttribute(attrib);
            source = source || this.getAttribute("data-src");
            if (source) {
                this.setAttribute("src", source);
                if (typeof callback === "function") callback.call(this);
            }
        });
        function unveil() {
            var inview = images.filter(function() {
                var $e = $(this);
                if ($e.is(":hidden")) return;
                var wt = $w.scrollTop(), wb = wt + $w.height(), et = $e.offset().top, eb = et + $e.height();
                return eb >= wt - th && et <= wb + th;
            });
            loaded = inview.trigger("unveil");
            images = images.not(loaded);
        }
        $w.on("scroll.unveil resize.unveil lookup.unveil", unveil);
        unveil();
        return this;
    };
})(window.jQuery || window.Zepto);

(function(factory) {
    "use strict";
    if (typeof define === "function" && define.amd) {
        define([ "jquery" ], factory);
    } else if (typeof module !== "undefined" && module.exports) {
        module.exports = factory(require("jquery"));
    } else {
        factory(jQuery);
    }
})(function($) {
    var _previousResizeWidth = -1, _updateTimeout = -1;
    var _parse = function(value) {
        return parseFloat(value) || 0;
    };
    var _rows = function(elements) {
        var tolerance = 1, $elements = $(elements), lastTop = null, rows = [];
        $elements.each(function() {
            var $that = $(this), top = $that.offset().top - _parse($that.css("margin-top")), lastRow = rows.length > 0 ? rows[rows.length - 1] : null;
            if (lastRow === null) {
                rows.push($that);
            } else {
                if (Math.floor(Math.abs(lastTop - top)) <= tolerance) {
                    rows[rows.length - 1] = lastRow.add($that);
                } else {
                    rows.push($that);
                }
            }
            lastTop = top;
        });
        return rows;
    };
    var _parseOptions = function(options) {
        var opts = {
            byRow: true,
            property: "height",
            target: null,
            remove: false
        };
        if (typeof options === "object") {
            return $.extend(opts, options);
        }
        if (typeof options === "boolean") {
            opts.byRow = options;
        } else if (options === "remove") {
            opts.remove = true;
        }
        return opts;
    };
    var matchHeight = $.fn.matchHeight = function(options) {
        var opts = _parseOptions(options);
        if (opts.remove) {
            var that = this;
            this.css(opts.property, "");
            $.each(matchHeight._groups, function(key, group) {
                group.elements = group.elements.not(that);
            });
            return this;
        }
        if (this.length <= 1 && !opts.target) {
            return this;
        }
        matchHeight._groups.push({
            elements: this,
            options: opts
        });
        matchHeight._apply(this, opts);
        return this;
    };
    matchHeight.version = "master";
    matchHeight._groups = [];
    matchHeight._throttle = 80;
    matchHeight._maintainScroll = false;
    matchHeight._beforeUpdate = null;
    matchHeight._afterUpdate = null;
    matchHeight._rows = _rows;
    matchHeight._parse = _parse;
    matchHeight._parseOptions = _parseOptions;
    matchHeight._apply = function(elements, options) {
        var opts = _parseOptions(options), $elements = $(elements), rows = [ $elements ];
        var scrollTop = $(window).scrollTop(), htmlHeight = $("html").outerHeight(true);
        var $hiddenParents = $elements.parents().filter(":hidden");
        $hiddenParents.each(function() {
            var $that = $(this);
            $that.data("style-cache", $that.attr("style"));
        });
        $hiddenParents.css("display", "block");
        if (opts.byRow && !opts.target) {
            $elements.each(function() {
                var $that = $(this), display = $that.css("display");
                if (display !== "inline-block" && display !== "flex" && display !== "inline-flex") {
                    display = "block";
                }
                $that.data("style-cache", $that.attr("style"));
                $that.css({
                    display: display,
                    "padding-top": "0",
                    "padding-bottom": "0",
                    "margin-top": "0",
                    "margin-bottom": "0",
                    "border-top-width": "0",
                    "border-bottom-width": "0",
                    height: "100px",
                    overflow: "hidden"
                });
            });
            rows = _rows($elements);
            $elements.each(function() {
                var $that = $(this);
                $that.attr("style", $that.data("style-cache") || "");
            });
        }
        $.each(rows, function(key, row) {
            var $row = $(row), targetHeight = 0;
            if (!opts.target) {
                if (opts.byRow && $row.length <= 1) {
                    $row.css(opts.property, "");
                    return;
                }
                $row.each(function() {
                    var $that = $(this), style = $that.attr("style"), display = $that.css("display");
                    if (display !== "inline-block" && display !== "flex" && display !== "inline-flex") {
                        display = "block";
                    }
                    var css = {
                        display: display
                    };
                    css[opts.property] = "";
                    $that.css(css);
                    if ($that.outerHeight(false) > targetHeight) {
                        targetHeight = $that.outerHeight(false);
                    }
                    if (style) {
                        $that.attr("style", style);
                    } else {
                        $that.css("display", "");
                    }
                });
            } else {
                targetHeight = opts.target.outerHeight(false);
            }
            $row.each(function() {
                var $that = $(this), verticalPadding = 0;
                if (opts.target && $that.is(opts.target)) {
                    return;
                }
                if ($that.css("box-sizing") !== "border-box") {
                    verticalPadding += _parse($that.css("border-top-width")) + _parse($that.css("border-bottom-width"));
                    verticalPadding += _parse($that.css("padding-top")) + _parse($that.css("padding-bottom"));
                }
                $that.css(opts.property, targetHeight - verticalPadding + "px");
            });
        });
        $hiddenParents.each(function() {
            var $that = $(this);
            $that.attr("style", $that.data("style-cache") || null);
        });
        if (matchHeight._maintainScroll) {
            $(window).scrollTop(scrollTop / htmlHeight * $("html").outerHeight(true));
        }
        return this;
    };
    matchHeight._applyDataApi = function() {
        var groups = {};
        $("[data-match-height], [data-mh]").each(function() {
            var $this = $(this), groupId = $this.attr("data-mh") || $this.attr("data-match-height");
            if (groupId in groups) {
                groups[groupId] = groups[groupId].add($this);
            } else {
                groups[groupId] = $this;
            }
        });
        $.each(groups, function() {
            this.matchHeight(true);
        });
    };
    var _update = function(event) {
        if (matchHeight._beforeUpdate) {
            matchHeight._beforeUpdate(event, matchHeight._groups);
        }
        $.each(matchHeight._groups, function() {
            matchHeight._apply(this.elements, this.options);
        });
        if (matchHeight._afterUpdate) {
            matchHeight._afterUpdate(event, matchHeight._groups);
        }
    };
    matchHeight._update = function(throttle, event) {
        if (event && event.type === "resize") {
            var windowWidth = $(window).width();
            if (windowWidth === _previousResizeWidth) {
                return;
            }
            _previousResizeWidth = windowWidth;
        }
        if (!throttle) {
            _update(event);
        } else if (_updateTimeout === -1) {
            _updateTimeout = setTimeout(function() {
                _update(event);
                _updateTimeout = -1;
            }, matchHeight._throttle);
        }
    };
    $(matchHeight._applyDataApi);
    var on = $.fn.on ? "on" : "bind";
    $(window)[on]("load", function(event) {
        matchHeight._update(false, event);
    });
    $(window)[on]("resize orientationchange", function(event) {
        matchHeight._update(true, event);
    });
});

!function(i) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], i) : "undefined" != typeof exports ? module.exports = i(require("jquery")) : i(jQuery);
}(function(i) {
    "use strict";
    var e = window.Slick || {};
    (e = function() {
        var e = 0;
        return function(t, o) {
            var s, n = this;
            n.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: i(t),
                appendDots: i(t),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function(e, t) {
                    return i('<button type="button" />').text(t + 1);
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                edgeFriction: .35,
                fade: !1,
                focusOnSelect: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                mobileFirst: !1,
                pauseOnHover: !0,
                pauseOnFocus: !0,
                pauseOnDotsHover: !1,
                respondTo: "window",
                responsive: null,
                rows: 1,
                rtl: !1,
                slide: "",
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                useTransform: !0,
                variableWidth: !1,
                vertical: !1,
                verticalSwiping: !1,
                waitForAnimate: !0,
                zIndex: 1e3
            }, n.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: !1,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                swiping: !1,
                $list: null,
                touchObject: {},
                transformsEnabled: !1,
                unslicked: !1
            }, i.extend(n, n.initials), n.activeBreakpoint = null, n.animType = null, n.animProp = null, 
            n.breakpoints = [], n.breakpointSettings = [], n.cssTransitions = !1, n.focussed = !1, 
            n.interrupted = !1, n.hidden = "hidden", n.paused = !0, n.positionProp = null, n.respondTo = null, 
            n.rowCount = 1, n.shouldClick = !0, n.$slider = i(t), n.$slidesCache = null, n.transformType = null, 
            n.transitionType = null, n.visibilityChange = "visibilitychange", n.windowWidth = 0, 
            n.windowTimer = null, s = i(t).data("slick") || {}, n.options = i.extend({}, n.defaults, o, s), 
            n.currentSlide = n.options.initialSlide, n.originalSettings = n.options, void 0 !== document.mozHidden ? (n.hidden = "mozHidden", 
            n.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (n.hidden = "webkitHidden", 
            n.visibilityChange = "webkitvisibilitychange"), n.autoPlay = i.proxy(n.autoPlay, n), 
            n.autoPlayClear = i.proxy(n.autoPlayClear, n), n.autoPlayIterator = i.proxy(n.autoPlayIterator, n), 
            n.changeSlide = i.proxy(n.changeSlide, n), n.clickHandler = i.proxy(n.clickHandler, n), 
            n.selectHandler = i.proxy(n.selectHandler, n), n.setPosition = i.proxy(n.setPosition, n), 
            n.swipeHandler = i.proxy(n.swipeHandler, n), n.dragHandler = i.proxy(n.dragHandler, n), 
            n.keyHandler = i.proxy(n.keyHandler, n), n.instanceUid = e++, n.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, 
            n.registerBreakpoints(), n.init(!0);
        };
    }()).prototype.activateADA = function() {
        this.$slideTrack.find(".slick-active").attr({
            "aria-hidden": "false"
        }).find("a, input, button, select").attr({
            tabindex: "0"
        });
    }, e.prototype.addSlide = e.prototype.slickAdd = function(e, t, o) {
        var s = this;
        if ("boolean" == typeof t) o = t, t = null; else if (t < 0 || t >= s.slideCount) return !1;
        s.unload(), "number" == typeof t ? 0 === t && 0 === s.$slides.length ? i(e).appendTo(s.$slideTrack) : o ? i(e).insertBefore(s.$slides.eq(t)) : i(e).insertAfter(s.$slides.eq(t)) : !0 === o ? i(e).prependTo(s.$slideTrack) : i(e).appendTo(s.$slideTrack), 
        s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), 
        s.$slideTrack.append(s.$slides), s.$slides.each(function(e, t) {
            i(t).attr("data-slick-index", e);
        }), s.$slidesCache = s.$slides, s.reinit();
    }, e.prototype.animateHeight = function() {
        var i = this;
        if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
            var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
            i.$list.animate({
                height: e
            }, i.options.speed);
        }
    }, e.prototype.animateSlide = function(e, t) {
        var o = {}, s = this;
        s.animateHeight(), !0 === s.options.rtl && !1 === s.options.vertical && (e = -e), 
        !1 === s.transformsEnabled ? !1 === s.options.vertical ? s.$slideTrack.animate({
            left: e
        }, s.options.speed, s.options.easing, t) : s.$slideTrack.animate({
            top: e
        }, s.options.speed, s.options.easing, t) : !1 === s.cssTransitions ? (!0 === s.options.rtl && (s.currentLeft = -s.currentLeft), 
        i({
            animStart: s.currentLeft
        }).animate({
            animStart: e
        }, {
            duration: s.options.speed,
            easing: s.options.easing,
            step: function(i) {
                i = Math.ceil(i), !1 === s.options.vertical ? (o[s.animType] = "translate(" + i + "px, 0px)", 
                s.$slideTrack.css(o)) : (o[s.animType] = "translate(0px," + i + "px)", s.$slideTrack.css(o));
            },
            complete: function() {
                t && t.call();
            }
        })) : (s.applyTransition(), e = Math.ceil(e), !1 === s.options.vertical ? o[s.animType] = "translate3d(" + e + "px, 0px, 0px)" : o[s.animType] = "translate3d(0px," + e + "px, 0px)", 
        s.$slideTrack.css(o), t && setTimeout(function() {
            s.disableTransition(), t.call();
        }, s.options.speed));
    }, e.prototype.getNavTarget = function() {
        var e = this, t = e.options.asNavFor;
        return t && null !== t && (t = i(t).not(e.$slider)), t;
    }, e.prototype.asNavFor = function(e) {
        var t = this.getNavTarget();
        null !== t && "object" == typeof t && t.each(function() {
            var t = i(this).slick("getSlick");
            t.unslicked || t.slideHandler(e, !0);
        });
    }, e.prototype.applyTransition = function(i) {
        var e = this, t = {};
        !1 === e.options.fade ? t[e.transitionType] = e.transformType + " " + e.options.speed + "ms " + e.options.cssEase : t[e.transitionType] = "opacity " + e.options.speed + "ms " + e.options.cssEase, 
        !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t);
    }, e.prototype.autoPlay = function() {
        var i = this;
        i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed));
    }, e.prototype.autoPlayClear = function() {
        var i = this;
        i.autoPlayTimer && clearInterval(i.autoPlayTimer);
    }, e.prototype.autoPlayIterator = function() {
        var i = this, e = i.currentSlide + i.options.slidesToScroll;
        i.paused || i.interrupted || i.focussed || (!1 === i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, 
        i.currentSlide - 1 == 0 && (i.direction = 1))), i.slideHandler(e));
    }, e.prototype.buildArrows = function() {
        var e = this;
        !0 === e.options.arrows && (e.$prevArrow = i(e.options.prevArrow).addClass("slick-arrow"), 
        e.$nextArrow = i(e.options.nextArrow).addClass("slick-arrow"), e.slideCount > e.options.slidesToShow ? (e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), 
        e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.prependTo(e.options.appendArrows), 
        e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.appendTo(e.options.appendArrows), 
        !0 !== e.options.infinite && e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }));
    }, e.prototype.buildDots = function() {
        var e, t, o = this;
        if (!0 === o.options.dots) {
            for (o.$slider.addClass("slick-dotted"), t = i("<ul />").addClass(o.options.dotsClass), 
            e = 0; e <= o.getDotCount(); e += 1) t.append(i("<li />").append(o.options.customPaging.call(this, o, e)));
            o.$dots = t.appendTo(o.options.appendDots), o.$dots.find("li").first().addClass("slick-active");
        }
    }, e.prototype.buildOut = function() {
        var e = this;
        e.$slides = e.$slider.children(e.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), 
        e.slideCount = e.$slides.length, e.$slides.each(function(e, t) {
            i(t).attr("data-slick-index", e).data("originalStyling", i(t).attr("style") || "");
        }), e.$slider.addClass("slick-slider"), e.$slideTrack = 0 === e.slideCount ? i('<div class="slick-track"/>').appendTo(e.$slider) : e.$slides.wrapAll('<div class="slick-track"/>').parent(), 
        e.$list = e.$slideTrack.wrap('<div class="slick-list"/>').parent(), e.$slideTrack.css("opacity", 0), 
        !0 !== e.options.centerMode && !0 !== e.options.swipeToSlide || (e.options.slidesToScroll = 1), 
        i("img[data-lazy]", e.$slider).not("[src]").addClass("slick-loading"), e.setupInfinite(), 
        e.buildArrows(), e.buildDots(), e.updateDots(), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), 
        !0 === e.options.draggable && e.$list.addClass("draggable");
    }, e.prototype.buildRows = function() {
        var i, e, t, o, s, n, r, l = this;
        if (o = document.createDocumentFragment(), n = l.$slider.children(), l.options.rows > 1) {
            for (r = l.options.slidesPerRow * l.options.rows, s = Math.ceil(n.length / r), i = 0; i < s; i++) {
                var d = document.createElement("div");
                for (e = 0; e < l.options.rows; e++) {
                    var a = document.createElement("div");
                    for (t = 0; t < l.options.slidesPerRow; t++) {
                        var c = i * r + (e * l.options.slidesPerRow + t);
                        n.get(c) && a.appendChild(n.get(c));
                    }
                    d.appendChild(a);
                }
                o.appendChild(d);
            }
            l.$slider.empty().append(o), l.$slider.children().children().children().css({
                width: 100 / l.options.slidesPerRow + "%",
                display: "inline-block"
            });
        }
    }, e.prototype.checkResponsive = function(e, t) {
        var o, s, n, r = this, l = !1, d = r.$slider.width(), a = window.innerWidth || i(window).width();
        if ("window" === r.respondTo ? n = a : "slider" === r.respondTo ? n = d : "min" === r.respondTo && (n = Math.min(a, d)), 
        r.options.responsive && r.options.responsive.length && null !== r.options.responsive) {
            s = null;
            for (o in r.breakpoints) r.breakpoints.hasOwnProperty(o) && (!1 === r.originalSettings.mobileFirst ? n < r.breakpoints[o] && (s = r.breakpoints[o]) : n > r.breakpoints[o] && (s = r.breakpoints[o]));
            null !== s ? null !== r.activeBreakpoint ? (s !== r.activeBreakpoint || t) && (r.activeBreakpoint = s, 
            "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), 
            !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : (r.activeBreakpoint = s, 
            "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), 
            !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : null !== r.activeBreakpoint && (r.activeBreakpoint = null, 
            r.options = r.originalSettings, !0 === e && (r.currentSlide = r.options.initialSlide), 
            r.refresh(e), l = s), e || !1 === l || r.$slider.trigger("breakpoint", [ r, l ]);
        }
    }, e.prototype.changeSlide = function(e, t) {
        var o, s, n, r = this, l = i(e.currentTarget);
        switch (l.is("a") && e.preventDefault(), l.is("li") || (l = l.closest("li")), n = r.slideCount % r.options.slidesToScroll != 0, 
        o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll, e.data.message) {
          case "previous":
            s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t);
            break;

          case "next":
            s = 0 === o ? r.options.slidesToScroll : o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t);
            break;

          case "index":
            var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll;
            r.slideHandler(r.checkNavigable(d), !1, t), l.children().trigger("focus");
            break;

          default:
            return;
        }
    }, e.prototype.checkNavigable = function(i) {
        var e, t;
        if (e = this.getNavigableIndexes(), t = 0, i > e[e.length - 1]) i = e[e.length - 1]; else for (var o in e) {
            if (i < e[o]) {
                i = t;
                break;
            }
            t = e[o];
        }
        return i;
    }, e.prototype.cleanUpEvents = function() {
        var e = this;
        e.options.dots && null !== e.$dots && (i("li", e.$dots).off("click.slick", e.changeSlide).off("mouseenter.slick", i.proxy(e.interrupt, e, !0)).off("mouseleave.slick", i.proxy(e.interrupt, e, !1)), 
        !0 === e.options.accessibility && e.$dots.off("keydown.slick", e.keyHandler)), e.$slider.off("focus.slick blur.slick"), 
        !0 === e.options.arrows && e.slideCount > e.options.slidesToShow && (e.$prevArrow && e.$prevArrow.off("click.slick", e.changeSlide), 
        e.$nextArrow && e.$nextArrow.off("click.slick", e.changeSlide), !0 === e.options.accessibility && (e.$prevArrow.off("keydown.slick", e.keyHandler), 
        e.$nextArrow.off("keydown.slick", e.keyHandler))), e.$list.off("touchstart.slick mousedown.slick", e.swipeHandler), 
        e.$list.off("touchmove.slick mousemove.slick", e.swipeHandler), e.$list.off("touchend.slick mouseup.slick", e.swipeHandler), 
        e.$list.off("touchcancel.slick mouseleave.slick", e.swipeHandler), e.$list.off("click.slick", e.clickHandler), 
        i(document).off(e.visibilityChange, e.visibility), e.cleanUpSlideEvents(), !0 === e.options.accessibility && e.$list.off("keydown.slick", e.keyHandler), 
        !0 === e.options.focusOnSelect && i(e.$slideTrack).children().off("click.slick", e.selectHandler), 
        i(window).off("orientationchange.slick.slick-" + e.instanceUid, e.orientationChange), 
        i(window).off("resize.slick.slick-" + e.instanceUid, e.resize), i("[draggable!=true]", e.$slideTrack).off("dragstart", e.preventDefault), 
        i(window).off("load.slick.slick-" + e.instanceUid, e.setPosition);
    }, e.prototype.cleanUpSlideEvents = function() {
        var e = this;
        e.$list.off("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.off("mouseleave.slick", i.proxy(e.interrupt, e, !1));
    }, e.prototype.cleanUpRows = function() {
        var i, e = this;
        e.options.rows > 1 && ((i = e.$slides.children().children()).removeAttr("style"), 
        e.$slider.empty().append(i));
    }, e.prototype.clickHandler = function(i) {
        !1 === this.shouldClick && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault());
    }, e.prototype.destroy = function(e) {
        var t = this;
        t.autoPlayClear(), t.touchObject = {}, t.cleanUpEvents(), i(".slick-cloned", t.$slider).detach(), 
        t.$dots && t.$dots.remove(), t.$prevArrow && t.$prevArrow.length && (t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.remove()), t.$nextArrow && t.$nextArrow.length && (t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.remove()), t.$slides && (t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
            i(this).attr("style", i(this).data("originalStyling"));
        }), t.$slideTrack.children(this.options.slide).detach(), t.$slideTrack.detach(), 
        t.$list.detach(), t.$slider.append(t.$slides)), t.cleanUpRows(), t.$slider.removeClass("slick-slider"), 
        t.$slider.removeClass("slick-initialized"), t.$slider.removeClass("slick-dotted"), 
        t.unslicked = !0, e || t.$slider.trigger("destroy", [ t ]);
    }, e.prototype.disableTransition = function(i) {
        var e = this, t = {};
        t[e.transitionType] = "", !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t);
    }, e.prototype.fadeSlide = function(i, e) {
        var t = this;
        !1 === t.cssTransitions ? (t.$slides.eq(i).css({
            zIndex: t.options.zIndex
        }), t.$slides.eq(i).animate({
            opacity: 1
        }, t.options.speed, t.options.easing, e)) : (t.applyTransition(i), t.$slides.eq(i).css({
            opacity: 1,
            zIndex: t.options.zIndex
        }), e && setTimeout(function() {
            t.disableTransition(i), e.call();
        }, t.options.speed));
    }, e.prototype.fadeSlideOut = function(i) {
        var e = this;
        !1 === e.cssTransitions ? e.$slides.eq(i).animate({
            opacity: 0,
            zIndex: e.options.zIndex - 2
        }, e.options.speed, e.options.easing) : (e.applyTransition(i), e.$slides.eq(i).css({
            opacity: 0,
            zIndex: e.options.zIndex - 2
        }));
    }, e.prototype.filterSlides = e.prototype.slickFilter = function(i) {
        var e = this;
        null !== i && (e.$slidesCache = e.$slides, e.unload(), e.$slideTrack.children(this.options.slide).detach(), 
        e.$slidesCache.filter(i).appendTo(e.$slideTrack), e.reinit());
    }, e.prototype.focusHandler = function() {
        var e = this;
        e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function(t) {
            t.stopImmediatePropagation();
            var o = i(this);
            setTimeout(function() {
                e.options.pauseOnFocus && (e.focussed = o.is(":focus"), e.autoPlay());
            }, 0);
        });
    }, e.prototype.getCurrent = e.prototype.slickCurrentSlide = function() {
        return this.currentSlide;
    }, e.prototype.getDotCount = function() {
        var i = this, e = 0, t = 0, o = 0;
        if (!0 === i.options.infinite) if (i.slideCount <= i.options.slidesToShow) ++o; else for (;e < i.slideCount; ) ++o, 
        e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else if (!0 === i.options.centerMode) o = i.slideCount; else if (i.options.asNavFor) for (;e < i.slideCount; ) ++o, 
        e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else o = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll);
        return o - 1;
    }, e.prototype.getLeft = function(i) {
        var e, t, o, s = this, n = 0;
        return s.slideOffset = 0, t = s.$slides.first().outerHeight(!0), !0 === s.options.infinite ? (s.slideCount > s.options.slidesToShow && (s.slideOffset = s.slideWidth * s.options.slidesToShow * -1, 
        n = t * s.options.slidesToShow * -1), s.slideCount % s.options.slidesToScroll != 0 && i + s.options.slidesToScroll > s.slideCount && s.slideCount > s.options.slidesToShow && (i > s.slideCount ? (s.slideOffset = (s.options.slidesToShow - (i - s.slideCount)) * s.slideWidth * -1, 
        n = (s.options.slidesToShow - (i - s.slideCount)) * t * -1) : (s.slideOffset = s.slideCount % s.options.slidesToScroll * s.slideWidth * -1, 
        n = s.slideCount % s.options.slidesToScroll * t * -1))) : i + s.options.slidesToShow > s.slideCount && (s.slideOffset = (i + s.options.slidesToShow - s.slideCount) * s.slideWidth, 
        n = (i + s.options.slidesToShow - s.slideCount) * t), s.slideCount <= s.options.slidesToShow && (s.slideOffset = 0, 
        n = 0), !0 === s.options.centerMode && s.slideCount <= s.options.slidesToShow ? s.slideOffset = s.slideWidth * Math.floor(s.options.slidesToShow) / 2 - s.slideWidth * s.slideCount / 2 : !0 === s.options.centerMode && !0 === s.options.infinite ? s.slideOffset += s.slideWidth * Math.floor(s.options.slidesToShow / 2) - s.slideWidth : !0 === s.options.centerMode && (s.slideOffset = 0, 
        s.slideOffset += s.slideWidth * Math.floor(s.options.slidesToShow / 2)), e = !1 === s.options.vertical ? i * s.slideWidth * -1 + s.slideOffset : i * t * -1 + n, 
        !0 === s.options.variableWidth && (o = s.slideCount <= s.options.slidesToShow || !1 === s.options.infinite ? s.$slideTrack.children(".slick-slide").eq(i) : s.$slideTrack.children(".slick-slide").eq(i + s.options.slidesToShow), 
        e = !0 === s.options.rtl ? o[0] ? -1 * (s.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, 
        !0 === s.options.centerMode && (o = s.slideCount <= s.options.slidesToShow || !1 === s.options.infinite ? s.$slideTrack.children(".slick-slide").eq(i) : s.$slideTrack.children(".slick-slide").eq(i + s.options.slidesToShow + 1), 
        e = !0 === s.options.rtl ? o[0] ? -1 * (s.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, 
        e += (s.$list.width() - o.outerWidth()) / 2)), e;
    }, e.prototype.getOption = e.prototype.slickGetOption = function(i) {
        return this.options[i];
    }, e.prototype.getNavigableIndexes = function() {
        var i, e = this, t = 0, o = 0, s = [];
        for (!1 === e.options.infinite ? i = e.slideCount : (t = -1 * e.options.slidesToScroll, 
        o = -1 * e.options.slidesToScroll, i = 2 * e.slideCount); t < i; ) s.push(t), t = o + e.options.slidesToScroll, 
        o += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
        return s;
    }, e.prototype.getSlick = function() {
        return this;
    }, e.prototype.getSlideCount = function() {
        var e, t, o = this;
        return t = !0 === o.options.centerMode ? o.slideWidth * Math.floor(o.options.slidesToShow / 2) : 0, 
        !0 === o.options.swipeToSlide ? (o.$slideTrack.find(".slick-slide").each(function(s, n) {
            if (n.offsetLeft - t + i(n).outerWidth() / 2 > -1 * o.swipeLeft) return e = n, !1;
        }), Math.abs(i(e).attr("data-slick-index") - o.currentSlide) || 1) : o.options.slidesToScroll;
    }, e.prototype.goTo = e.prototype.slickGoTo = function(i, e) {
        this.changeSlide({
            data: {
                message: "index",
                index: parseInt(i)
            }
        }, e);
    }, e.prototype.init = function(e) {
        var t = this;
        i(t.$slider).hasClass("slick-initialized") || (i(t.$slider).addClass("slick-initialized"), 
        t.buildRows(), t.buildOut(), t.setProps(), t.startLoad(), t.loadSlider(), t.initializeEvents(), 
        t.updateArrows(), t.updateDots(), t.checkResponsive(!0), t.focusHandler()), e && t.$slider.trigger("init", [ t ]), 
        !0 === t.options.accessibility && t.initADA(), t.options.autoplay && (t.paused = !1, 
        t.autoPlay());
    }, e.prototype.initADA = function() {
        var e = this, t = Math.ceil(e.slideCount / e.options.slidesToShow), o = e.getNavigableIndexes().filter(function(i) {
            return i >= 0 && i < e.slideCount;
        });
        e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({
            tabindex: "-1"
        }), null !== e.$dots && (e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t) {
            var s = o.indexOf(t);
            i(this).attr({
                role: "tabpanel",
                id: "slick-slide" + e.instanceUid + t,
                tabindex: -1
            }), -1 !== s && i(this).attr({
                "aria-describedby": "slick-slide-control" + e.instanceUid + s
            });
        }), e.$dots.attr("role", "tablist").find("li").each(function(s) {
            var n = o[s];
            i(this).attr({
                role: "presentation"
            }), i(this).find("button").first().attr({
                role: "tab",
                id: "slick-slide-control" + e.instanceUid + s,
                "aria-controls": "slick-slide" + e.instanceUid + n,
                "aria-label": s + 1 + " of " + t,
                "aria-selected": null,
                tabindex: "-1"
            });
        }).eq(e.currentSlide).find("button").attr({
            "aria-selected": "true",
            tabindex: "0"
        }).end());
        for (var s = e.currentSlide, n = s + e.options.slidesToShow; s < n; s++) e.$slides.eq(s).attr("tabindex", 0);
        e.activateADA();
    }, e.prototype.initArrowEvents = function() {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off("click.slick").on("click.slick", {
            message: "previous"
        }, i.changeSlide), i.$nextArrow.off("click.slick").on("click.slick", {
            message: "next"
        }, i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow.on("keydown.slick", i.keyHandler), 
        i.$nextArrow.on("keydown.slick", i.keyHandler)));
    }, e.prototype.initDotEvents = function() {
        var e = this;
        !0 === e.options.dots && (i("li", e.$dots).on("click.slick", {
            message: "index"
        }, e.changeSlide), !0 === e.options.accessibility && e.$dots.on("keydown.slick", e.keyHandler)), 
        !0 === e.options.dots && !0 === e.options.pauseOnDotsHover && i("li", e.$dots).on("mouseenter.slick", i.proxy(e.interrupt, e, !0)).on("mouseleave.slick", i.proxy(e.interrupt, e, !1));
    }, e.prototype.initSlideEvents = function() {
        var e = this;
        e.options.pauseOnHover && (e.$list.on("mouseenter.slick", i.proxy(e.interrupt, e, !0)), 
        e.$list.on("mouseleave.slick", i.proxy(e.interrupt, e, !1)));
    }, e.prototype.initializeEvents = function() {
        var e = this;
        e.initArrowEvents(), e.initDotEvents(), e.initSlideEvents(), e.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, e.swipeHandler), e.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, e.swipeHandler), e.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, e.swipeHandler), e.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, e.swipeHandler), e.$list.on("click.slick", e.clickHandler), i(document).on(e.visibilityChange, i.proxy(e.visibility, e)), 
        !0 === e.options.accessibility && e.$list.on("keydown.slick", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler), 
        i(window).on("orientationchange.slick.slick-" + e.instanceUid, i.proxy(e.orientationChange, e)), 
        i(window).on("resize.slick.slick-" + e.instanceUid, i.proxy(e.resize, e)), i("[draggable!=true]", e.$slideTrack).on("dragstart", e.preventDefault), 
        i(window).on("load.slick.slick-" + e.instanceUid, e.setPosition), i(e.setPosition);
    }, e.prototype.initUI = function() {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(), 
        i.$nextArrow.show()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.show();
    }, e.prototype.keyHandler = function(i) {
        var e = this;
        i.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === i.keyCode && !0 === e.options.accessibility ? e.changeSlide({
            data: {
                message: !0 === e.options.rtl ? "next" : "previous"
            }
        }) : 39 === i.keyCode && !0 === e.options.accessibility && e.changeSlide({
            data: {
                message: !0 === e.options.rtl ? "previous" : "next"
            }
        }));
    }, e.prototype.lazyLoad = function() {
        function e(e) {
            i("img[data-lazy]", e).each(function() {
                var e = i(this), t = i(this).attr("data-lazy"), o = i(this).attr("data-srcset"), s = i(this).attr("data-sizes") || n.$slider.attr("data-sizes"), r = document.createElement("img");
                r.onload = function() {
                    e.animate({
                        opacity: 0
                    }, 100, function() {
                        o && (e.attr("srcset", o), s && e.attr("sizes", s)), e.attr("src", t).animate({
                            opacity: 1
                        }, 200, function() {
                            e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading");
                        }), n.$slider.trigger("lazyLoaded", [ n, e, t ]);
                    });
                }, r.onerror = function() {
                    e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
                    n.$slider.trigger("lazyLoadError", [ n, e, t ]);
                }, r.src = t;
            });
        }
        var t, o, s, n = this;
        if (!0 === n.options.centerMode ? !0 === n.options.infinite ? s = (o = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2 : (o = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1)), 
        s = n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) : (o = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide, 
        s = Math.ceil(o + n.options.slidesToShow), !0 === n.options.fade && (o > 0 && o--, 
        s <= n.slideCount && s++)), t = n.$slider.find(".slick-slide").slice(o, s), "anticipated" === n.options.lazyLoad) for (var r = o - 1, l = s, d = n.$slider.find(".slick-slide"), a = 0; a < n.options.slidesToScroll; a++) r < 0 && (r = n.slideCount - 1), 
        t = (t = t.add(d.eq(r))).add(d.eq(l)), r--, l++;
        e(t), n.slideCount <= n.options.slidesToShow ? e(n.$slider.find(".slick-slide")) : n.currentSlide >= n.slideCount - n.options.slidesToShow ? e(n.$slider.find(".slick-cloned").slice(0, n.options.slidesToShow)) : 0 === n.currentSlide && e(n.$slider.find(".slick-cloned").slice(-1 * n.options.slidesToShow));
    }, e.prototype.loadSlider = function() {
        var i = this;
        i.setPosition(), i.$slideTrack.css({
            opacity: 1
        }), i.$slider.removeClass("slick-loading"), i.initUI(), "progressive" === i.options.lazyLoad && i.progressiveLazyLoad();
    }, e.prototype.next = e.prototype.slickNext = function() {
        this.changeSlide({
            data: {
                message: "next"
            }
        });
    }, e.prototype.orientationChange = function() {
        var i = this;
        i.checkResponsive(), i.setPosition();
    }, e.prototype.pause = e.prototype.slickPause = function() {
        var i = this;
        i.autoPlayClear(), i.paused = !0;
    }, e.prototype.play = e.prototype.slickPlay = function() {
        var i = this;
        i.autoPlay(), i.options.autoplay = !0, i.paused = !1, i.focussed = !1, i.interrupted = !1;
    }, e.prototype.postSlide = function(e) {
        var t = this;
        t.unslicked || (t.$slider.trigger("afterChange", [ t, e ]), t.animating = !1, t.slideCount > t.options.slidesToShow && t.setPosition(), 
        t.swipeLeft = null, t.options.autoplay && t.autoPlay(), !0 === t.options.accessibility && (t.initADA(), 
        t.options.autoplay || i(t.$slides.get(t.currentSlide)).attr("tabindex", 0).focus()));
    }, e.prototype.prev = e.prototype.slickPrev = function() {
        this.changeSlide({
            data: {
                message: "previous"
            }
        });
    }, e.prototype.preventDefault = function(i) {
        i.preventDefault();
    }, e.prototype.progressiveLazyLoad = function(e) {
        e = e || 1;
        var t, o, s, n, r, l = this, d = i("img[data-lazy]", l.$slider);
        d.length ? (t = d.first(), o = t.attr("data-lazy"), s = t.attr("data-srcset"), n = t.attr("data-sizes") || l.$slider.attr("data-sizes"), 
        (r = document.createElement("img")).onload = function() {
            s && (t.attr("srcset", s), n && t.attr("sizes", n)), t.attr("src", o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), 
            !0 === l.options.adaptiveHeight && l.setPosition(), l.$slider.trigger("lazyLoaded", [ l, t, o ]), 
            l.progressiveLazyLoad();
        }, r.onerror = function() {
            e < 3 ? setTimeout(function() {
                l.progressiveLazyLoad(e + 1);
            }, 500) : (t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
            l.$slider.trigger("lazyLoadError", [ l, t, o ]), l.progressiveLazyLoad());
        }, r.src = o) : l.$slider.trigger("allImagesLoaded", [ l ]);
    }, e.prototype.refresh = function(e) {
        var t, o, s = this;
        o = s.slideCount - s.options.slidesToShow, !s.options.infinite && s.currentSlide > o && (s.currentSlide = o), 
        s.slideCount <= s.options.slidesToShow && (s.currentSlide = 0), t = s.currentSlide, 
        s.destroy(!0), i.extend(s, s.initials, {
            currentSlide: t
        }), s.init(), e || s.changeSlide({
            data: {
                message: "index",
                index: t
            }
        }, !1);
    }, e.prototype.registerBreakpoints = function() {
        var e, t, o, s = this, n = s.options.responsive || null;
        if ("array" === i.type(n) && n.length) {
            s.respondTo = s.options.respondTo || "window";
            for (e in n) if (o = s.breakpoints.length - 1, n.hasOwnProperty(e)) {
                for (t = n[e].breakpoint; o >= 0; ) s.breakpoints[o] && s.breakpoints[o] === t && s.breakpoints.splice(o, 1), 
                o--;
                s.breakpoints.push(t), s.breakpointSettings[t] = n[e].settings;
            }
            s.breakpoints.sort(function(i, e) {
                return s.options.mobileFirst ? i - e : e - i;
            });
        }
    }, e.prototype.reinit = function() {
        var e = this;
        e.$slides = e.$slideTrack.children(e.options.slide).addClass("slick-slide"), e.slideCount = e.$slides.length, 
        e.currentSlide >= e.slideCount && 0 !== e.currentSlide && (e.currentSlide = e.currentSlide - e.options.slidesToScroll), 
        e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), e.registerBreakpoints(), 
        e.setProps(), e.setupInfinite(), e.buildArrows(), e.updateArrows(), e.initArrowEvents(), 
        e.buildDots(), e.updateDots(), e.initDotEvents(), e.cleanUpSlideEvents(), e.initSlideEvents(), 
        e.checkResponsive(!1, !0), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler), 
        e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), e.setPosition(), 
        e.focusHandler(), e.paused = !e.options.autoplay, e.autoPlay(), e.$slider.trigger("reInit", [ e ]);
    }, e.prototype.resize = function() {
        var e = this;
        i(window).width() !== e.windowWidth && (clearTimeout(e.windowDelay), e.windowDelay = window.setTimeout(function() {
            e.windowWidth = i(window).width(), e.checkResponsive(), e.unslicked || e.setPosition();
        }, 50));
    }, e.prototype.removeSlide = e.prototype.slickRemove = function(i, e, t) {
        var o = this;
        if (i = "boolean" == typeof i ? !0 === (e = i) ? 0 : o.slideCount - 1 : !0 === e ? --i : i, 
        o.slideCount < 1 || i < 0 || i > o.slideCount - 1) return !1;
        o.unload(), !0 === t ? o.$slideTrack.children().remove() : o.$slideTrack.children(this.options.slide).eq(i).remove(), 
        o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), 
        o.$slideTrack.append(o.$slides), o.$slidesCache = o.$slides, o.reinit();
    }, e.prototype.setCSS = function(i) {
        var e, t, o = this, s = {};
        !0 === o.options.rtl && (i = -i), e = "left" == o.positionProp ? Math.ceil(i) + "px" : "0px", 
        t = "top" == o.positionProp ? Math.ceil(i) + "px" : "0px", s[o.positionProp] = i, 
        !1 === o.transformsEnabled ? o.$slideTrack.css(s) : (s = {}, !1 === o.cssTransitions ? (s[o.animType] = "translate(" + e + ", " + t + ")", 
        o.$slideTrack.css(s)) : (s[o.animType] = "translate3d(" + e + ", " + t + ", 0px)", 
        o.$slideTrack.css(s)));
    }, e.prototype.setDimensions = function() {
        var i = this;
        !1 === i.options.vertical ? !0 === i.options.centerMode && i.$list.css({
            padding: "0px " + i.options.centerPadding
        }) : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow), 
        !0 === i.options.centerMode && i.$list.css({
            padding: i.options.centerPadding + " 0px"
        })), i.listWidth = i.$list.width(), i.listHeight = i.$list.height(), !1 === i.options.vertical && !1 === i.options.variableWidth ? (i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow), 
        i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(".slick-slide").length))) : !0 === i.options.variableWidth ? i.$slideTrack.width(5e3 * i.slideCount) : (i.slideWidth = Math.ceil(i.listWidth), 
        i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(".slick-slide").length)));
        var e = i.$slides.first().outerWidth(!0) - i.$slides.first().width();
        !1 === i.options.variableWidth && i.$slideTrack.children(".slick-slide").width(i.slideWidth - e);
    }, e.prototype.setFade = function() {
        var e, t = this;
        t.$slides.each(function(o, s) {
            e = t.slideWidth * o * -1, !0 === t.options.rtl ? i(s).css({
                position: "relative",
                right: e,
                top: 0,
                zIndex: t.options.zIndex - 2,
                opacity: 0
            }) : i(s).css({
                position: "relative",
                left: e,
                top: 0,
                zIndex: t.options.zIndex - 2,
                opacity: 0
            });
        }), t.$slides.eq(t.currentSlide).css({
            zIndex: t.options.zIndex - 1,
            opacity: 1
        });
    }, e.prototype.setHeight = function() {
        var i = this;
        if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
            var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
            i.$list.css("height", e);
        }
    }, e.prototype.setOption = e.prototype.slickSetOption = function() {
        var e, t, o, s, n, r = this, l = !1;
        if ("object" === i.type(arguments[0]) ? (o = arguments[0], l = arguments[1], n = "multiple") : "string" === i.type(arguments[0]) && (o = arguments[0], 
        s = arguments[1], l = arguments[2], "responsive" === arguments[0] && "array" === i.type(arguments[1]) ? n = "responsive" : void 0 !== arguments[1] && (n = "single")), 
        "single" === n) r.options[o] = s; else if ("multiple" === n) i.each(o, function(i, e) {
            r.options[i] = e;
        }); else if ("responsive" === n) for (t in s) if ("array" !== i.type(r.options.responsive)) r.options.responsive = [ s[t] ]; else {
            for (e = r.options.responsive.length - 1; e >= 0; ) r.options.responsive[e].breakpoint === s[t].breakpoint && r.options.responsive.splice(e, 1), 
            e--;
            r.options.responsive.push(s[t]);
        }
        l && (r.unload(), r.reinit());
    }, e.prototype.setPosition = function() {
        var i = this;
        i.setDimensions(), i.setHeight(), !1 === i.options.fade ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(), 
        i.$slider.trigger("setPosition", [ i ]);
    }, e.prototype.setProps = function() {
        var i = this, e = document.body.style;
        i.positionProp = !0 === i.options.vertical ? "top" : "left", "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"), 
        void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || !0 === i.options.useCSS && (i.cssTransitions = !0), 
        i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex), 
        void 0 !== e.OTransform && (i.animType = "OTransform", i.transformType = "-o-transform", 
        i.transitionType = "OTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), 
        void 0 !== e.MozTransform && (i.animType = "MozTransform", i.transformType = "-moz-transform", 
        i.transitionType = "MozTransition", void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)), 
        void 0 !== e.webkitTransform && (i.animType = "webkitTransform", i.transformType = "-webkit-transform", 
        i.transitionType = "webkitTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), 
        void 0 !== e.msTransform && (i.animType = "msTransform", i.transformType = "-ms-transform", 
        i.transitionType = "msTransition", void 0 === e.msTransform && (i.animType = !1)), 
        void 0 !== e.transform && !1 !== i.animType && (i.animType = "transform", i.transformType = "transform", 
        i.transitionType = "transition"), i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType;
    }, e.prototype.setSlideClasses = function(i) {
        var e, t, o, s, n = this;
        t = n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), 
        n.$slides.eq(i).addClass("slick-current"), !0 === n.options.centerMode ? (e = Math.floor(n.options.slidesToShow / 2), 
        !0 === n.options.infinite && (i >= e && i <= n.slideCount - 1 - e ? n.$slides.slice(i - e, i + e + 1).addClass("slick-active").attr("aria-hidden", "false") : (o = n.options.slidesToShow + i, 
        t.slice(o - e + 1, o + e + 2).addClass("slick-active").attr("aria-hidden", "false")), 
        0 === i ? t.eq(t.length - 1 - n.options.slidesToShow).addClass("slick-center") : i === n.slideCount - 1 && t.eq(n.options.slidesToShow).addClass("slick-center")), 
        n.$slides.eq(i).addClass("slick-center")) : i >= 0 && i <= n.slideCount - n.options.slidesToShow ? n.$slides.slice(i, i + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : t.length <= n.options.slidesToShow ? t.addClass("slick-active").attr("aria-hidden", "false") : (s = n.slideCount % n.options.slidesToShow, 
        o = !0 === n.options.infinite ? n.options.slidesToShow + i : i, n.options.slidesToShow == n.options.slidesToScroll && n.slideCount - i < n.options.slidesToShow ? t.slice(o - (n.options.slidesToShow - s), o + s).addClass("slick-active").attr("aria-hidden", "false") : t.slice(o, o + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), 
        "ondemand" !== n.options.lazyLoad && "anticipated" !== n.options.lazyLoad || n.lazyLoad();
    }, e.prototype.setupInfinite = function() {
        var e, t, o, s = this;
        if (!0 === s.options.fade && (s.options.centerMode = !1), !0 === s.options.infinite && !1 === s.options.fade && (t = null, 
        s.slideCount > s.options.slidesToShow)) {
            for (o = !0 === s.options.centerMode ? s.options.slidesToShow + 1 : s.options.slidesToShow, 
            e = s.slideCount; e > s.slideCount - o; e -= 1) t = e - 1, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t - s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");
            for (e = 0; e < o + s.slideCount; e += 1) t = e, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t + s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");
            s.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                i(this).attr("id", "");
            });
        }
    }, e.prototype.interrupt = function(i) {
        var e = this;
        i || e.autoPlay(), e.interrupted = i;
    }, e.prototype.selectHandler = function(e) {
        var t = this, o = i(e.target).is(".slick-slide") ? i(e.target) : i(e.target).parents(".slick-slide"), s = parseInt(o.attr("data-slick-index"));
        s || (s = 0), t.slideCount <= t.options.slidesToShow ? t.slideHandler(s, !1, !0) : t.slideHandler(s);
    }, e.prototype.slideHandler = function(i, e, t) {
        var o, s, n, r, l, d = null, a = this;
        if (e = e || !1, !(!0 === a.animating && !0 === a.options.waitForAnimate || !0 === a.options.fade && a.currentSlide === i)) if (!1 === e && a.asNavFor(i), 
        o = i, d = a.getLeft(o), r = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft, 
        !1 === a.options.infinite && !1 === a.options.centerMode && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, 
        !0 !== t ? a.animateSlide(r, function() {
            a.postSlide(o);
        }) : a.postSlide(o)); else if (!1 === a.options.infinite && !0 === a.options.centerMode && (i < 0 || i > a.slideCount - a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, 
        !0 !== t ? a.animateSlide(r, function() {
            a.postSlide(o);
        }) : a.postSlide(o)); else {
            if (a.options.autoplay && clearInterval(a.autoPlayTimer), s = o < 0 ? a.slideCount % a.options.slidesToScroll != 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + o : o >= a.slideCount ? a.slideCount % a.options.slidesToScroll != 0 ? 0 : o - a.slideCount : o, 
            a.animating = !0, a.$slider.trigger("beforeChange", [ a, a.currentSlide, s ]), n = a.currentSlide, 
            a.currentSlide = s, a.setSlideClasses(a.currentSlide), a.options.asNavFor && (l = (l = a.getNavTarget()).slick("getSlick")).slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide), 
            a.updateDots(), a.updateArrows(), !0 === a.options.fade) return !0 !== t ? (a.fadeSlideOut(n), 
            a.fadeSlide(s, function() {
                a.postSlide(s);
            })) : a.postSlide(s), void a.animateHeight();
            !0 !== t ? a.animateSlide(d, function() {
                a.postSlide(s);
            }) : a.postSlide(s);
        }
    }, e.prototype.startLoad = function() {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(), 
        i.$nextArrow.hide()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.hide(), 
        i.$slider.addClass("slick-loading");
    }, e.prototype.swipeDirection = function() {
        var i, e, t, o, s = this;
        return i = s.touchObject.startX - s.touchObject.curX, e = s.touchObject.startY - s.touchObject.curY, 
        t = Math.atan2(e, i), (o = Math.round(180 * t / Math.PI)) < 0 && (o = 360 - Math.abs(o)), 
        o <= 45 && o >= 0 ? !1 === s.options.rtl ? "left" : "right" : o <= 360 && o >= 315 ? !1 === s.options.rtl ? "left" : "right" : o >= 135 && o <= 225 ? !1 === s.options.rtl ? "right" : "left" : !0 === s.options.verticalSwiping ? o >= 35 && o <= 135 ? "down" : "up" : "vertical";
    }, e.prototype.swipeEnd = function(i) {
        var e, t, o = this;
        if (o.dragging = !1, o.swiping = !1, o.scrolling) return o.scrolling = !1, !1;
        if (o.interrupted = !1, o.shouldClick = !(o.touchObject.swipeLength > 10), void 0 === o.touchObject.curX) return !1;
        if (!0 === o.touchObject.edgeHit && o.$slider.trigger("edge", [ o, o.swipeDirection() ]), 
        o.touchObject.swipeLength >= o.touchObject.minSwipe) {
            switch (t = o.swipeDirection()) {
              case "left":
              case "down":
                e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide + o.getSlideCount()) : o.currentSlide + o.getSlideCount(), 
                o.currentDirection = 0;
                break;

              case "right":
              case "up":
                e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide - o.getSlideCount()) : o.currentSlide - o.getSlideCount(), 
                o.currentDirection = 1;
            }
            "vertical" != t && (o.slideHandler(e), o.touchObject = {}, o.$slider.trigger("swipe", [ o, t ]));
        } else o.touchObject.startX !== o.touchObject.curX && (o.slideHandler(o.currentSlide), 
        o.touchObject = {});
    }, e.prototype.swipeHandler = function(i) {
        var e = this;
        if (!(!1 === e.options.swipe || "ontouchend" in document && !1 === e.options.swipe || !1 === e.options.draggable && -1 !== i.type.indexOf("mouse"))) switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1, 
        e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, !0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), 
        i.data.action) {
          case "start":
            e.swipeStart(i);
            break;

          case "move":
            e.swipeMove(i);
            break;

          case "end":
            e.swipeEnd(i);
        }
    }, e.prototype.swipeMove = function(i) {
        var e, t, o, s, n, r, l = this;
        return n = void 0 !== i.originalEvent ? i.originalEvent.touches : null, !(!l.dragging || l.scrolling || n && 1 !== n.length) && (e = l.getLeft(l.currentSlide), 
        l.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX, l.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY, 
        l.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(l.touchObject.curX - l.touchObject.startX, 2))), 
        r = Math.round(Math.sqrt(Math.pow(l.touchObject.curY - l.touchObject.startY, 2))), 
        !l.options.verticalSwiping && !l.swiping && r > 4 ? (l.scrolling = !0, !1) : (!0 === l.options.verticalSwiping && (l.touchObject.swipeLength = r), 
        t = l.swipeDirection(), void 0 !== i.originalEvent && l.touchObject.swipeLength > 4 && (l.swiping = !0, 
        i.preventDefault()), s = (!1 === l.options.rtl ? 1 : -1) * (l.touchObject.curX > l.touchObject.startX ? 1 : -1), 
        !0 === l.options.verticalSwiping && (s = l.touchObject.curY > l.touchObject.startY ? 1 : -1), 
        o = l.touchObject.swipeLength, l.touchObject.edgeHit = !1, !1 === l.options.infinite && (0 === l.currentSlide && "right" === t || l.currentSlide >= l.getDotCount() && "left" === t) && (o = l.touchObject.swipeLength * l.options.edgeFriction, 
        l.touchObject.edgeHit = !0), !1 === l.options.vertical ? l.swipeLeft = e + o * s : l.swipeLeft = e + o * (l.$list.height() / l.listWidth) * s, 
        !0 === l.options.verticalSwiping && (l.swipeLeft = e + o * s), !0 !== l.options.fade && !1 !== l.options.touchMove && (!0 === l.animating ? (l.swipeLeft = null, 
        !1) : void l.setCSS(l.swipeLeft))));
    }, e.prototype.swipeStart = function(i) {
        var e, t = this;
        if (t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow) return t.touchObject = {}, 
        !1;
        void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]), 
        t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX, 
        t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY, 
        t.dragging = !0;
    }, e.prototype.unfilterSlides = e.prototype.slickUnfilter = function() {
        var i = this;
        null !== i.$slidesCache && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), 
        i.$slidesCache.appendTo(i.$slideTrack), i.reinit());
    }, e.prototype.unload = function() {
        var e = this;
        i(".slick-cloned", e.$slider).remove(), e.$dots && e.$dots.remove(), e.$prevArrow && e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove(), 
        e.$nextArrow && e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove(), e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");
    }, e.prototype.unslick = function(i) {
        var e = this;
        e.$slider.trigger("unslick", [ e, i ]), e.destroy();
    }, e.prototype.updateArrows = function() {
        var i = this;
        Math.floor(i.options.slidesToShow / 2), !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && !i.options.infinite && (i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 
        i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === i.currentSlide ? (i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - i.options.slidesToShow && !1 === i.options.centerMode ? (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - 1 && !0 === i.options.centerMode && (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")));
    }, e.prototype.updateDots = function() {
        var i = this;
        null !== i.$dots && (i.$dots.find("li").removeClass("slick-active").end(), i.$dots.find("li").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass("slick-active"));
    }, e.prototype.visibility = function() {
        var i = this;
        i.options.autoplay && (document[i.hidden] ? i.interrupted = !0 : i.interrupted = !1);
    }, i.fn.slick = function() {
        var i, t, o = this, s = arguments[0], n = Array.prototype.slice.call(arguments, 1), r = o.length;
        for (i = 0; i < r; i++) if ("object" == typeof s || void 0 === s ? o[i].slick = new e(o[i], s) : t = o[i].slick[s].apply(o[i].slick, n), 
        void 0 !== t) return t;
        return o;
    };
});

(function(window, document, $, undefined) {
    "use strict";
    if (!$) {
        return;
    }
    if ($.fn.fancybox) {
        $.error("fancyBox already initialized");
        return;
    }
    var defaults = {
        loop: false,
        margin: [ 44, 0 ],
        gutter: 50,
        keyboard: true,
        arrows: true,
        infobar: false,
        toolbar: true,
        buttons: [ "slideShow", "fullScreen", "thumbs", "close" ],
        idleTime: 4,
        smallBtn: "auto",
        protect: false,
        modal: false,
        image: {
            preload: "auto"
        },
        ajax: {
            settings: {
                data: {
                    fancybox: true
                }
            }
        },
        iframe: {
            tpl: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen allowtransparency="true" src=""></iframe>',
            preload: true,
            css: {},
            attr: {
                scrolling: "auto"
            }
        },
        animationEffect: "zoom",
        animationDuration: 366,
        zoomOpacity: "auto",
        transitionEffect: "fade",
        transitionDuration: 366,
        slideClass: "",
        baseClass: "",
        baseTpl: '<div class="fancybox-container" role="dialog" tabindex="-1">' + '<div class="fancybox-bg"></div>' + '<div class="fancybox-inner">' + '<div class="fancybox-infobar">' + '<button data-fancybox-prev title="{{PREV}}" class="fancybox-button fancybox-button--left"></button>' + '<div class="fancybox-infobar__body">' + "<span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span>" + "</div>" + '<button data-fancybox-next title="{{NEXT}}" class="fancybox-button fancybox-button--right"></button>' + "</div>" + '<div class="fancybox-toolbar">' + "{{BUTTONS}}" + "</div>" + '<div class="fancybox-navigation">' + '<button data-fancybox-prev title="{{PREV}}" class="fancybox-arrow fancybox-arrow--left" />' + '<button data-fancybox-next title="{{NEXT}}" class="fancybox-arrow fancybox-arrow--right" />' + "</div>" + '<div class="fancybox-stage"></div>' + '<div class="fancybox-caption-wrap">' + '<div class="fancybox-caption"></div>' + "</div>" + "</div>" + "</div>",
        spinnerTpl: '<div class="fancybox-loading"></div>',
        errorTpl: '<div class="fancybox-error"><p>{{ERROR}}<p></div>',
        btnTpl: {
            slideShow: '<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"></button>',
            fullScreen: '<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fullscreen" title="{{FULL_SCREEN}}"></button>',
            thumbs: '<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"></button>',
            close: '<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"></button>',
            smallBtn: '<button data-fancybox-close class="fancybox-close-small" title="{{CLOSE}}"></button>'
        },
        parentEl: "body",
        autoFocus: true,
        backFocus: true,
        trapFocus: true,
        fullScreen: {
            autoStart: false
        },
        touch: {
            vertical: true,
            momentum: true
        },
        hash: null,
        media: {},
        slideShow: {
            autoStart: false,
            speed: 4e3
        },
        thumbs: {
            autoStart: false,
            hideOnClose: true
        },
        onInit: $.noop,
        beforeLoad: $.noop,
        afterLoad: $.noop,
        beforeShow: $.noop,
        afterShow: $.noop,
        beforeClose: $.noop,
        afterClose: $.noop,
        onActivate: $.noop,
        onDeactivate: $.noop,
        clickContent: function(current, event) {
            return current.type === "image" ? "zoom" : false;
        },
        clickSlide: "close",
        clickOutside: "close",
        dblclickContent: false,
        dblclickSlide: false,
        dblclickOutside: false,
        mobile: {
            clickContent: function(current, event) {
                return current.type === "image" ? "toggleControls" : false;
            },
            clickSlide: function(current, event) {
                return current.type === "image" ? "toggleControls" : "close";
            },
            dblclickContent: function(current, event) {
                return current.type === "image" ? "zoom" : false;
            },
            dblclickSlide: function(current, event) {
                return current.type === "image" ? "zoom" : false;
            }
        },
        lang: "en",
        i18n: {
            en: {
                CLOSE: "Close",
                NEXT: "Next",
                PREV: "Previous",
                ERROR: "The requested content cannot be loaded. <br/> Please try again later.",
                PLAY_START: "Start slideshow",
                PLAY_STOP: "Pause slideshow",
                FULL_SCREEN: "Full screen",
                THUMBS: "Thumbnails"
            },
            de: {
                CLOSE: "Schliessen",
                NEXT: "Weiter",
                PREV: "ZurÃ¼ck",
                ERROR: "Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es spÃ¤ter nochmal.",
                PLAY_START: "Diaschau starten",
                PLAY_STOP: "Diaschau beenden",
                FULL_SCREEN: "Vollbild",
                THUMBS: "Vorschaubilder"
            }
        }
    };
    var $W = $(window);
    var $D = $(document);
    var called = 0;
    var isQuery = function(obj) {
        return obj && obj.hasOwnProperty && obj instanceof $;
    };
    var requestAFrame = function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) {
            return window.setTimeout(callback, 1e3 / 60);
        };
    }();
    var transitionEnd = function() {
        var t, el = document.createElement("fakeelement");
        var transitions = {
            transition: "transitionend",
            OTransition: "oTransitionEnd",
            MozTransition: "transitionend",
            WebkitTransition: "webkitTransitionEnd"
        };
        for (t in transitions) {
            if (el.style[t] !== undefined) {
                return transitions[t];
            }
        }
    }();
    var forceRedraw = function($el) {
        return $el && $el.length && $el[0].offsetHeight;
    };
    var FancyBox = function(content, opts, index) {
        var self = this;
        self.opts = $.extend(true, {
            index: index
        }, defaults, opts || {});
        if (opts && $.isArray(opts.buttons)) {
            self.opts.buttons = opts.buttons;
        }
        self.id = self.opts.id || ++called;
        self.group = [];
        self.currIndex = parseInt(self.opts.index, 10) || 0;
        self.prevIndex = null;
        self.prevPos = null;
        self.currPos = 0;
        self.firstRun = null;
        self.createGroup(content);
        if (!self.group.length) {
            return;
        }
        self.$lastFocus = $(document.activeElement).blur();
        self.slides = {};
        self.init(content);
    };
    $.extend(FancyBox.prototype, {
        init: function() {
            var self = this;
            var testWidth, $container, buttonStr;
            var firstItemOpts = self.group[self.currIndex].opts;
            self.scrollTop = $D.scrollTop();
            self.scrollLeft = $D.scrollLeft();
            if (!$.fancybox.getInstance() && !$.fancybox.isMobile && $("body").css("overflow") !== "hidden") {
                testWidth = $("body").width();
                $("html").addClass("fancybox-enabled");
                testWidth = $("body").width() - testWidth;
                if (testWidth > 1) {
                    $("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar, .fancybox-enabled body { margin-right: ' + testWidth + "px; }</style>");
                }
            }
            buttonStr = "";
            $.each(firstItemOpts.buttons, function(index, value) {
                buttonStr += firstItemOpts.btnTpl[value] || "";
            });
            $container = $(self.translate(self, firstItemOpts.baseTpl.replace("{{BUTTONS}}", buttonStr))).addClass("fancybox-is-hidden").attr("id", "fancybox-container-" + self.id).addClass(firstItemOpts.baseClass).data("FancyBox", self).prependTo(firstItemOpts.parentEl);
            self.$refs = {
                container: $container
            };
            [ "bg", "inner", "infobar", "toolbar", "stage", "caption" ].forEach(function(item) {
                self.$refs[item] = $container.find(".fancybox-" + item);
            });
            if (!firstItemOpts.arrows || self.group.length < 2) {
                $container.find(".fancybox-navigation").remove();
            }
            if (!firstItemOpts.infobar) {
                self.$refs.infobar.remove();
            }
            if (!firstItemOpts.toolbar) {
                self.$refs.toolbar.remove();
            }
            self.trigger("onInit");
            self.activate();
            self.jumpTo(self.currIndex);
        },
        translate: function(obj, str) {
            var arr = obj.opts.i18n[obj.opts.lang];
            return str.replace(/\{\{(\w+)\}\}/g, function(match, n) {
                var value = arr[n];
                if (value === undefined) {
                    return match;
                }
                return value;
            });
        },
        createGroup: function(content) {
            var self = this;
            var items = $.makeArray(content);
            $.each(items, function(i, item) {
                var obj = {}, opts = {}, data = [], $item, type, src, srcParts;
                if ($.isPlainObject(item)) {
                    obj = item;
                    opts = item.opts || item;
                } else if ($.type(item) === "object" && $(item).length) {
                    $item = $(item);
                    data = $item.data();
                    opts = "options" in data ? data.options : {};
                    opts = $.type(opts) === "object" ? opts : {};
                    obj.src = "src" in data ? data.src : opts.src || $item.attr("href");
                    [ "width", "height", "thumb", "type", "filter" ].forEach(function(item) {
                        if (item in data) {
                            opts[item] = data[item];
                        }
                    });
                    if ("srcset" in data) {
                        opts.image = {
                            srcset: data.srcset
                        };
                    }
                    opts.$orig = $item;
                    if (!obj.type && !obj.src) {
                        obj.type = "inline";
                        obj.src = item;
                    }
                } else {
                    obj = {
                        type: "html",
                        src: item + ""
                    };
                }
                obj.opts = $.extend(true, {}, self.opts, opts);
                if ($.fancybox.isMobile) {
                    obj.opts = $.extend(true, {}, obj.opts, obj.opts.mobile);
                }
                type = obj.type || obj.opts.type;
                src = obj.src || "";
                if (!type && src) {
                    if (src.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)) {
                        type = "image";
                    } else if (src.match(/\.(pdf)((\?|#).*)?$/i)) {
                        type = "pdf";
                    } else if (src.charAt(0) === "#") {
                        type = "inline";
                    }
                }
                obj.type = type;
                obj.index = self.group.length;
                if (obj.opts.$orig && !obj.opts.$orig.length) {
                    delete obj.opts.$orig;
                }
                if (!obj.opts.$thumb && obj.opts.$orig) {
                    obj.opts.$thumb = obj.opts.$orig.find("img:first");
                }
                if (obj.opts.$thumb && !obj.opts.$thumb.length) {
                    delete obj.opts.$thumb;
                }
                if ($.type(obj.opts.caption) === "function") {
                    obj.opts.caption = obj.opts.caption.apply(item, [ self, obj ]);
                } else if ("caption" in data) {
                    obj.opts.caption = data.caption;
                }
                obj.opts.caption = obj.opts.caption === undefined ? "" : obj.opts.caption + "";
                if (type === "ajax") {
                    srcParts = src.split(/\s+/, 2);
                    if (srcParts.length > 1) {
                        obj.src = srcParts.shift();
                        obj.opts.filter = srcParts.shift();
                    }
                }
                if (obj.opts.smallBtn == "auto") {
                    if ($.inArray(type, [ "html", "inline", "ajax" ]) > -1) {
                        obj.opts.toolbar = false;
                        obj.opts.smallBtn = true;
                    } else {
                        obj.opts.smallBtn = false;
                    }
                }
                if (type === "pdf") {
                    obj.type = "iframe";
                    obj.opts.iframe.preload = false;
                }
                if (obj.opts.modal) {
                    obj.opts = $.extend(true, obj.opts, {
                        infobar: 0,
                        toolbar: 0,
                        smallBtn: 0,
                        keyboard: 0,
                        slideShow: 0,
                        fullScreen: 0,
                        thumbs: 0,
                        touch: 0,
                        clickContent: false,
                        clickSlide: false,
                        clickOutside: false,
                        dblclickContent: false,
                        dblclickSlide: false,
                        dblclickOutside: false
                    });
                }
                self.group.push(obj);
            });
        },
        addEvents: function() {
            var self = this;
            self.removeEvents();
            self.$refs.container.on("click.fb-close", "[data-fancybox-close]", function(e) {
                e.stopPropagation();
                e.preventDefault();
                self.close(e);
            }).on("click.fb-prev touchend.fb-prev", "[data-fancybox-prev]", function(e) {
                e.stopPropagation();
                e.preventDefault();
                self.previous();
            }).on("click.fb-next touchend.fb-next", "[data-fancybox-next]", function(e) {
                e.stopPropagation();
                e.preventDefault();
                self.next();
            });
            $W.on("orientationchange.fb resize.fb", function(e) {
                if (e && e.originalEvent && e.originalEvent.type === "resize") {
                    requestAFrame(function() {
                        self.update();
                    });
                } else {
                    self.$refs.stage.hide();
                    setTimeout(function() {
                        self.$refs.stage.show();
                        self.update();
                    }, 500);
                }
            });
            $D.on("focusin.fb", function(e) {
                var instance = $.fancybox ? $.fancybox.getInstance() : null;
                if (instance.isClosing || !instance.current || !instance.current.opts.trapFocus || $(e.target).hasClass("fancybox-container") || $(e.target).is(document)) {
                    return;
                }
                if (instance && $(e.target).css("position") !== "fixed" && !instance.$refs.container.has(e.target).length) {
                    e.stopPropagation();
                    instance.focus();
                    $W.scrollTop(self.scrollTop).scrollLeft(self.scrollLeft);
                }
            });
            $D.on("keydown.fb", function(e) {
                var current = self.current, keycode = e.keyCode || e.which;
                if (!current || !current.opts.keyboard) {
                    return;
                }
                if ($(e.target).is("input") || $(e.target).is("textarea")) {
                    return;
                }
                if (keycode === 8 || keycode === 27) {
                    e.preventDefault();
                    self.close(e);
                    return;
                }
                if (keycode === 37 || keycode === 38) {
                    e.preventDefault();
                    self.previous();
                    return;
                }
                if (keycode === 39 || keycode === 40) {
                    e.preventDefault();
                    self.next();
                    return;
                }
                self.trigger("afterKeydown", e, keycode);
            });
            if (self.group[self.currIndex].opts.idleTime) {
                self.idleSecondsCounter = 0;
                $D.on("mousemove.fb-idle mouseenter.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle", function() {
                    self.idleSecondsCounter = 0;
                    if (self.isIdle) {
                        self.showControls();
                    }
                    self.isIdle = false;
                });
                self.idleInterval = window.setInterval(function() {
                    self.idleSecondsCounter++;
                    if (self.idleSecondsCounter >= self.group[self.currIndex].opts.idleTime) {
                        self.isIdle = true;
                        self.idleSecondsCounter = 0;
                        self.hideControls();
                    }
                }, 1e3);
            }
        },
        removeEvents: function() {
            var self = this;
            $W.off("orientationchange.fb resize.fb");
            $D.off("focusin.fb keydown.fb .fb-idle");
            this.$refs.container.off(".fb-close .fb-prev .fb-next");
            if (self.idleInterval) {
                window.clearInterval(self.idleInterval);
                self.idleInterval = null;
            }
        },
        previous: function(duration) {
            return this.jumpTo(this.currPos - 1, duration);
        },
        next: function(duration) {
            return this.jumpTo(this.currPos + 1, duration);
        },
        jumpTo: function(pos, duration, slide) {
            var self = this, firstRun, loop, current, previous, canvasWidth, currentPos, transitionProps;
            var groupLen = self.group.length;
            if (self.isSliding || self.isClosing || self.isAnimating && self.firstRun) {
                return;
            }
            pos = parseInt(pos, 10);
            loop = self.current ? self.current.opts.loop : self.opts.loop;
            if (!loop && (pos < 0 || pos >= groupLen)) {
                return false;
            }
            firstRun = self.firstRun = self.firstRun === null;
            if (groupLen < 2 && !firstRun && !!self.isSliding) {
                return;
            }
            previous = self.current;
            self.prevIndex = self.currIndex;
            self.prevPos = self.currPos;
            current = self.createSlide(pos);
            if (groupLen > 1) {
                if (loop || current.index > 0) {
                    self.createSlide(pos - 1);
                }
                if (loop || current.index < groupLen - 1) {
                    self.createSlide(pos + 1);
                }
            }
            self.current = current;
            self.currIndex = current.index;
            self.currPos = current.pos;
            self.trigger("beforeShow", firstRun);
            self.updateControls();
            currentPos = $.fancybox.getTranslate(current.$slide);
            current.isMoved = (currentPos.left !== 0 || currentPos.top !== 0) && !current.$slide.hasClass("fancybox-animated");
            current.forcedDuration = undefined;
            if ($.isNumeric(duration)) {
                current.forcedDuration = duration;
            } else {
                duration = current.opts[firstRun ? "animationDuration" : "transitionDuration"];
            }
            duration = parseInt(duration, 10);
            if (firstRun) {
                if (current.opts.animationEffect && duration) {
                    self.$refs.container.css("transition-duration", duration + "ms");
                }
                self.$refs.container.removeClass("fancybox-is-hidden");
                forceRedraw(self.$refs.container);
                self.$refs.container.addClass("fancybox-is-open");
                current.$slide.addClass("fancybox-slide--current");
                self.loadSlide(current);
                self.preload();
                return;
            }
            $.each(self.slides, function(index, slide) {
                $.fancybox.stop(slide.$slide);
            });
            current.$slide.removeClass("fancybox-slide--next fancybox-slide--previous").addClass("fancybox-slide--current");
            if (current.isMoved) {
                canvasWidth = Math.round(current.$slide.width());
                $.each(self.slides, function(index, slide) {
                    var pos = slide.pos - current.pos;
                    $.fancybox.animate(slide.$slide, {
                        top: 0,
                        left: pos * canvasWidth + pos * slide.opts.gutter
                    }, duration, function() {
                        slide.$slide.removeAttr("style").removeClass("fancybox-slide--next fancybox-slide--previous");
                        if (slide.pos === self.currPos) {
                            current.isMoved = false;
                            self.complete();
                        }
                    });
                });
            } else {
                self.$refs.stage.children().removeAttr("style");
            }
            if (current.isLoaded) {
                self.revealContent(current);
            } else {
                self.loadSlide(current);
            }
            self.preload();
            if (previous.pos === current.pos) {
                return;
            }
            transitionProps = "fancybox-slide--" + (previous.pos > current.pos ? "next" : "previous");
            previous.$slide.removeClass("fancybox-slide--complete fancybox-slide--current fancybox-slide--next fancybox-slide--previous");
            previous.isComplete = false;
            if (!duration || !current.isMoved && !current.opts.transitionEffect) {
                return;
            }
            if (current.isMoved) {
                previous.$slide.addClass(transitionProps);
            } else {
                transitionProps = "fancybox-animated " + transitionProps + " fancybox-fx-" + current.opts.transitionEffect;
                $.fancybox.animate(previous.$slide, transitionProps, duration, function() {
                    previous.$slide.removeClass(transitionProps).removeAttr("style");
                });
            }
        },
        createSlide: function(pos) {
            var self = this;
            var $slide;
            var index;
            index = pos % self.group.length;
            index = index < 0 ? self.group.length + index : index;
            if (!self.slides[pos] && self.group[index]) {
                $slide = $('<div class="fancybox-slide"></div>').appendTo(self.$refs.stage);
                self.slides[pos] = $.extend(true, {}, self.group[index], {
                    pos: pos,
                    $slide: $slide,
                    isLoaded: false
                });
                self.updateSlide(self.slides[pos]);
            }
            return self.slides[pos];
        },
        scaleToActual: function(x, y, duration) {
            var self = this;
            var current = self.current;
            var $what = current.$content;
            var imgPos, posX, posY, scaleX, scaleY;
            var canvasWidth = parseInt(current.$slide.width(), 10);
            var canvasHeight = parseInt(current.$slide.height(), 10);
            var newImgWidth = current.width;
            var newImgHeight = current.height;
            if (!(current.type == "image" && !current.hasError) || !$what || self.isAnimating) {
                return;
            }
            $.fancybox.stop($what);
            self.isAnimating = true;
            x = x === undefined ? canvasWidth * .5 : x;
            y = y === undefined ? canvasHeight * .5 : y;
            imgPos = $.fancybox.getTranslate($what);
            scaleX = newImgWidth / imgPos.width;
            scaleY = newImgHeight / imgPos.height;
            posX = canvasWidth * .5 - newImgWidth * .5;
            posY = canvasHeight * .5 - newImgHeight * .5;
            if (newImgWidth > canvasWidth) {
                posX = imgPos.left * scaleX - (x * scaleX - x);
                if (posX > 0) {
                    posX = 0;
                }
                if (posX < canvasWidth - newImgWidth) {
                    posX = canvasWidth - newImgWidth;
                }
            }
            if (newImgHeight > canvasHeight) {
                posY = imgPos.top * scaleY - (y * scaleY - y);
                if (posY > 0) {
                    posY = 0;
                }
                if (posY < canvasHeight - newImgHeight) {
                    posY = canvasHeight - newImgHeight;
                }
            }
            self.updateCursor(newImgWidth, newImgHeight);
            $.fancybox.animate($what, {
                top: posY,
                left: posX,
                scaleX: scaleX,
                scaleY: scaleY
            }, duration || 330, function() {
                self.isAnimating = false;
            });
            if (self.SlideShow && self.SlideShow.isActive) {
                self.SlideShow.stop();
            }
        },
        scaleToFit: function(duration) {
            var self = this;
            var current = self.current;
            var $what = current.$content;
            var end;
            if (!(current.type == "image" && !current.hasError) || !$what || self.isAnimating) {
                return;
            }
            $.fancybox.stop($what);
            self.isAnimating = true;
            end = self.getFitPos(current);
            self.updateCursor(end.width, end.height);
            $.fancybox.animate($what, {
                top: end.top,
                left: end.left,
                scaleX: end.width / $what.width(),
                scaleY: end.height / $what.height()
            }, duration || 330, function() {
                self.isAnimating = false;
            });
        },
        getFitPos: function(slide) {
            var self = this;
            var $what = slide.$content;
            var imgWidth = slide.width;
            var imgHeight = slide.height;
            var margin = slide.opts.margin;
            var canvasWidth, canvasHeight, minRatio, width, height;
            if (!$what || !$what.length || !imgWidth && !imgHeight) {
                return false;
            }
            if ($.type(margin) === "number") {
                margin = [ margin, margin ];
            }
            if (margin.length == 2) {
                margin = [ margin[0], margin[1], margin[0], margin[1] ];
            }
            if ($W.width() < 800) {
                margin = [ 0, 0, 0, 0 ];
            }
            canvasWidth = parseInt(self.$refs.stage.width(), 10) - (margin[1] + margin[3]);
            canvasHeight = parseInt(self.$refs.stage.height(), 10) - (margin[0] + margin[2]);
            minRatio = Math.min(1, canvasWidth / imgWidth, canvasHeight / imgHeight);
            width = Math.floor(minRatio * imgWidth);
            height = Math.floor(minRatio * imgHeight);
            return {
                top: Math.floor((canvasHeight - height) * .5) + margin[0],
                left: Math.floor((canvasWidth - width) * .5) + margin[3],
                width: width,
                height: height
            };
        },
        update: function() {
            var self = this;
            $.each(self.slides, function(key, slide) {
                self.updateSlide(slide);
            });
        },
        updateSlide: function(slide) {
            var self = this;
            var $what = slide.$content;
            if ($what && (slide.width || slide.height)) {
                $.fancybox.stop($what);
                $.fancybox.setTranslate($what, self.getFitPos(slide));
                if (slide.pos === self.currPos) {
                    self.updateCursor();
                }
            }
            slide.$slide.trigger("refresh");
            self.trigger("onUpdate", slide);
        },
        updateCursor: function(nextWidth, nextHeight) {
            var self = this;
            var isScaledDown;
            var $container = self.$refs.container.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-drag fancybox-can-zoomOut");
            if (!self.current || self.isClosing) {
                return;
            }
            if (self.isZoomable()) {
                $container.addClass("fancybox-is-zoomable");
                if (nextWidth !== undefined && nextHeight !== undefined) {
                    isScaledDown = nextWidth < self.current.width && nextHeight < self.current.height;
                } else {
                    isScaledDown = self.isScaledDown();
                }
                if (isScaledDown) {
                    $container.addClass("fancybox-can-zoomIn");
                } else {
                    if (self.current.opts.touch) {
                        $container.addClass("fancybox-can-drag");
                    } else {
                        $container.addClass("fancybox-can-zoomOut");
                    }
                }
            } else if (self.current.opts.touch) {
                $container.addClass("fancybox-can-drag");
            }
        },
        isZoomable: function() {
            var self = this;
            var current = self.current;
            var fitPos;
            if (!current || self.isClosing) {
                return;
            }
            if (current.type === "image" && current.isLoaded && !current.hasError && (current.opts.clickContent === "zoom" || $.isFunction(current.opts.clickContent) && current.opts.clickContent(current) === "zoom")) {
                fitPos = self.getFitPos(current);
                if (current.width > fitPos.width || current.height > fitPos.height) {
                    return true;
                }
            }
            return false;
        },
        isScaledDown: function() {
            var self = this;
            var current = self.current;
            var $what = current.$content;
            var rez = false;
            if ($what) {
                rez = $.fancybox.getTranslate($what);
                rez = rez.width < current.width || rez.height < current.height;
            }
            return rez;
        },
        canPan: function() {
            var self = this;
            var current = self.current;
            var $what = current.$content;
            var rez = false;
            if ($what) {
                rez = self.getFitPos(current);
                rez = Math.abs($what.width() - rez.width) > 1 || Math.abs($what.height() - rez.height) > 1;
            }
            return rez;
        },
        loadSlide: function(slide) {
            var self = this, type, $slide;
            var ajaxLoad;
            if (slide.isLoading) {
                return;
            }
            if (slide.isLoaded) {
                return;
            }
            slide.isLoading = true;
            self.trigger("beforeLoad", slide);
            type = slide.type;
            $slide = slide.$slide;
            $slide.off("refresh").trigger("onReset").addClass("fancybox-slide--" + (type || "unknown")).addClass(slide.opts.slideClass);
            switch (type) {
              case "image":
                self.setImage(slide);
                break;

              case "iframe":
                self.setIframe(slide);
                break;

              case "html":
                self.setContent(slide, slide.src || slide.content);
                break;

              case "inline":
                if ($(slide.src).length) {
                    self.setContent(slide, $(slide.src));
                } else {
                    self.setError(slide);
                }
                break;

              case "ajax":
                self.showLoading(slide);
                ajaxLoad = $.ajax($.extend({}, slide.opts.ajax.settings, {
                    url: slide.src,
                    success: function(data, textStatus) {
                        if (textStatus === "success") {
                            self.setContent(slide, data);
                        }
                    },
                    error: function(jqXHR, textStatus) {
                        if (jqXHR && textStatus !== "abort") {
                            self.setError(slide);
                        }
                    }
                }));
                $slide.one("onReset", function() {
                    ajaxLoad.abort();
                });
                break;

              default:
                self.setError(slide);
                break;
            }
            return true;
        },
        setImage: function(slide) {
            var self = this;
            var srcset = slide.opts.image.srcset;
            var found, temp, pxRatio, windowWidth;
            if (srcset) {
                pxRatio = window.devicePixelRatio || 1;
                windowWidth = window.innerWidth * pxRatio;
                temp = srcset.split(",").map(function(el) {
                    var ret = {};
                    el.trim().split(/\s+/).forEach(function(el, i) {
                        var value = parseInt(el.substring(0, el.length - 1), 10);
                        if (i === 0) {
                            return ret.url = el;
                        }
                        if (value) {
                            ret.value = value;
                            ret.postfix = el[el.length - 1];
                        }
                    });
                    return ret;
                });
                temp.sort(function(a, b) {
                    return a.value - b.value;
                });
                for (var j = 0; j < temp.length; j++) {
                    var el = temp[j];
                    if (el.postfix === "w" && el.value >= windowWidth || el.postfix === "x" && el.value >= pxRatio) {
                        found = el;
                        break;
                    }
                }
                if (!found && temp.length) {
                    found = temp[temp.length - 1];
                }
                if (found) {
                    slide.src = found.url;
                    if (slide.width && slide.height && found.postfix == "w") {
                        slide.height = slide.width / slide.height * found.value;
                        slide.width = found.value;
                    }
                }
            }
            slide.$content = $('<div class="fancybox-image-wrap"></div>').addClass("fancybox-is-hidden").appendTo(slide.$slide);
            if (slide.opts.preload !== false && slide.opts.width && slide.opts.height && (slide.opts.thumb || slide.opts.$thumb)) {
                slide.width = slide.opts.width;
                slide.height = slide.opts.height;
                slide.$ghost = $("<img />").one("error", function() {
                    $(this).remove();
                    slide.$ghost = null;
                    self.setBigImage(slide);
                }).one("load", function() {
                    self.afterLoad(slide);
                    self.setBigImage(slide);
                }).addClass("fancybox-image").appendTo(slide.$content).attr("src", slide.opts.thumb || slide.opts.$thumb.attr("src"));
            } else {
                self.setBigImage(slide);
            }
        },
        setBigImage: function(slide) {
            var self = this;
            var $img = $("<img />");
            slide.$image = $img.one("error", function() {
                self.setError(slide);
            }).one("load", function() {
                clearTimeout(slide.timouts);
                slide.timouts = null;
                if (self.isClosing) {
                    return;
                }
                slide.width = this.naturalWidth;
                slide.height = this.naturalHeight;
                if (slide.opts.image.srcset) {
                    $img.attr("sizes", "100vw").attr("srcset", slide.opts.image.srcset);
                }
                self.hideLoading(slide);
                if (slide.$ghost) {
                    slide.timouts = setTimeout(function() {
                        slide.timouts = null;
                        slide.$ghost.hide();
                    }, Math.min(300, Math.max(1e3, slide.height / 1600)));
                } else {
                    self.afterLoad(slide);
                }
            }).addClass("fancybox-image").attr("src", slide.src).appendTo(slide.$content);
            if ($img[0].complete) {
                $img.trigger("load");
            } else if ($img[0].error) {
                $img.trigger("error");
            } else {
                slide.timouts = setTimeout(function() {
                    if (!$img[0].complete && !slide.hasError) {
                        self.showLoading(slide);
                    }
                }, 100);
            }
        },
        setIframe: function(slide) {
            var self = this, opts = slide.opts.iframe, $slide = slide.$slide, $iframe;
            slide.$content = $('<div class="fancybox-content' + (opts.preload ? " fancybox-is-hidden" : "") + '"></div>').css(opts.css).appendTo($slide);
            $iframe = $(opts.tpl.replace(/\{rnd\}/g, new Date().getTime())).attr(opts.attr).appendTo(slide.$content);
            if (opts.preload) {
                self.showLoading(slide);
                $iframe.on("load.fb error.fb", function(e) {
                    this.isReady = 1;
                    slide.$slide.trigger("refresh");
                    self.afterLoad(slide);
                });
                $slide.on("refresh.fb", function() {
                    var $wrap = slide.$content, $contents, $body, scrollWidth, frameWidth, frameHeight;
                    if ($iframe[0].isReady !== 1) {
                        return;
                    }
                    try {
                        $contents = $iframe.contents();
                        $body = $contents.find("body");
                    } catch (ignore) {}
                    if ($body && $body.length && !(opts.css.width !== undefined && opts.css.height !== undefined)) {
                        scrollWidth = $iframe[0].contentWindow.document.documentElement.scrollWidth;
                        frameWidth = Math.ceil($body.outerWidth(true) + ($wrap.width() - scrollWidth));
                        frameHeight = Math.ceil($body.outerHeight(true));
                        $wrap.css({
                            width: opts.css.width === undefined ? frameWidth + ($wrap.outerWidth() - $wrap.innerWidth()) : opts.css.width,
                            height: opts.css.height === undefined ? frameHeight + ($wrap.outerHeight() - $wrap.innerHeight()) : opts.css.height
                        });
                    }
                    $wrap.removeClass("fancybox-is-hidden");
                });
            } else {
                this.afterLoad(slide);
            }
            $iframe.attr("src", slide.src);
            if (slide.opts.smallBtn === true) {
                slide.$content.prepend(self.translate(slide, slide.opts.btnTpl.smallBtn));
            }
            $slide.one("onReset", function() {
                try {
                    $(this).find("iframe").hide().attr("src", "//about:blank");
                } catch (ignore) {}
                $(this).empty();
                slide.isLoaded = false;
            });
        },
        setContent: function(slide, content) {
            var self = this;
            if (self.isClosing) {
                return;
            }
            self.hideLoading(slide);
            slide.$slide.empty();
            if (isQuery(content) && content.parent().length) {
                content.parent(".fancybox-slide--inline").trigger("onReset");
                slide.$placeholder = $("<div></div>").hide().insertAfter(content);
                content.css("display", "inline-block");
            } else if (!slide.hasError) {
                if ($.type(content) === "string") {
                    content = $("<div>").append($.trim(content)).contents();
                    if (content[0].nodeType === 3) {
                        content = $("<div>").html(content);
                    }
                }
                if (slide.opts.filter) {
                    content = $("<div>").html(content).find(slide.opts.filter);
                }
            }
            slide.$slide.one("onReset", function() {
                if (slide.$placeholder) {
                    slide.$placeholder.after(content.hide()).remove();
                    slide.$placeholder = null;
                }
                if (slide.$smallBtn) {
                    slide.$smallBtn.remove();
                    slide.$smallBtn = null;
                }
                if (!slide.hasError) {
                    $(this).empty();
                    slide.isLoaded = false;
                }
            });
            slide.$content = $(content).appendTo(slide.$slide);
            if (slide.opts.smallBtn && !slide.$smallBtn) {
                slide.$smallBtn = $(self.translate(slide, slide.opts.btnTpl.smallBtn)).appendTo(slide.$content);
            }
            this.afterLoad(slide);
        },
        setError: function(slide) {
            slide.hasError = true;
            slide.$slide.removeClass("fancybox-slide--" + slide.type);
            this.setContent(slide, this.translate(slide, slide.opts.errorTpl));
        },
        showLoading: function(slide) {
            var self = this;
            slide = slide || self.current;
            if (slide && !slide.$spinner) {
                slide.$spinner = $(self.opts.spinnerTpl).appendTo(slide.$slide);
            }
        },
        hideLoading: function(slide) {
            var self = this;
            slide = slide || self.current;
            if (slide && slide.$spinner) {
                slide.$spinner.remove();
                delete slide.$spinner;
            }
        },
        afterLoad: function(slide) {
            var self = this;
            if (self.isClosing) {
                return;
            }
            slide.isLoading = false;
            slide.isLoaded = true;
            self.trigger("afterLoad", slide);
            self.hideLoading(slide);
            if (slide.opts.protect && slide.$content && !slide.hasError) {
                slide.$content.on("contextmenu.fb", function(e) {
                    if (e.button == 2) {
                        e.preventDefault();
                    }
                    return true;
                });
                if (slide.type === "image") {
                    $('<div class="fancybox-spaceball"></div>').appendTo(slide.$content);
                }
            }
            self.revealContent(slide);
        },
        revealContent: function(slide) {
            var self = this;
            var $slide = slide.$slide;
            var effect, effectClassName, duration, opacity, end, start = false;
            effect = slide.opts[self.firstRun ? "animationEffect" : "transitionEffect"];
            duration = slide.opts[self.firstRun ? "animationDuration" : "transitionDuration"];
            duration = parseInt(slide.forcedDuration === undefined ? duration : slide.forcedDuration, 10);
            if (slide.isMoved || slide.pos !== self.currPos || !duration) {
                effect = false;
            }
            if (effect === "zoom" && !(slide.pos === self.currPos && duration && slide.type === "image" && !slide.hasError && (start = self.getThumbPos(slide)))) {
                effect = "fade";
            }
            if (effect === "zoom") {
                end = self.getFitPos(slide);
                end.scaleX = Math.round(end.width / start.width * 100) / 100;
                end.scaleY = Math.round(end.height / start.height * 100) / 100;
                delete end.width;
                delete end.height;
                opacity = slide.opts.zoomOpacity;
                if (opacity == "auto") {
                    opacity = Math.abs(slide.width / slide.height - start.width / start.height) > .1;
                }
                if (opacity) {
                    start.opacity = .1;
                    end.opacity = 1;
                }
                $.fancybox.setTranslate(slide.$content.removeClass("fancybox-is-hidden"), start);
                forceRedraw(slide.$content);
                $.fancybox.animate(slide.$content, end, duration, function() {
                    self.complete();
                });
                return;
            }
            self.updateSlide(slide);
            if (!effect) {
                forceRedraw($slide);
                slide.$content.removeClass("fancybox-is-hidden");
                if (slide.pos === self.currPos) {
                    self.complete();
                }
                return;
            }
            $.fancybox.stop($slide);
            effectClassName = "fancybox-animated fancybox-slide--" + (slide.pos > self.prevPos ? "next" : "previous") + " fancybox-fx-" + effect;
            $slide.removeAttr("style").removeClass("fancybox-slide--current fancybox-slide--next fancybox-slide--previous").addClass(effectClassName);
            slide.$content.removeClass("fancybox-is-hidden");
            forceRedraw($slide);
            $.fancybox.animate($slide, "fancybox-slide--current", duration, function(e) {
                $slide.removeClass(effectClassName).removeAttr("style");
                if (slide.pos === self.currPos) {
                    self.complete();
                }
            }, true);
        },
        getThumbPos: function(slide) {
            var self = this;
            var rez = false;
            var isElementVisible = function($el) {
                var element = $el[0];
                var elementRect = element.getBoundingClientRect();
                var parentRects = [];
                var visibleInAllParents;
                while (element.parentElement !== null) {
                    if ($(element.parentElement).css("overflow") === "hidden" || $(element.parentElement).css("overflow") === "auto") {
                        parentRects.push(element.parentElement.getBoundingClientRect());
                    }
                    element = element.parentElement;
                }
                visibleInAllParents = parentRects.every(function(parentRect) {
                    var visiblePixelX = Math.min(elementRect.right, parentRect.right) - Math.max(elementRect.left, parentRect.left);
                    var visiblePixelY = Math.min(elementRect.bottom, parentRect.bottom) - Math.max(elementRect.top, parentRect.top);
                    return visiblePixelX > 0 && visiblePixelY > 0;
                });
                return visibleInAllParents && elementRect.bottom > 0 && elementRect.right > 0 && elementRect.left < $(window).width() && elementRect.top < $(window).height();
            };
            var $thumb = slide.opts.$thumb;
            var thumbPos = $thumb ? $thumb.offset() : 0;
            var slidePos;
            if (thumbPos && $thumb[0].ownerDocument === document && isElementVisible($thumb)) {
                slidePos = self.$refs.stage.offset();
                rez = {
                    top: thumbPos.top - slidePos.top + parseFloat($thumb.css("border-top-width") || 0),
                    left: thumbPos.left - slidePos.left + parseFloat($thumb.css("border-left-width") || 0),
                    width: $thumb.width(),
                    height: $thumb.height(),
                    scaleX: 1,
                    scaleY: 1
                };
            }
            return rez;
        },
        complete: function() {
            var self = this;
            var current = self.current;
            var slides = {};
            if (current.isMoved || !current.isLoaded || current.isComplete) {
                return;
            }
            current.isComplete = true;
            current.$slide.siblings().trigger("onReset");
            forceRedraw(current.$slide);
            current.$slide.addClass("fancybox-slide--complete");
            $.each(self.slides, function(key, slide) {
                if (slide.pos >= self.currPos - 1 && slide.pos <= self.currPos + 1) {
                    slides[slide.pos] = slide;
                } else if (slide) {
                    $.fancybox.stop(slide.$slide);
                    slide.$slide.unbind().remove();
                }
            });
            self.slides = slides;
            self.updateCursor();
            self.trigger("afterShow");
            if ($(document.activeElement).is("[disabled]") || current.opts.autoFocus && !(current.type == "image" || current.type === "iframe")) {
                self.focus();
            }
        },
        preload: function() {
            var self = this;
            var next, prev;
            if (self.group.length < 2) {
                return;
            }
            next = self.slides[self.currPos + 1];
            prev = self.slides[self.currPos - 1];
            if (next && next.type === "image") {
                self.loadSlide(next);
            }
            if (prev && prev.type === "image") {
                self.loadSlide(prev);
            }
        },
        focus: function() {
            var current = this.current;
            var $el;
            if (this.isClosing) {
                return;
            }
            $el = current && current.isComplete ? current.$slide.find("button,:input,[tabindex],a").filter(":not([disabled]):visible:first") : null;
            $el = $el && $el.length ? $el : this.$refs.container;
            $el.focus();
        },
        activate: function() {
            var self = this;
            $(".fancybox-container").each(function() {
                var instance = $(this).data("FancyBox");
                if (instance && instance.uid !== self.uid && !instance.isClosing) {
                    instance.trigger("onDeactivate");
                }
            });
            if (self.current) {
                if (self.$refs.container.index() > 0) {
                    self.$refs.container.prependTo(document.body);
                }
                self.updateControls();
            }
            self.trigger("onActivate");
            self.addEvents();
        },
        close: function(e, d) {
            var self = this;
            var current = self.current;
            var effect, duration;
            var $what, opacity, start, end;
            var done = function() {
                self.cleanUp(e);
            };
            if (self.isClosing) {
                return false;
            }
            self.isClosing = true;
            if (self.trigger("beforeClose", e) === false) {
                self.isClosing = false;
                requestAFrame(function() {
                    self.update();
                });
                return false;
            }
            self.removeEvents();
            if (current.timouts) {
                clearTimeout(current.timouts);
            }
            $what = current.$content;
            effect = current.opts.animationEffect;
            duration = $.isNumeric(d) ? d : effect ? current.opts.animationDuration : 0;
            current.$slide.off(transitionEnd).removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated");
            current.$slide.siblings().trigger("onReset").remove();
            if (duration) {
                self.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing");
            }
            self.hideLoading(current);
            self.hideControls();
            self.updateCursor();
            if (effect === "zoom" && !(e !== true && $what && duration && current.type === "image" && !current.hasError && (end = self.getThumbPos(current)))) {
                effect = "fade";
            }
            if (effect === "zoom") {
                $.fancybox.stop($what);
                start = $.fancybox.getTranslate($what);
                start.width = start.width * start.scaleX;
                start.height = start.height * start.scaleY;
                opacity = current.opts.zoomOpacity;
                if (opacity == "auto") {
                    opacity = Math.abs(current.width / current.height - end.width / end.height) > .1;
                }
                if (opacity) {
                    end.opacity = 0;
                }
                start.scaleX = start.width / end.width;
                start.scaleY = start.height / end.height;
                start.width = end.width;
                start.height = end.height;
                $.fancybox.setTranslate(current.$content, start);
                $.fancybox.animate(current.$content, end, duration, done);
                return true;
            }
            if (effect && duration) {
                if (e === true) {
                    setTimeout(done, duration);
                } else {
                    $.fancybox.animate(current.$slide.removeClass("fancybox-slide--current"), "fancybox-animated fancybox-slide--previous fancybox-fx-" + effect, duration, done);
                }
            } else {
                done();
            }
            return true;
        },
        cleanUp: function(e) {
            var self = this, instance;
            self.current.$slide.trigger("onReset");
            self.$refs.container.empty().remove();
            self.trigger("afterClose", e);
            if (self.$lastFocus && !!!self.current.focusBack) {
                self.$lastFocus.focus();
            }
            self.current = null;
            instance = $.fancybox.getInstance();
            if (instance) {
                instance.activate();
            } else {
                $W.scrollTop(self.scrollTop).scrollLeft(self.scrollLeft);
                $("html").removeClass("fancybox-enabled");
                $("#fancybox-style-noscroll").remove();
            }
        },
        trigger: function(name, slide) {
            var args = Array.prototype.slice.call(arguments, 1), self = this, obj = slide && slide.opts ? slide : self.current, rez;
            if (obj) {
                args.unshift(obj);
            } else {
                obj = self;
            }
            args.unshift(self);
            if ($.isFunction(obj.opts[name])) {
                rez = obj.opts[name].apply(obj, args);
            }
            if (rez === false) {
                return rez;
            }
            if (name === "afterClose") {
                $D.trigger(name + ".fb", args);
            } else {
                self.$refs.container.trigger(name + ".fb", args);
            }
        },
        updateControls: function(force) {
            var self = this;
            var current = self.current;
            var index = current.index;
            var opts = current.opts;
            var caption = opts.caption;
            var $caption = self.$refs.caption;
            current.$slide.trigger("refresh");
            self.$caption = caption && caption.length ? $caption.html(caption) : null;
            if (!self.isHiddenControls) {
                self.showControls();
            }
            $("[data-fancybox-count]").html(self.group.length);
            $("[data-fancybox-index]").html(index + 1);
            $("[data-fancybox-prev]").prop("disabled", !opts.loop && index <= 0);
            $("[data-fancybox-next]").prop("disabled", !opts.loop && index >= self.group.length - 1);
        },
        hideControls: function() {
            this.isHiddenControls = true;
            this.$refs.container.removeClass("fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav");
        },
        showControls: function() {
            var self = this;
            var opts = self.current ? self.current.opts : self.opts;
            var $container = self.$refs.container;
            self.isHiddenControls = false;
            self.idleSecondsCounter = 0;
            $container.toggleClass("fancybox-show-toolbar", !!(opts.toolbar && opts.buttons)).toggleClass("fancybox-show-infobar", !!(opts.infobar && self.group.length > 1)).toggleClass("fancybox-show-nav", !!(opts.arrows && self.group.length > 1)).toggleClass("fancybox-is-modal", !!opts.modal);
            if (self.$caption) {
                $container.addClass("fancybox-show-caption ");
            } else {
                $container.removeClass("fancybox-show-caption");
            }
        },
        toggleControls: function() {
            if (this.isHiddenControls) {
                this.showControls();
            } else {
                this.hideControls();
            }
        }
    });
    $.fancybox = {
        version: "3.1.20",
        defaults: defaults,
        getInstance: function(command) {
            var instance = $('.fancybox-container:not(".fancybox-is-closing"):first').data("FancyBox");
            var args = Array.prototype.slice.call(arguments, 1);
            if (instance instanceof FancyBox) {
                if ($.type(command) === "string") {
                    instance[command].apply(instance, args);
                } else if ($.type(command) === "function") {
                    command.apply(instance, args);
                }
                return instance;
            }
            return false;
        },
        open: function(items, opts, index) {
            return new FancyBox(items, opts, index);
        },
        close: function(all) {
            var instance = this.getInstance();
            if (instance) {
                instance.close();
                if (all === true) {
                    this.close();
                }
            }
        },
        destroy: function() {
            this.close(true);
            $D.off("click.fb-start");
        },
        isMobile: document.createTouch !== undefined && /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent),
        use3d: function() {
            var div = document.createElement("div");
            return window.getComputedStyle && window.getComputedStyle(div).getPropertyValue("transform") && !(document.documentMode && document.documentMode < 11);
        }(),
        getTranslate: function($el) {
            var matrix;
            if (!$el || !$el.length) {
                return false;
            }
            matrix = $el.eq(0).css("transform");
            if (matrix && matrix.indexOf("matrix") !== -1) {
                matrix = matrix.split("(")[1];
                matrix = matrix.split(")")[0];
                matrix = matrix.split(",");
            } else {
                matrix = [];
            }
            if (matrix.length) {
                if (matrix.length > 10) {
                    matrix = [ matrix[13], matrix[12], matrix[0], matrix[5] ];
                } else {
                    matrix = [ matrix[5], matrix[4], matrix[0], matrix[3] ];
                }
                matrix = matrix.map(parseFloat);
            } else {
                matrix = [ 0, 0, 1, 1 ];
                var transRegex = /\.*translate\((.*)px,(.*)px\)/i;
                var transRez = transRegex.exec($el.eq(0).attr("style"));
                if (transRez) {
                    matrix[0] = parseFloat(transRez[2]);
                    matrix[1] = parseFloat(transRez[1]);
                }
            }
            return {
                top: matrix[0],
                left: matrix[1],
                scaleX: matrix[2],
                scaleY: matrix[3],
                opacity: parseFloat($el.css("opacity")),
                width: $el.width(),
                height: $el.height()
            };
        },
        setTranslate: function($el, props) {
            var str = "";
            var css = {};
            if (!$el || !props) {
                return;
            }
            if (props.left !== undefined || props.top !== undefined) {
                str = (props.left === undefined ? $el.position().left : props.left) + "px, " + (props.top === undefined ? $el.position().top : props.top) + "px";
                if (this.use3d) {
                    str = "translate3d(" + str + ", 0px)";
                } else {
                    str = "translate(" + str + ")";
                }
            }
            if (props.scaleX !== undefined && props.scaleY !== undefined) {
                str = (str.length ? str + " " : "") + "scale(" + props.scaleX + ", " + props.scaleY + ")";
            }
            if (str.length) {
                css.transform = str;
            }
            if (props.opacity !== undefined) {
                css.opacity = props.opacity;
            }
            if (props.width !== undefined) {
                css.width = props.width;
            }
            if (props.height !== undefined) {
                css.height = props.height;
            }
            return $el.css(css);
        },
        animate: function($el, to, duration, callback, leaveAnimationName) {
            var event = transitionEnd || "transitionend";
            if ($.isFunction(duration)) {
                callback = duration;
                duration = null;
            }
            if (!$.isPlainObject(to)) {
                $el.removeAttr("style");
            }
            $el.on(event, function(e) {
                if (e && e.originalEvent && (!$el.is(e.originalEvent.target) || e.originalEvent.propertyName == "z-index")) {
                    return;
                }
                $el.off(event);
                if ($.isPlainObject(to)) {
                    if (to.scaleX !== undefined && to.scaleY !== undefined) {
                        $el.css("transition-duration", "0ms");
                        to.width = $el.width() * to.scaleX;
                        to.height = $el.height() * to.scaleY;
                        to.scaleX = 1;
                        to.scaleY = 1;
                        $.fancybox.setTranslate($el, to);
                    }
                } else if (leaveAnimationName !== true) {
                    $el.removeClass(to);
                }
                if ($.isFunction(callback)) {
                    callback(e);
                }
            });
            if ($.isNumeric(duration)) {
                $el.css("transition-duration", duration + "ms");
            }
            if ($.isPlainObject(to)) {
                $.fancybox.setTranslate($el, to);
            } else {
                $el.addClass(to);
            }
            $el.data("timer", setTimeout(function() {
                $el.trigger("transitionend");
            }, duration + 16));
        },
        stop: function($el) {
            clearTimeout($el.data("timer"));
            $el.off(transitionEnd);
        }
    };
    function _run(e) {
        var target = e.currentTarget, opts = e.data ? e.data.options : {}, items = e.data ? e.data.items : [], value = $(target).attr("data-fancybox") || "", index = 0;
        e.preventDefault();
        e.stopPropagation();
        if (value) {
            items = items.length ? items.filter('[data-fancybox="' + value + '"]') : $('[data-fancybox="' + value + '"]');
            index = items.index(target);
            if (index < 0) {
                index = 0;
            }
        } else {
            items = [ target ];
        }
        $.fancybox.open(items, opts, index);
    }
    $.fn.fancybox = function(options) {
        var selector;
        options = options || {};
        selector = options.selector || false;
        if (selector) {
            $("body").off("click.fb-start", selector).on("click.fb-start", selector, {
                items: $(selector),
                options: options
            }, _run);
        } else {
            this.off("click.fb-start").on("click.fb-start", {
                items: this,
                options: options
            }, _run);
        }
        return this;
    };
    $D.on("click.fb-start", "[data-fancybox]", _run);
})(window, document, window.jQuery);

(function($) {
    "use strict";
    var format = function(url, rez, params) {
        if (!url) {
            return;
        }
        params = params || "";
        if ($.type(params) === "object") {
            params = $.param(params, true);
        }
        $.each(rez, function(key, value) {
            url = url.replace("$" + key, value || "");
        });
        if (params.length) {
            url += (url.indexOf("?") > 0 ? "&" : "?") + params;
        }
        return url;
    };
    var defaults = {
        youtube: {
            matcher: /(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,
            params: {
                autoplay: 1,
                autohide: 1,
                fs: 1,
                rel: 0,
                hd: 1,
                wmode: "transparent",
                enablejsapi: 1,
                html5: 1
            },
            paramPlace: 8,
            type: "iframe",
            url: "//www.youtube.com/embed/$4",
            thumb: "//img.youtube.com/vi/$4/hqdefault.jpg"
        },
        vimeo: {
            matcher: /^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,
            params: {
                autoplay: 1,
                hd: 1,
                show_title: 1,
                show_byline: 1,
                show_portrait: 0,
                fullscreen: 1,
                api: 1
            },
            paramPlace: 3,
            type: "iframe",
            url: "//player.vimeo.com/video/$2"
        },
        metacafe: {
            matcher: /metacafe.com\/watch\/(\d+)\/(.*)?/,
            type: "iframe",
            url: "//www.metacafe.com/embed/$1/?ap=1"
        },
        dailymotion: {
            matcher: /dailymotion.com\/video\/(.*)\/?(.*)/,
            params: {
                additionalInfos: 0,
                autoStart: 1
            },
            type: "iframe",
            url: "//www.dailymotion.com/embed/video/$1"
        },
        vine: {
            matcher: /vine.co\/v\/([a-zA-Z0-9\?\=\-]+)/,
            type: "iframe",
            url: "//vine.co/v/$1/embed/simple"
        },
        instagram: {
            matcher: /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
            type: "image",
            url: "//$1/p/$2/media/?size=l"
        },
        google_maps: {
            matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,
            type: "iframe",
            url: function(rez) {
                return "//maps.google." + rez[2] + "/?ll=" + (rez[9] ? rez[9] + "&z=" + Math.floor(rez[10]) + (rez[12] ? rez[12].replace(/^\//, "&") : "") : rez[12]) + "&output=" + (rez[12] && rez[12].indexOf("layer=c") > 0 ? "svembed" : "embed");
            }
        }
    };
    $(document).on("onInit.fb", function(e, instance) {
        $.each(instance.group, function(i, item) {
            var url = item.src || "", type = false, media, thumb, rez, params, urlParams, o, provider;
            if (item.type) {
                return;
            }
            media = $.extend(true, {}, defaults, item.opts.media);
            $.each(media, function(n, el) {
                rez = url.match(el.matcher);
                o = {};
                provider = n;
                if (!rez) {
                    return;
                }
                type = el.type;
                if (el.paramPlace && rez[el.paramPlace]) {
                    urlParams = rez[el.paramPlace];
                    if (urlParams[0] == "?") {
                        urlParams = urlParams.substring(1);
                    }
                    urlParams = urlParams.split("&");
                    for (var m = 0; m < urlParams.length; ++m) {
                        var p = urlParams[m].split("=", 2);
                        if (p.length == 2) {
                            o[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));
                        }
                    }
                }
                params = $.extend(true, {}, el.params, item.opts[n], o);
                url = $.type(el.url) === "function" ? el.url.call(this, rez, params, item) : format(el.url, rez, params);
                thumb = $.type(el.thumb) === "function" ? el.thumb.call(this, rez, params, item) : format(el.thumb, rez);
                if (provider === "vimeo") {
                    url = url.replace("&%23", "#");
                }
                return false;
            });
            if (type) {
                item.src = url;
                item.type = type;
                if (!item.opts.thumb && !(item.opts.$thumb && item.opts.$thumb.length)) {
                    item.opts.thumb = thumb;
                }
                if (type === "iframe") {
                    $.extend(true, item.opts, {
                        iframe: {
                            preload: false,
                            attr: {
                                scrolling: "no"
                            }
                        }
                    });
                    item.contentProvider = provider;
                    item.opts.slideClass += " fancybox-slide--" + (provider == "google_maps" ? "map" : "video");
                }
            } else {
                item.type = "image";
            }
        });
    });
})(window.jQuery);

(function(window, document, $) {
    "use strict";
    var requestAFrame = function() {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || function(callback) {
            return window.setTimeout(callback, 1e3 / 60);
        };
    }();
    var cancelAFrame = function() {
        return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || function(id) {
            window.clearTimeout(id);
        };
    }();
    var pointers = function(e) {
        var result = [];
        e = e.originalEvent || e || window.e;
        e = e.touches && e.touches.length ? e.touches : e.changedTouches && e.changedTouches.length ? e.changedTouches : [ e ];
        for (var key in e) {
            if (e[key].pageX) {
                result.push({
                    x: e[key].pageX,
                    y: e[key].pageY
                });
            } else if (e[key].clientX) {
                result.push({
                    x: e[key].clientX,
                    y: e[key].clientY
                });
            }
        }
        return result;
    };
    var distance = function(point2, point1, what) {
        if (!point1 || !point2) {
            return 0;
        }
        if (what === "x") {
            return point2.x - point1.x;
        } else if (what === "y") {
            return point2.y - point1.y;
        }
        return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
    };
    var isClickable = function($el) {
        if ($el.is("a,button,input,select,textarea") || $.isFunction($el.get(0).onclick)) {
            return true;
        }
        for (var i = 0, atts = $el[0].attributes, n = atts.length; i < n; i++) {
            if (atts[i].nodeName.substr(0, 14) === "data-fancybox-") {
                return true;
            }
        }
        return false;
    };
    var hasScrollbars = function(el) {
        var overflowY = window.getComputedStyle(el)["overflow-y"];
        var overflowX = window.getComputedStyle(el)["overflow-x"];
        var vertical = (overflowY === "scroll" || overflowY === "auto") && el.scrollHeight > el.clientHeight;
        var horizontal = (overflowX === "scroll" || overflowX === "auto") && el.scrollWidth > el.clientWidth;
        return vertical || horizontal;
    };
    var isScrollable = function($el) {
        var rez = false;
        while (true) {
            rez = hasScrollbars($el.get(0));
            if (rez) {
                break;
            }
            $el = $el.parent();
            if (!$el.length || $el.hasClass("fancybox-stage") || $el.is("body")) {
                break;
            }
        }
        return rez;
    };
    var Guestures = function(instance) {
        var self = this;
        self.instance = instance;
        self.$bg = instance.$refs.bg;
        self.$stage = instance.$refs.stage;
        self.$container = instance.$refs.container;
        self.destroy();
        self.$container.on("touchstart.fb.touch mousedown.fb.touch", $.proxy(self, "ontouchstart"));
    };
    Guestures.prototype.destroy = function() {
        this.$container.off(".fb.touch");
    };
    Guestures.prototype.ontouchstart = function(e) {
        var self = this;
        var $target = $(e.target);
        var instance = self.instance;
        var current = instance.current;
        var $content = current.$content;
        var isTouchDevice = e.type == "touchstart";
        if (isTouchDevice) {
            self.$container.off("mousedown.fb.touch");
        }
        if (!current || self.instance.isAnimating || self.instance.isClosing) {
            e.stopPropagation();
            e.preventDefault();
            return;
        }
        if (e.originalEvent && e.originalEvent.button == 2) {
            return;
        }
        if (!$target.length || isClickable($target) || isClickable($target.parent())) {
            return;
        }
        if (e.originalEvent.clientX > $target[0].clientWidth + $target.offset().left) {
            return;
        }
        self.startPoints = pointers(e);
        if (!self.startPoints || self.startPoints.length > 1 && instance.isSliding) {
            return;
        }
        self.$target = $target;
        self.$content = $content;
        self.canTap = true;
        $(document).off(".fb.touch");
        $(document).on(isTouchDevice ? "touchend.fb.touch touchcancel.fb.touch" : "mouseup.fb.touch mouseleave.fb.touch", $.proxy(self, "ontouchend"));
        $(document).on(isTouchDevice ? "touchmove.fb.touch" : "mousemove.fb.touch", $.proxy(self, "ontouchmove"));
        e.stopPropagation();
        if (!(instance.current.opts.touch || instance.canPan()) || !($target.is(self.$stage) || self.$stage.find($target).length)) {
            if ($target.is("img")) {
                e.preventDefault();
            }
            return;
        }
        if (!($.fancybox.isMobile && (isScrollable(self.$target) || isScrollable(self.$target.parent())))) {
            e.preventDefault();
        }
        self.canvasWidth = Math.round(current.$slide[0].clientWidth);
        self.canvasHeight = Math.round(current.$slide[0].clientHeight);
        self.startTime = new Date().getTime();
        self.distanceX = self.distanceY = self.distance = 0;
        self.isPanning = false;
        self.isSwiping = false;
        self.isZooming = false;
        self.sliderStartPos = self.sliderLastPos || {
            top: 0,
            left: 0
        };
        self.contentStartPos = $.fancybox.getTranslate(self.$content);
        self.contentLastPos = null;
        if (self.startPoints.length === 1 && !self.isZooming) {
            self.canTap = !instance.isSliding;
            if (current.type === "image" && (self.contentStartPos.width > self.canvasWidth + 1 || self.contentStartPos.height > self.canvasHeight + 1)) {
                $.fancybox.stop(self.$content);
                self.$content.css("transition-duration", "0ms");
                self.isPanning = true;
            } else {
                self.isSwiping = true;
            }
            self.$container.addClass("fancybox-controls--isGrabbing");
        }
        if (self.startPoints.length === 2 && !instance.isAnimating && !current.hasError && current.type === "image" && (current.isLoaded || current.$ghost)) {
            self.isZooming = true;
            self.isSwiping = false;
            self.isPanning = false;
            $.fancybox.stop(self.$content);
            self.$content.css("transition-duration", "0ms");
            self.centerPointStartX = (self.startPoints[0].x + self.startPoints[1].x) * .5 - $(window).scrollLeft();
            self.centerPointStartY = (self.startPoints[0].y + self.startPoints[1].y) * .5 - $(window).scrollTop();
            self.percentageOfImageAtPinchPointX = (self.centerPointStartX - self.contentStartPos.left) / self.contentStartPos.width;
            self.percentageOfImageAtPinchPointY = (self.centerPointStartY - self.contentStartPos.top) / self.contentStartPos.height;
            self.startDistanceBetweenFingers = distance(self.startPoints[0], self.startPoints[1]);
        }
    };
    Guestures.prototype.ontouchmove = function(e) {
        var self = this;
        self.newPoints = pointers(e);
        if ($.fancybox.isMobile && (isScrollable(self.$target) || isScrollable(self.$target.parent()))) {
            e.stopPropagation();
            self.canTap = false;
            return;
        }
        if (!(self.instance.current.opts.touch || self.instance.canPan()) || !self.newPoints || !self.newPoints.length) {
            return;
        }
        self.distanceX = distance(self.newPoints[0], self.startPoints[0], "x");
        self.distanceY = distance(self.newPoints[0], self.startPoints[0], "y");
        self.distance = distance(self.newPoints[0], self.startPoints[0]);
        if (self.distance > 0) {
            if (!(self.$target.is(self.$stage) || self.$stage.find(self.$target).length)) {
                return;
            }
            e.stopPropagation();
            e.preventDefault();
            if (self.isSwiping) {
                self.onSwipe();
            } else if (self.isPanning) {
                self.onPan();
            } else if (self.isZooming) {
                self.onZoom();
            }
        }
    };
    Guestures.prototype.onSwipe = function() {
        var self = this;
        var swiping = self.isSwiping;
        var left = self.sliderStartPos.left || 0;
        var angle;
        if (swiping === true) {
            if (Math.abs(self.distance) > 10) {
                self.canTap = false;
                if (self.instance.group.length < 2 && self.instance.opts.touch.vertical) {
                    self.isSwiping = "y";
                } else if (self.instance.isSliding || self.instance.opts.touch.vertical === false || self.instance.opts.touch.vertical === "auto" && $(window).width() > 800) {
                    self.isSwiping = "x";
                } else {
                    angle = Math.abs(Math.atan2(self.distanceY, self.distanceX) * 180 / Math.PI);
                    self.isSwiping = angle > 45 && angle < 135 ? "y" : "x";
                }
                self.instance.isSliding = self.isSwiping;
                self.startPoints = self.newPoints;
                $.each(self.instance.slides, function(index, slide) {
                    $.fancybox.stop(slide.$slide);
                    slide.$slide.css("transition-duration", "0ms");
                    slide.inTransition = false;
                    if (slide.pos === self.instance.current.pos) {
                        self.sliderStartPos.left = $.fancybox.getTranslate(slide.$slide).left;
                    }
                });
                if (self.instance.SlideShow && self.instance.SlideShow.isActive) {
                    self.instance.SlideShow.stop();
                }
            }
        } else {
            if (swiping == "x") {
                if (self.distanceX > 0 && (self.instance.group.length < 2 || self.instance.current.index === 0 && !self.instance.current.opts.loop)) {
                    left = left + Math.pow(self.distanceX, .8);
                } else if (self.distanceX < 0 && (self.instance.group.length < 2 || self.instance.current.index === self.instance.group.length - 1 && !self.instance.current.opts.loop)) {
                    left = left - Math.pow(-self.distanceX, .8);
                } else {
                    left = left + self.distanceX;
                }
            }
            self.sliderLastPos = {
                top: swiping == "x" ? 0 : self.sliderStartPos.top + self.distanceY,
                left: left
            };
            if (self.requestId) {
                cancelAFrame(self.requestId);
                self.requestId = null;
            }
            self.requestId = requestAFrame(function() {
                if (self.sliderLastPos) {
                    $.each(self.instance.slides, function(index, slide) {
                        var pos = slide.pos - self.instance.currPos;
                        $.fancybox.setTranslate(slide.$slide, {
                            top: self.sliderLastPos.top,
                            left: self.sliderLastPos.left + pos * self.canvasWidth + pos * slide.opts.gutter
                        });
                    });
                    self.$container.addClass("fancybox-is-sliding");
                }
            });
        }
    };
    Guestures.prototype.onPan = function() {
        var self = this;
        var newOffsetX, newOffsetY, newPos;
        self.canTap = false;
        if (self.contentStartPos.width > self.canvasWidth) {
            newOffsetX = self.contentStartPos.left + self.distanceX;
        } else {
            newOffsetX = self.contentStartPos.left;
        }
        newOffsetY = self.contentStartPos.top + self.distanceY;
        newPos = self.limitMovement(newOffsetX, newOffsetY, self.contentStartPos.width, self.contentStartPos.height);
        newPos.scaleX = self.contentStartPos.scaleX;
        newPos.scaleY = self.contentStartPos.scaleY;
        self.contentLastPos = newPos;
        if (self.requestId) {
            cancelAFrame(self.requestId);
            self.requestId = null;
        }
        self.requestId = requestAFrame(function() {
            $.fancybox.setTranslate(self.$content, self.contentLastPos);
        });
    };
    Guestures.prototype.limitMovement = function(newOffsetX, newOffsetY, newWidth, newHeight) {
        var self = this;
        var minTranslateX, minTranslateY, maxTranslateX, maxTranslateY;
        var canvasWidth = self.canvasWidth;
        var canvasHeight = self.canvasHeight;
        var currentOffsetX = self.contentStartPos.left;
        var currentOffsetY = self.contentStartPos.top;
        var distanceX = self.distanceX;
        var distanceY = self.distanceY;
        minTranslateX = Math.max(0, canvasWidth * .5 - newWidth * .5);
        minTranslateY = Math.max(0, canvasHeight * .5 - newHeight * .5);
        maxTranslateX = Math.min(canvasWidth - newWidth, canvasWidth * .5 - newWidth * .5);
        maxTranslateY = Math.min(canvasHeight - newHeight, canvasHeight * .5 - newHeight * .5);
        if (newWidth > canvasWidth) {
            if (distanceX > 0 && newOffsetX > minTranslateX) {
                newOffsetX = minTranslateX - 1 + Math.pow(-minTranslateX + currentOffsetX + distanceX, .8) || 0;
            }
            if (distanceX < 0 && newOffsetX < maxTranslateX) {
                newOffsetX = maxTranslateX + 1 - Math.pow(maxTranslateX - currentOffsetX - distanceX, .8) || 0;
            }
        }
        if (newHeight > canvasHeight) {
            if (distanceY > 0 && newOffsetY > minTranslateY) {
                newOffsetY = minTranslateY - 1 + Math.pow(-minTranslateY + currentOffsetY + distanceY, .8) || 0;
            }
            if (distanceY < 0 && newOffsetY < maxTranslateY) {
                newOffsetY = maxTranslateY + 1 - Math.pow(maxTranslateY - currentOffsetY - distanceY, .8) || 0;
            }
        }
        return {
            top: newOffsetY,
            left: newOffsetX
        };
    };
    Guestures.prototype.limitPosition = function(newOffsetX, newOffsetY, newWidth, newHeight) {
        var self = this;
        var canvasWidth = self.canvasWidth;
        var canvasHeight = self.canvasHeight;
        if (newWidth > canvasWidth) {
            newOffsetX = newOffsetX > 0 ? 0 : newOffsetX;
            newOffsetX = newOffsetX < canvasWidth - newWidth ? canvasWidth - newWidth : newOffsetX;
        } else {
            newOffsetX = Math.max(0, canvasWidth / 2 - newWidth / 2);
        }
        if (newHeight > canvasHeight) {
            newOffsetY = newOffsetY > 0 ? 0 : newOffsetY;
            newOffsetY = newOffsetY < canvasHeight - newHeight ? canvasHeight - newHeight : newOffsetY;
        } else {
            newOffsetY = Math.max(0, canvasHeight / 2 - newHeight / 2);
        }
        return {
            top: newOffsetY,
            left: newOffsetX
        };
    };
    Guestures.prototype.onZoom = function() {
        var self = this;
        var currentWidth = self.contentStartPos.width;
        var currentHeight = self.contentStartPos.height;
        var currentOffsetX = self.contentStartPos.left;
        var currentOffsetY = self.contentStartPos.top;
        var endDistanceBetweenFingers = distance(self.newPoints[0], self.newPoints[1]);
        var pinchRatio = endDistanceBetweenFingers / self.startDistanceBetweenFingers;
        var newWidth = Math.floor(currentWidth * pinchRatio);
        var newHeight = Math.floor(currentHeight * pinchRatio);
        var translateFromZoomingX = (currentWidth - newWidth) * self.percentageOfImageAtPinchPointX;
        var translateFromZoomingY = (currentHeight - newHeight) * self.percentageOfImageAtPinchPointY;
        var centerPointEndX = (self.newPoints[0].x + self.newPoints[1].x) / 2 - $(window).scrollLeft();
        var centerPointEndY = (self.newPoints[0].y + self.newPoints[1].y) / 2 - $(window).scrollTop();
        var translateFromTranslatingX = centerPointEndX - self.centerPointStartX;
        var translateFromTranslatingY = centerPointEndY - self.centerPointStartY;
        var newOffsetX = currentOffsetX + (translateFromZoomingX + translateFromTranslatingX);
        var newOffsetY = currentOffsetY + (translateFromZoomingY + translateFromTranslatingY);
        var newPos = {
            top: newOffsetY,
            left: newOffsetX,
            scaleX: self.contentStartPos.scaleX * pinchRatio,
            scaleY: self.contentStartPos.scaleY * pinchRatio
        };
        self.canTap = false;
        self.newWidth = newWidth;
        self.newHeight = newHeight;
        self.contentLastPos = newPos;
        if (self.requestId) {
            cancelAFrame(self.requestId);
            self.requestId = null;
        }
        self.requestId = requestAFrame(function() {
            $.fancybox.setTranslate(self.$content, self.contentLastPos);
        });
    };
    Guestures.prototype.ontouchend = function(e) {
        var self = this;
        var dMs = Math.max(new Date().getTime() - self.startTime, 1);
        var swiping = self.isSwiping;
        var panning = self.isPanning;
        var zooming = self.isZooming;
        self.endPoints = pointers(e);
        self.$container.removeClass("fancybox-controls--isGrabbing");
        $(document).off(".fb.touch");
        if (self.requestId) {
            cancelAFrame(self.requestId);
            self.requestId = null;
        }
        self.isSwiping = false;
        self.isPanning = false;
        self.isZooming = false;
        if (self.canTap) {
            return self.onTap(e);
        }
        self.speed = 366;
        self.velocityX = self.distanceX / dMs * .5;
        self.velocityY = self.distanceY / dMs * .5;
        self.speedX = Math.max(self.speed * .5, Math.min(self.speed * 1.5, 1 / Math.abs(self.velocityX) * self.speed));
        if (panning) {
            self.endPanning();
        } else if (zooming) {
            self.endZooming();
        } else {
            self.endSwiping(swiping);
        }
        return;
    };
    Guestures.prototype.endSwiping = function(swiping) {
        var self = this;
        var ret = false;
        self.instance.isSliding = false;
        self.sliderLastPos = null;
        if (swiping == "y" && Math.abs(self.distanceY) > 50) {
            $.fancybox.animate(self.instance.current.$slide, {
                top: self.sliderStartPos.top + self.distanceY + self.velocityY * 150,
                opacity: 0
            }, 150);
            ret = self.instance.close(true, 300);
        } else if (swiping == "x" && self.distanceX > 50 && self.instance.group.length > 1) {
            ret = self.instance.previous(self.speedX);
        } else if (swiping == "x" && self.distanceX < -50 && self.instance.group.length > 1) {
            ret = self.instance.next(self.speedX);
        }
        if (ret === false && (swiping == "x" || swiping == "y")) {
            self.instance.jumpTo(self.instance.current.index, 150);
        }
        self.$container.removeClass("fancybox-is-sliding");
    };
    Guestures.prototype.endPanning = function() {
        var self = this;
        var newOffsetX, newOffsetY, newPos;
        if (!self.contentLastPos) {
            return;
        }
        if (self.instance.current.opts.touch.momentum === false) {
            newOffsetX = self.contentLastPos.left;
            newOffsetY = self.contentLastPos.top;
        } else {
            newOffsetX = self.contentLastPos.left + self.velocityX * self.speed;
            newOffsetY = self.contentLastPos.top + self.velocityY * self.speed;
        }
        newPos = self.limitPosition(newOffsetX, newOffsetY, self.contentStartPos.width, self.contentStartPos.height);
        newPos.width = self.contentStartPos.width;
        newPos.height = self.contentStartPos.height;
        $.fancybox.animate(self.$content, newPos, 330);
    };
    Guestures.prototype.endZooming = function() {
        var self = this;
        var current = self.instance.current;
        var newOffsetX, newOffsetY, newPos, reset;
        var newWidth = self.newWidth;
        var newHeight = self.newHeight;
        if (!self.contentLastPos) {
            return;
        }
        newOffsetX = self.contentLastPos.left;
        newOffsetY = self.contentLastPos.top;
        reset = {
            top: newOffsetY,
            left: newOffsetX,
            width: newWidth,
            height: newHeight,
            scaleX: 1,
            scaleY: 1
        };
        $.fancybox.setTranslate(self.$content, reset);
        if (newWidth < self.canvasWidth && newHeight < self.canvasHeight) {
            self.instance.scaleToFit(150);
        } else if (newWidth > current.width || newHeight > current.height) {
            self.instance.scaleToActual(self.centerPointStartX, self.centerPointStartY, 150);
        } else {
            newPos = self.limitPosition(newOffsetX, newOffsetY, newWidth, newHeight);
            $.fancybox.setTranslate(self.content, $.fancybox.getTranslate(self.$content));
            $.fancybox.animate(self.$content, newPos, 150);
        }
    };
    Guestures.prototype.onTap = function(e) {
        var self = this;
        var $target = $(e.target);
        var instance = self.instance;
        var current = instance.current;
        var endPoints = e && pointers(e) || self.startPoints;
        var tapX = endPoints[0] ? endPoints[0].x - self.$stage.offset().left : 0;
        var tapY = endPoints[0] ? endPoints[0].y - self.$stage.offset().top : 0;
        var where;
        var process = function(prefix) {
            var action = current.opts[prefix];
            if ($.isFunction(action)) {
                action = action.apply(instance, [ current, e ]);
            }
            if (!action) {
                return;
            }
            switch (action) {
              case "close":
                instance.close(self.startEvent);
                break;

              case "toggleControls":
                instance.toggleControls(true);
                break;

              case "next":
                instance.next();
                break;

              case "nextOrClose":
                if (instance.group.length > 1) {
                    instance.next();
                } else {
                    instance.close(self.startEvent);
                }
                break;

              case "zoom":
                if (current.type == "image" && (current.isLoaded || current.$ghost)) {
                    if (instance.canPan()) {
                        instance.scaleToFit();
                    } else if (instance.isScaledDown()) {
                        instance.scaleToActual(tapX, tapY);
                    } else if (instance.group.length < 2) {
                        instance.close(self.startEvent);
                    }
                }
                break;
            }
        };
        if (e.originalEvent && e.originalEvent.button == 2) {
            return;
        }
        if (instance.isSliding) {
            return;
        }
        if (tapX > $target[0].clientWidth + $target.offset().left) {
            return;
        }
        if ($target.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container")) {
            where = "Outside";
        } else if ($target.is(".fancybox-slide")) {
            where = "Slide";
        } else if (instance.current.$content && instance.current.$content.has(e.target).length) {
            where = "Content";
        } else {
            return;
        }
        if (self.tapped) {
            clearTimeout(self.tapped);
            self.tapped = null;
            if (Math.abs(tapX - self.tapX) > 50 || Math.abs(tapY - self.tapY) > 50 || instance.isSliding) {
                return this;
            }
            process("dblclick" + where);
        } else {
            self.tapX = tapX;
            self.tapY = tapY;
            if (current.opts["dblclick" + where] && current.opts["dblclick" + where] !== current.opts["click" + where]) {
                self.tapped = setTimeout(function() {
                    self.tapped = null;
                    process("click" + where);
                }, 300);
            } else {
                process("click" + where);
            }
        }
        return this;
    };
    $(document).on("onActivate.fb", function(e, instance) {
        if (instance && !instance.Guestures) {
            instance.Guestures = new Guestures(instance);
        }
    });
    $(document).on("beforeClose.fb", function(e, instance) {
        if (instance && instance.Guestures) {
            instance.Guestures.destroy();
        }
    });
})(window, document, window.jQuery);

(function(document, $) {
    "use strict";
    var SlideShow = function(instance) {
        this.instance = instance;
        this.init();
    };
    $.extend(SlideShow.prototype, {
        timer: null,
        isActive: false,
        $button: null,
        speed: 3e3,
        init: function() {
            var self = this;
            self.$button = self.instance.$refs.toolbar.find("[data-fancybox-play]").on("click", function() {
                self.toggle();
            });
            if (self.instance.group.length < 2 || !self.instance.group[self.instance.currIndex].opts.slideShow) {
                self.$button.hide();
            }
        },
        set: function() {
            var self = this;
            if (self.instance && self.instance.current && (self.instance.current.opts.loop || self.instance.currIndex < self.instance.group.length - 1)) {
                self.timer = setTimeout(function() {
                    self.instance.next();
                }, self.instance.current.opts.slideShow.speed || self.speed);
            } else {
                self.stop();
                self.instance.idleSecondsCounter = 0;
                self.instance.showControls();
            }
        },
        clear: function() {
            var self = this;
            clearTimeout(self.timer);
            self.timer = null;
        },
        start: function() {
            var self = this;
            var current = self.instance.current;
            if (self.instance && current && (current.opts.loop || current.index < self.instance.group.length - 1)) {
                self.isActive = true;
                self.$button.attr("title", current.opts.i18n[current.opts.lang].PLAY_STOP).addClass("fancybox-button--pause");
                if (current.isComplete) {
                    self.set();
                }
            }
        },
        stop: function() {
            var self = this;
            var current = self.instance.current;
            self.clear();
            self.$button.attr("title", current.opts.i18n[current.opts.lang].PLAY_START).removeClass("fancybox-button--pause");
            self.isActive = false;
        },
        toggle: function() {
            var self = this;
            if (self.isActive) {
                self.stop();
            } else {
                self.start();
            }
        }
    });
    $(document).on({
        "onInit.fb": function(e, instance) {
            if (instance && !instance.SlideShow) {
                instance.SlideShow = new SlideShow(instance);
            }
        },
        "beforeShow.fb": function(e, instance, current, firstRun) {
            var SlideShow = instance && instance.SlideShow;
            if (firstRun) {
                if (SlideShow && current.opts.slideShow.autoStart) {
                    SlideShow.start();
                }
            } else if (SlideShow && SlideShow.isActive) {
                SlideShow.clear();
            }
        },
        "afterShow.fb": function(e, instance, current) {
            var SlideShow = instance && instance.SlideShow;
            if (SlideShow && SlideShow.isActive) {
                SlideShow.set();
            }
        },
        "afterKeydown.fb": function(e, instance, current, keypress, keycode) {
            var SlideShow = instance && instance.SlideShow;
            if (SlideShow && current.opts.slideShow && (keycode === 80 || keycode === 32) && !$(document.activeElement).is("button,a,input")) {
                keypress.preventDefault();
                SlideShow.toggle();
            }
        },
        "beforeClose.fb onDeactivate.fb": function(e, instance) {
            var SlideShow = instance && instance.SlideShow;
            if (SlideShow) {
                SlideShow.stop();
            }
        }
    });
    $(document).on("visibilitychange", function() {
        var instance = $.fancybox.getInstance();
        var SlideShow = instance && instance.SlideShow;
        if (SlideShow && SlideShow.isActive) {
            if (document.hidden) {
                SlideShow.clear();
            } else {
                SlideShow.set();
            }
        }
    });
})(document, window.jQuery);

(function(document, $) {
    "use strict";
    var fn = function() {
        var fnMap = [ [ "requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror" ], [ "webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror" ], [ "webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror" ], [ "mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror" ], [ "msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError" ] ];
        var val;
        var ret = {};
        var i, j;
        for (i = 0; i < fnMap.length; i++) {
            val = fnMap[i];
            if (val && val[1] in document) {
                for (j = 0; j < val.length; j++) {
                    ret[fnMap[0][j]] = val[j];
                }
                return ret;
            }
        }
        return false;
    }();
    if (!fn) {
        $.fancybox.defaults.btnTpl.fullScreen = false;
        return;
    }
    var FullScreen = {
        request: function(elem) {
            elem = elem || document.documentElement;
            elem[fn.requestFullscreen](elem.ALLOW_KEYBOARD_INPUT);
        },
        exit: function() {
            document[fn.exitFullscreen]();
        },
        toggle: function(elem) {
            elem = elem || document.documentElement;
            if (this.isFullscreen()) {
                this.exit();
            } else {
                this.request(elem);
            }
        },
        isFullscreen: function() {
            return Boolean(document[fn.fullscreenElement]);
        },
        enabled: function() {
            return Boolean(document[fn.fullscreenEnabled]);
        }
    };
    $(document).on({
        "onInit.fb": function(e, instance) {
            var $container;
            var $button = instance.$refs.toolbar.find("[data-fancybox-fullscreen]");
            if (instance && !instance.FullScreen && instance.group[instance.currIndex].opts.fullScreen) {
                $container = instance.$refs.container;
                $container.on("click.fb-fullscreen", "[data-fancybox-fullscreen]", function(e) {
                    e.stopPropagation();
                    e.preventDefault();
                    FullScreen.toggle($container[0]);
                });
                if (instance.opts.fullScreen && instance.opts.fullScreen.autoStart === true) {
                    FullScreen.request($container[0]);
                }
                instance.FullScreen = FullScreen;
            } else {
                $button.hide();
            }
        },
        "afterKeydown.fb": function(e, instance, current, keypress, keycode) {
            if (instance && instance.FullScreen && keycode === 70) {
                keypress.preventDefault();
                instance.FullScreen.toggle(instance.$refs.container[0]);
            }
        },
        "beforeClose.fb": function(instance) {
            if (instance && instance.FullScreen) {
                FullScreen.exit();
            }
        }
    });
    $(document).on(fn.fullscreenchange, function() {
        var instance = $.fancybox.getInstance();
        if (instance.current && instance.current.type === "image" && instance.isAnimating) {
            instance.current.$content.css("transition", "none");
            instance.isAnimating = false;
            instance.update(true, true, 0);
        }
    });
})(document, window.jQuery);

(function(document, $) {
    "use strict";
    var FancyThumbs = function(instance) {
        this.instance = instance;
        this.init();
    };
    $.extend(FancyThumbs.prototype, {
        $button: null,
        $grid: null,
        $list: null,
        isVisible: false,
        init: function() {
            var self = this;
            var first = self.instance.group[0], second = self.instance.group[1];
            self.$button = self.instance.$refs.toolbar.find("[data-fancybox-thumbs]");
            if (self.instance.group.length > 1 && self.instance.group[self.instance.currIndex].opts.thumbs && ((first.type == "image" || first.opts.thumb || first.opts.$thumb) && (second.type == "image" || second.opts.thumb || second.opts.$thumb))) {
                self.$button.on("click", function() {
                    self.toggle();
                });
                self.isActive = true;
            } else {
                self.$button.hide();
                self.isActive = false;
            }
        },
        create: function() {
            var instance = this.instance, list, src;
            this.$grid = $('<div class="fancybox-thumbs"></div>').appendTo(instance.$refs.container);
            list = "<ul>";
            $.each(instance.group, function(i, item) {
                src = item.opts.thumb || (item.opts.$thumb ? item.opts.$thumb.attr("src") : null);
                if (!src && item.type === "image") {
                    src = item.src;
                }
                if (src && src.length) {
                    list += '<li data-index="' + i + '"  tabindex="0" class="fancybox-thumbs-loading"><img data-src="' + src + '" /></li>';
                }
            });
            list += "</ul>";
            this.$list = $(list).appendTo(this.$grid).on("click", "li", function() {
                instance.jumpTo($(this).data("index"));
            });
            this.$list.find("img").hide().one("load", function() {
                var $parent = $(this).parent().removeClass("fancybox-thumbs-loading"), thumbWidth = $parent.outerWidth(), thumbHeight = $parent.outerHeight(), width, height, widthRatio, heightRatio;
                width = this.naturalWidth || this.width;
                height = this.naturalHeight || this.height;
                widthRatio = width / thumbWidth;
                heightRatio = height / thumbHeight;
                if (widthRatio >= 1 && heightRatio >= 1) {
                    if (widthRatio > heightRatio) {
                        width = width / heightRatio;
                        height = thumbHeight;
                    } else {
                        width = thumbWidth;
                        height = height / widthRatio;
                    }
                }
                $(this).css({
                    width: Math.floor(width),
                    height: Math.floor(height),
                    "margin-top": Math.min(0, Math.floor(thumbHeight * .3 - height * .3)),
                    "margin-left": Math.min(0, Math.floor(thumbWidth * .5 - width * .5))
                }).show();
            }).each(function() {
                this.src = $(this).data("src");
            });
        },
        focus: function() {
            if (this.instance.current) {
                this.$list.children().removeClass("fancybox-thumbs-active").filter('[data-index="' + this.instance.current.index + '"]').addClass("fancybox-thumbs-active").focus();
            }
        },
        close: function() {
            this.$grid.hide();
        },
        update: function() {
            this.instance.$refs.container.toggleClass("fancybox-show-thumbs", this.isVisible);
            if (this.isVisible) {
                if (!this.$grid) {
                    this.create();
                }
                this.instance.trigger("onThumbsShow");
                this.focus();
            } else if (this.$grid) {
                this.instance.trigger("onThumbsHide");
            }
            this.instance.update();
        },
        hide: function() {
            this.isVisible = false;
            this.update();
        },
        show: function() {
            this.isVisible = true;
            this.update();
        },
        toggle: function() {
            this.isVisible = !this.isVisible;
            this.update();
        }
    });
    $(document).on({
        "onInit.fb": function(e, instance) {
            if (instance && !instance.Thumbs) {
                instance.Thumbs = new FancyThumbs(instance);
            }
        },
        "beforeShow.fb": function(e, instance, item, firstRun) {
            var Thumbs = instance && instance.Thumbs;
            if (!Thumbs || !Thumbs.isActive) {
                return;
            }
            if (item.modal) {
                Thumbs.$button.hide();
                Thumbs.hide();
                return;
            }
            if (firstRun && instance.opts.thumbs.autoStart === true) {
                Thumbs.show();
            }
            if (Thumbs.isVisible) {
                Thumbs.focus();
            }
        },
        "afterKeydown.fb": function(e, instance, current, keypress, keycode) {
            var Thumbs = instance && instance.Thumbs;
            if (Thumbs && Thumbs.isActive && keycode === 71) {
                keypress.preventDefault();
                Thumbs.toggle();
            }
        },
        "beforeClose.fb": function(e, instance) {
            var Thumbs = instance && instance.Thumbs;
            if (Thumbs && Thumbs.isVisible && instance.opts.thumbs.hideOnClose !== false) {
                Thumbs.close();
            }
        }
    });
})(document, window.jQuery);

(function(document, window, $) {
    "use strict";
    if (!$.escapeSelector) {
        $.escapeSelector = function(sel) {
            var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
            var fcssescape = function(ch, asCodePoint) {
                if (asCodePoint) {
                    if (ch === "\0") {
                        return "ï¿½";
                    }
                    return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
                }
                return "\\" + ch;
            };
            return (sel + "").replace(rcssescape, fcssescape);
        };
    }
    var currentHash = null;
    var timerID = null;
    function parseUrl() {
        var hash = window.location.hash.substr(1);
        var rez = hash.split("-");
        var index = rez.length > 1 && /^\+?\d+$/.test(rez[rez.length - 1]) ? parseInt(rez.pop(-1), 10) || 1 : 1;
        var gallery = rez.join("-");
        if (index < 1) {
            index = 1;
        }
        return {
            hash: hash,
            index: index,
            gallery: gallery
        };
    }
    function triggerFromUrl(url) {
        var $el;
        if (url.gallery !== "") {
            $el = $("[data-fancybox='" + $.escapeSelector(url.gallery) + "']").eq(url.index - 1);
            if ($el.length) {
                $el.trigger("click");
            } else {
                $("#" + $.escapeSelector(url.gallery) + "").trigger("click");
            }
        }
    }
    function getGallery(instance) {
        var opts;
        if (!instance) {
            return false;
        }
        opts = instance.current ? instance.current.opts : instance.opts;
        return opts.$orig ? opts.$orig.data("fancybox") : opts.hash || "";
    }
    $(function() {
        setTimeout(function() {
            if ($.fancybox.defaults.hash === false) {
                return;
            }
            $(document).on({
                "onInit.fb": function(e, instance) {
                    var url, gallery;
                    if (instance.group[instance.currIndex].opts.hash === false) {
                        return;
                    }
                    url = parseUrl();
                    gallery = getGallery(instance);
                    if (gallery && url.gallery && gallery == url.gallery) {
                        instance.currIndex = url.index - 1;
                    }
                },
                "beforeShow.fb": function(e, instance, current, firstRun) {
                    var gallery;
                    if (current.opts.hash === false) {
                        return;
                    }
                    gallery = getGallery(instance);
                    if (gallery && gallery !== "") {
                        if (window.location.hash.indexOf(gallery) < 0) {
                            instance.opts.origHash = window.location.hash;
                        }
                        currentHash = gallery + (instance.group.length > 1 ? "-" + (current.index + 1) : "");
                        if ("replaceState" in window.history) {
                            if (timerID) {
                                clearTimeout(timerID);
                            }
                            timerID = setTimeout(function() {
                                window.history[firstRun ? "pushState" : "replaceState"]({}, document.title, window.location.pathname + window.location.search + "#" + currentHash);
                                timerID = null;
                            }, 300);
                        } else {
                            window.location.hash = currentHash;
                        }
                    }
                },
                "beforeClose.fb": function(e, instance, current) {
                    var gallery, origHash;
                    if (timerID) {
                        clearTimeout(timerID);
                    }
                    if (current.opts.hash === false) {
                        return;
                    }
                    gallery = getGallery(instance);
                    origHash = instance && instance.opts.origHash ? instance.opts.origHash : "";
                    if (gallery && gallery !== "") {
                        if ("replaceState" in history) {
                            window.history.replaceState({}, document.title, window.location.pathname + window.location.search + origHash);
                        } else {
                            window.location.hash = origHash;
                            $(window).scrollTop(instance.scrollTop).scrollLeft(instance.scrollLeft);
                        }
                    }
                    currentHash = null;
                }
            });
            $(window).on("hashchange.fb", function() {
                var url = parseUrl();
                if ($.fancybox.getInstance()) {
                    if (currentHash && currentHash !== url.gallery + "-" + url.index && !(url.index === 1 && currentHash == url.gallery)) {
                        currentHash = null;
                        $.fancybox.close();
                    }
                } else if (url.gallery !== "") {
                    triggerFromUrl(url);
                }
            });
            $(window).one("unload.fb popstate.fb", function() {
                $.fancybox.getInstance("close", true, 0);
            });
            triggerFromUrl(parseUrl());
        }, 50);
    });
})(document, window, window.jQuery);

var outdatedBrowser = function(options) {
    var outdated = document.getElementById("outdated");
    this.defaultOpts = {
        bgColor: "#f25648",
        color: "#ffffff",
        lowerThan: "transform",
        languagePath: "../outdatedbrowser/lang/en.html"
    };
    if (options) {
        if (options.lowerThan == "IE8" || options.lowerThan == "borderSpacing") {
            options.lowerThan = "borderSpacing";
        } else if (options.lowerThan == "IE9" || options.lowerThan == "boxShadow") {
            options.lowerThan = "boxShadow";
        } else if (options.lowerThan == "IE10" || options.lowerThan == "transform" || options.lowerThan == "" || typeof options.lowerThan === "undefined") {
            options.lowerThan = "transform";
        } else if (options.lowerThan == "IE11" || options.lowerThan == "borderImage") {
            options.lowerThan = "borderImage";
        }
        this.defaultOpts.bgColor = options.bgColor;
        this.defaultOpts.color = options.color;
        this.defaultOpts.lowerThan = options.lowerThan;
        this.defaultOpts.languagePath = options.languagePath;
        bkgColor = this.defaultOpts.bgColor;
        txtColor = this.defaultOpts.color;
        cssProp = this.defaultOpts.lowerThan;
        languagePath = this.defaultOpts.languagePath;
    } else {
        bkgColor = this.defaultOpts.bgColor;
        txtColor = this.defaultOpts.color;
        cssProp = this.defaultOpts.lowerThan;
        languagePath = this.defaultOpts.languagePath;
    }
    var done = true;
    function function_opacity(opacity_value) {
        outdated.style.opacity = opacity_value / 100;
        outdated.style.filter = "alpha(opacity=" + opacity_value + ")";
    }
    function function_fade_in(opacity_value) {
        function_opacity(opacity_value);
        if (opacity_value == 1) {
            outdated.style.display = "block";
        }
        if (opacity_value == 100) {
            done = true;
        }
    }
    var supports = function() {
        var div = document.createElement("div");
        var vendors = "Khtml Ms O Moz Webkit".split(" ");
        var len = vendors.length;
        return function(prop) {
            if (prop in div.style) return true;
            prop = prop.replace(/^[a-z]/, function(val) {
                return val.toUpperCase();
            });
            while (len--) {
                if (vendors[len] + prop in div.style) {
                    return true;
                }
            }
            return false;
        };
    }();
    if (!supports("" + cssProp + "")) {
        if (done && outdated.style.opacity !== "1") {
            done = false;
            for (var i = 1; i <= 100; i++) {
                setTimeout(function(x) {
                    return function() {
                        function_fade_in(x);
                    };
                }(i), i * 8);
            }
        }
    } else {
        return;
    }
    if (languagePath === " " || languagePath.length == 0) {
        startStylesAndEvents();
    } else {
        grabFile(languagePath);
    }
    function startStylesAndEvents() {
        var btnClose = document.getElementById("btnCloseUpdateBrowser");
        var btnUpdate = document.getElementById("btnUpdateBrowser");
        outdated.style.backgroundColor = bkgColor;
        outdated.style.color = txtColor;
        outdated.children[0].style.color = txtColor;
        outdated.children[1].style.color = txtColor;
        btnUpdate.style.color = txtColor;
        if (btnUpdate.style.borderColor) {
            btnUpdate.style.borderColor = txtColor;
        }
        btnClose.style.color = txtColor;
        btnClose.onmousedown = function() {
            outdated.style.display = "none";
            return false;
        };
        btnUpdate.onmouseover = function() {
            this.style.color = bkgColor;
            this.style.backgroundColor = txtColor;
        };
        btnUpdate.onmouseout = function() {
            this.style.color = txtColor;
            this.style.backgroundColor = bkgColor;
        };
    }
    var ajaxEnglishDefault = "<h6>Your browser is out-of-date!</h6>" + '<p>Update your browser to view this website correctly. <a id="btnUpdateBrowser" href="http://outdatedbrowser.com/">Update my browser now </a></p>' + '<p class="last"><a href="#" id="btnCloseUpdateBrowser" title="Close">&times;</a></p>';
    function getHTTPObject() {
        var xhr = false;
        if (window.XMLHttpRequest) {
            xhr = new XMLHttpRequest();
        } else if (window.ActiveXObject) {
            try {
                xhr = new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {
                try {
                    xhr = new ActiveXObject("Microsoft.XMLHTTP");
                } catch (e) {
                    xhr = false;
                }
            }
        }
        return xhr;
    }
    function grabFile(file) {
        var request = getHTTPObject();
        if (request) {
            request.onreadystatechange = function() {
                displayResponse(request);
            };
            request.open("GET", file, true);
            request.send(null);
        }
        return false;
    }
    function displayResponse(request) {
        var insertContentHere = document.getElementById("outdated");
        if (request.readyState == 4) {
            if (request.status == 200 || request.status == 304) {
                insertContentHere.innerHTML = request.responseText;
            } else {
                insertContentHere.innerHTML = ajaxEnglishDefault;
            }
            startStylesAndEvents();
        }
        return false;
    }
};

function addLoadEvent(func) {
    var oldonload = window.onload;
    if (typeof window.onload != "function") {
        window.onload = func;
    } else {
        window.onload = function() {
            if (oldonload) {
                oldonload();
            }
            func();
        };
    }
}

addLoadEvent(function() {
    outdatedBrowser({
        bgColor: "#f25648",
        color: "#ffffff",
        lowerThan: "transform",
        languagePath: ""
    });
});

function fadeOut($el) {
    $el.animate({
        opacity: "0.5"
    });
}

function fadeIn($el) {
    $el.animate({
        opacity: "1"
    });
}

$(function() {
    var $b = $("body");
    $("img").unveil(50, function() {
        $.fn.matchHeight._update();
    });
    $(".hasTooltip").tooltip({
        container: "body"
    });
    $(".hasPopover").popover();
    $('[data-toggle="offcanvas"]').click(function() {
        $(".row-offcanvas").toggleClass("active");
    });
    if ($b.hasClass("cl-details") && typeof staffelpreise != "undefined") {
        $b.on("change", "#amountToBasket", function() {
            var amount = this.value;
            var staffelpreis = staffelpreise.find(function(set) {
                return set.from <= amount;
            });
            if (staffelpreis) {
                var preis = typeof staffelpreis.abs !== "undefined" ? staffelpreis.abs : einzelpreis / 100 * (100 - staffelpreis.perc);
                $("#detailsMain .price").text((amount * preis).toFixed(2).toLocaleString());
                $("#detailsMain .unitprice > span").text(preis.toFixed(2).toLocaleString());
                $("#detailsMain .unitprice").show();
            } else {
                $("#detailsMain .price").text((amount * einzelpreis).toLocaleString());
                $("#detailsMain .unitprice > span").text(einzelpreis.toFixed(2).toLocaleString());
                $("#detailsMain .unitprice").show();
            }
        });
    }
    $b.on("change", "#blshowshipaddress", function() {
        if (this.checked) $("#shippingAddress").fadeOut("fast"); else $("#shippingAddress").fadeIn("slow");
    });
    var submitTimeout;
    $b.on("change", "input[name^='aproducts'][id^='amount_']", function() {
        if (typeof submitTimeout !== "undefined") window.clearTimeout(submitTimeout);
        submitTimeout = window.setTimeout(function(input) {
            input.blur();
        }, 5e3, $(this));
    }).on("focusout", "input[name^='aproducts'][id^='amount_']", function() {
        if ($(this).val() != $(this).data("value")) $(this).parents("form").submit();
    });
    $b.on("change", "input[name='oxaddressid']", function() {
        var selectValue = $(this).val();
        if ($("input[name=reloadaddress]")) $("input[name=reloadaddress]").val(selectValue === "-1" ? 1 : 2);
        if (selectValue !== "-1") {
            var address = aShipAddr[selectValue];
            for (var field in address) {
                if (address.hasOwnProperty(field)) {
                    $("input[type='text'][id='deladr_" + field + "']").val(address[field]);
                    $("input[id^='deladr_" + field + "'][value='" + address[field] + "'").prop("checked", true);
                    $("select[id^='deladr_" + field + "'] option[value='" + address[field] + "'").prop("selected", true);
                }
            }
        } else {
            $("input[type='text'][id^='deladr']").val("");
            $("input[id^='deladr']:checked").prop("checked", null);
            $("select[id^='deladr'] option:selected").prop("selected", null);
            $("#shippingAddressForm").show();
        }
    });
    $b.on("change", "input[name='sShipSet']", function() {
        var $form = $("#shipping");
        fadeOut($("#content"));
        $.ajax({
            url: $form.attr("action") + "&ajax=1",
            type: "POST",
            data: $form.serialize(),
            success: function(result) {
                $("#content").html(result);
                fadeIn($("#content"));
            }
        });
    });
    $b.on("change", "input[name='paymentid']", function() {
        var $form = $("#payment"), paymentid = $("input[name='paymentid']:checked").val();
        $("div[id^='payment_details_']", $form).hide("fast");
        $("input,select").attr("disabled", false);
        $("#payment_details_" + paymentid, $form).show("fast");
        $("input,select").attr("disabled", false);
        $("#paymentNextStepBottom").attr("disabled", false);
    });
    $(".validate").bootstrapValidator({
        framework: "bootstrap",
        fields: {
            lgn_usr: {
                validators: {
                    notEmpty: {
                        message: "Bitte geben Sie Ihre E-Mail Adresse ein!"
                    }
                }
            },
            lgn_pwd: {
                validators: {
                    notEmpty: {
                        message: "Bitte geben Sie ein Passwort ein!"
                    }
                }
            },
            lgn_pwd2: {
                validators: {
                    identical: {
                        field: "lgn_pwd",
                        message: "Die PasswÃ¶rter mÃ¼ssen Ã¼bereinstimmen!"
                    }
                }
            },
            password_old: {
                validators: {
                    required: {
                        message: "Bitte geben Sie Ihr altes Passwort ein!"
                    },
                    notEmpty: {
                        message: "Bitte geben Sie Ihr altes Passwort ein!"
                    }
                }
            },
            password_new: {
                validators: {
                    required: {
                        message: "Bitte geben Sie ein neues Passwort ein!"
                    },
                    notEmpty: {
                        message: "Bitte geben Sie ein neues Passwort ein!"
                    },
                    regexp: {
                        regexp: /^(?=.*[a-zA-Z])(?=.*\d)$/i,
                        message: "Das neue Passwort muss zumindest aus Buchstaben und Ziffern bestehen!"
                    },
                    stringLength: {
                        min: 6,
                        message: "Das Passwort muss mindestens 6 Zeichen lang sein!"
                    }
                }
            },
            password_new_confirm: {
                validators: {
                    required: {
                        message: "Bitte geben Sie das neue Passwort nochmal ein!"
                    },
                    notEmpty: {
                        message: "Bitte geben Sie das neue Passwort nochmal ein!"
                    },
                    identical: {
                        field: "password_new",
                        message: "Die PasswÃ¶rter mÃ¼ssen Ã¼bereinstimmen!"
                    }
                }
            },
            c_text: {
                validators: {
                    identical: {
                        field: "c_mac",
                        message: "Ihre Eingabe entspricht nicht dem PrÃ¼fcode."
                    }
                }
            },
            c_mac: {
                validators: {
                    notEmpty: {
                        message: "Bitte geben Sie den PrÃ¼fcode ein."
                    },
                    identical: {
                        field: "c_text",
                        message: "Ihre Eingabe entspricht nicht dem PrÃ¼fcode."
                    }
                }
            }
        }
    });
});

$(function() {});

$(function() {
    var oCompPlayground = $("#comparePlayground");
    if (oCompPlayground.length > 0) {
        $("#compareLandscape").scroll(function(oEvent) {
            $(this).toggleClass("shadowed", $(this).scrollLeft() > 0);
        });
    }
});

$(function() {
    function selectVariant() {
        var $select = $(this), $option = $("option:selected", $select);
        var $aVarSelections = $("form.js-oxProductForm [id^='varselid_']");
        if ($option.hasClass("not-available")) {
            for (var i = 0; i < $aVarSelections.length; i++) {
                console.log($($aVarSelections[i]).attr("id"));
            }
            $("form.js-oxProductForm input[name=anid]").attr("value", $("form.js-oxProductForm input[name=parentid]").attr("value"));
        }
        if ($select.parents("#variants").length > 0) {
            var data = {};
            $("form.js-oxWidgetReload").serializeArray().map(function(x) {
                data[x.name] = x.value;
            });
            $aVarSelections.serializeArray().map(function(x) {
                data[x.name] = x.value;
            });
            $.ajax({
                url: $("form.js-oxWidgetReload").attr("action"),
                data: data,
                success: function(data, textStatus, jqXHR) {
                    $("#details_container").html(data);
                    $("script", $("#details_container")).each(function() {
                        try {
                            if (this.src != "" && $('body > script[src="' + this.src + '"]').length == 0) {
                                $("body").append(this);
                                document.body.appendChild(this);
                                return true;
                            }
                            eval(this.innerHTML);
                        } catch (e) {
                            console.log(e);
                        }
                        $(this).remove();
                    });
                    return true;
                }
            });
        }
        return false;
    }
    $(document).on("change", "[id^='varselid_']", selectVariant);
});

$(document).ready(function() {
    var $oReviewRating = $("#reviewRating");
    if ($oReviewRating.length) {
        var $oRatingForm = $("#rating");
        $oReviewRating.find(".ox-write-review").on("click mouseenter touch", function() {
            var $this = $(this), $oParent = $this.parent();
            $oParent.prevAll().find("i").removeClass("fa-star-o").addClass("fa-star");
            $oParent.nextAll().find("i").removeClass("fa-star").addClass("fa-star-o");
            $this.find("i").removeClass("fa-star-o").addClass("fa-star");
            $oRatingForm.find("#recommListRating, #productRating").val($oParent.attr("data-rate-value"));
        });
    }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,